{"version":3,"file":"metaid.umd.js","sources":["../src/enum/index.ts","../node_modules/rollup-plugin-node-globals/src/global.js","../node_modules/buffer-es6/base64.js","../node_modules/buffer-es6/ieee754.js","../node_modules/buffer-es6/isArray.js","../node_modules/buffer-es6/index.js","../node_modules/mvc-lib/node_modules/bn.js/lib/bn.js","../node_modules/mvc-lib/lib/util/_.js","../node_modules/mvc-lib/lib/errors/spec.js","../node_modules/mvc-lib/lib/errors/index.js","../node_modules/mvc-lib/lib/util/preconditions.js","../node_modules/mvc-lib/lib/crypto/bn.js","../node_modules/bn.js/lib/bn.js","../node_modules/minimalistic-assert/index.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/brorand/index.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/inherits/inherits_browser.js","../node_modules/inherits/inherits.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/mvc-lib/lib/crypto/point.js","../node_modules/mvc-lib/lib/util/js.js","../node_modules/mvc-lib/lib/crypto/signature.js","../node_modules/mvc-lib/lib/crypto/hash.browser.js","../node_modules/mvc-lib/lib/crypto/hash.js","../node_modules/mvc-lib/lib/networks.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/mvc-lib/lib/encoding/base58.js","../node_modules/mvc-lib/lib/encoding/base58check.js","../node_modules/mvc-lib/lib/script/write-u8-le.js","../node_modules/mvc-lib/lib/script/write-u16-le.js","../node_modules/mvc-lib/lib/script/write-u32-le.js","../node_modules/mvc-lib/lib/script/write-i32-le.js","../node_modules/mvc-lib/lib/script/write-varint.js","../node_modules/mvc-lib/lib/encoding/bufferwriter.js","../node_modules/mvc-lib/lib/opcode.js","../node_modules/mvc-lib/lib/encoding/decode-script-chunks.js","../node_modules/mvc-lib/lib/encoding/is-hex.js","../node_modules/mvc-lib/lib/encoding/decode-hex.js","../node_modules/mvc-lib/lib/script/write-push-data.js","../node_modules/mvc-lib/lib/encoding/decode-asm.js","../node_modules/mvc-lib/lib/encoding/encode-hex.js","../node_modules/mvc-lib/lib/script/script.js","../node_modules/mvc-lib/lib/script/stack.js","../node_modules/mvc-lib/lib/encoding/bufferreader.js","../node_modules/mvc-lib/lib/encoding/varint.js","../node_modules/mvc-lib/lib/transaction/output.js","../node_modules/mvc-lib/lib/transaction/input/input.js","../node_modules/mvc-lib/node_modules/inherits/inherits_browser.js","../node_modules/mvc-lib/node_modules/inherits/inherits.js","../node_modules/mvc-lib/lib/transaction/signature.js","../node_modules/mvc-lib/lib/transaction/input/publickey.js","../node_modules/mvc-lib/lib/transaction/input/publickeyhash.js","../node_modules/mvc-lib/lib/transaction/input/multisig.js","../node_modules/mvc-lib/lib/transaction/input/multisigscripthash.js","../node_modules/mvc-lib/lib/transaction/input/index.js","../node_modules/mvc-lib/lib/transaction/sighash.js","../node_modules/mvc-lib/lib/transaction/unspentoutput.js","../node_modules/mvc-lib/lib/transaction/transaction.js","../node_modules/mvc-lib/lib/transaction/index.js","../node_modules/mvc-lib/lib/script/interpreter.js","../node_modules/mvc-lib/lib/script/index.js","../node_modules/mvc-lib/lib/address.js","../node_modules/mvc-lib/lib/crypto/random.js","../node_modules/mvc-lib/lib/privatekey.js","../node_modules/mvc-lib/lib/publickey.js","../node_modules/mvc-lib/lib/crypto/ecdsa.js","../node_modules/mvc-lib/lib/block/blockheader.js","../node_modules/mvc-lib/lib/block/block.js","../node_modules/mvc-lib/lib/block/merkleblock.js","../node_modules/mvc-lib/lib/block/index.js","../node_modules/mvc-lib/lib/hdpublickey.js","../node_modules/mvc-lib/lib/hdprivatekey.js","../node_modules/mvc-lib/index.js","../src/main.ts"],"sourcesContent":["export enum NodeName {\r\n  ETHBinding = \"EVMBinding\",\r\n  MetaFile = \"MetaFile\",\r\n  NFTAvatar = \"NFTAvatar\",\r\n  PayComment = \"PayComment\",\r\n  PayLike = \"PayLike\",\r\n  PayFollow = \"PayFollow\",\r\n  SimpleMicroblog = \"SimpleMicroblog\",\r\n  SimpleRePost = \"SimpleRePost\",\r\n  SimpleGroupChat = \"SimpleGroupChat\",\r\n  SimpleFileGroupChat = \"SimpleFileGroupChat\",\r\n  SimpleCommunity = \"SimpleCommunity\",\r\n  SimpleCommunityJoin = \"SimpleCommunityJoin\",\r\n  SimpleGroupCreate = \"SimpleGroupCreate\",\r\n  ShowMsg = \"ShowMsg\",\r\n  NftIssue = \"NftIssue\",\r\n  NftGenesis = \"NftGenesis\",\r\n  NftSell = \"NftSell\",\r\n  NftCancel = \"NftCancel\",\r\n  nftBuy = \"nftBuy\",\r\n  FtGenesis = \"FtGenesis\",\r\n  FtIssue = \"FtIssue\",\r\n  SimpleRedEnvelope = \"SimpleRedEnvelope\",\r\n  OpenRedenvelope = \"OpenRedenvelope\",\r\n  SimplePublicShare = \"SimplePublicShare\",\r\n  LegalSellNft = \"sell_nft\",\r\n  Name = \"name\",\r\n  MetaNote = \"metanote\",\r\n  SimpleFileMsg = \"SimpleFileMsg\",\r\n  SimpleCreateAnnouncement = \"SimpleCreateAnnouncement\",\r\n  SimpleAnnouncementQuote = \"SimpleAnnouncementQuote\",\r\n  SimpleDAOCreate = \"SimpleDAOCreate\",\r\n  NftName = \"NftName\",\r\n  NftTransfer = \"NftTransfer\",\r\n  SendMoney = \"SendMoney\",\r\n  Phone = \"phone\",\r\n  Email = \"email\",\r\n  ShareChatMessage = \"ShareChatMessage\",\r\n  // DAO\r\n}\r\n\r\nexport enum SdkPayType {\r\n  SPACE = \"SPACE\",\r\n  BTC = \"BTC\",\r\n  ETH = \"ETH\",\r\n}\r\n\r\nexport enum IsEncrypt {\r\n  Yes = 1,\r\n  No = 0,\r\n}\r\n\r\nexport enum HdWalletChain {\r\n  MVC = \"mvc\",\r\n}\r\n\r\nexport enum Network {\r\n  mainnet = \"mainnet\",\r\n  testnet = \"testnet\",\r\n}\r\n\r\nexport enum WalletPath {\r\n  mainnet = 10001,\r\n  testnet = 236,\r\n}\r\n\r\nexport enum JobStepStatus {\r\n  Waiting = \"waiting\",\r\n  Success = \"success\",\r\n  Failed = \"failed\",\r\n}\r\n\r\nexport enum JobStatus {\r\n  Waiting = \"waiting\",\r\n  Success = \"success\",\r\n  Failed = \"failed\",\r\n}\r\n\r\nexport enum MetaIdTag {\r\n  mainnet = \"metaid\",\r\n  testnet = \"testmetaid\",\r\n}\r\n\r\nexport enum MetaNameOp {\r\n  register = 1,\r\n  renew = 2,\r\n  updataInfo = 3,\r\n}\r\n\r\nexport enum MetaNameReqType {\r\n  register = \"register\",\r\n  renew = \"renew\",\r\n  updataInfo = \"updateinfo\",\r\n}\r\n\r\nexport enum MetaNameReqCode {\r\n  register = 1,\r\n  renew = 21,\r\n  updataInfo = 22,\r\n}\r\n\r\nexport enum Chains {\r\n  MVC = \"mvc\",\r\n  ETH = \"eth\",\r\n}\r\n\r\nexport enum MetaidTag {\r\n  test = \"testmetaid\",\r\n  main = \"metaid\",\r\n}\r\n","export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\nexport function toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nexport function fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","\nexport function read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexport function write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nexport default Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nimport * as base64 from './base64'\nimport * as ieee754 from './ieee754'\nimport isArray from './isArray'\n\nexport var INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength()\nexport {_kMaxLength as kMaxLength};\nfunction typedArraySupport () {\n  return true;\n  // rollup issues\n  // try {\n  //   var arr = new Uint8Array(1)\n  //   arr.__proto__ = {\n  //     __proto__: Uint8Array.prototype,\n  //     foo: function () { return 42 }\n  //   }\n  //   return arr.foo() === 42 && // typed array instances can be augmented\n  //       typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n  //       arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  // } catch (e) {\n  //   return false\n  // }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    // Object.defineProperty(Buffer, Symbol.species, {\n    //   value: null,\n    //   configurable: true\n    // })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nexport function SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nexport function isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n\nvar _ = {}\n\n_.isArray = t => Array.isArray(t)\n_.isNumber = t => typeof t === 'number'\n_.isObject = t => t && typeof t === 'object'\n_.isString = t => typeof t === 'string'\n_.isUndefined = t => typeof t === 'undefined'\n_.isFunction = t => typeof t === 'function'\n_.isNull = t => t === null\n_.isDate = t => t instanceof Date\n_.extend = (a, b) => Object.assign(a, b)\n_.noop = () => { }\n_.every = (a, f) => a.every(f || (t => t))\n_.map = (a, f) => Array.from(a).map(f || (t => t))\n_.includes = (a, e) => a.includes(e)\n_.each = (a, f) => a.forEach(f)\n_.clone = o => Object.assign({}, o)\n_.pick = (object, keys) => {\n  const obj = {}\n  keys.forEach(key => {\n    if (typeof object[key] !== 'undefined') { obj[key] = object[key] }\n  })\n  return obj\n}\n_.values = o => Object.values(o)\n_.filter = (a, f) => a.filter(f)\n_.reduce = (a, f, s) => a.reduce(f, s)\n_.without = (a, n) => a.filter(t => t !== n)\n_.shuffle = a => {\n  const result = a.slice(0)\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]]\n  }\n  return result\n}\n_.difference = (a, b) => a.filter(t => !b.includes(t))\n_.findIndex = (a, f) => a.findIndex(f)\n_.some = (a, f) => a.some(f)\n_.range = n => [...Array(n).keys()]\n\nmodule.exports = _\n","'use strict'\n\nvar docsURL = 'https://docs.moneybutton.com/'\n\nmodule.exports = [{\n  name: 'InvalidB58Char',\n  message: 'Invalid Base58 character: {0} in {1}'\n}, {\n  name: 'InvalidB58Checksum',\n  message: 'Invalid Base58 checksum for {0}'\n}, {\n  name: 'InvalidNetwork',\n  message: 'Invalid version for network: got {0}'\n}, {\n  name: 'InvalidState',\n  message: 'Invalid state: {0}'\n}, {\n  name: 'NotImplemented',\n  message: 'Function {0} was not implemented yet'\n}, {\n  name: 'InvalidNetworkArgument',\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\n}, {\n  name: 'InvalidArgument',\n  message: function () {\n    return 'Invalid Argument' + (arguments[0] ? (': ' + arguments[0]) : '') +\n      (arguments[1] ? (' Documentation: ' + docsURL + arguments[1]) : '')\n  }\n}, {\n  name: 'AbstractMethodInvoked',\n  message: 'Abstract Method Invocation: {0}'\n}, {\n  name: 'InvalidArgumentType',\n  message: function () {\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0]\n  }\n}, {\n  name: 'Unit',\n  message: 'Internal Error on Unit {0}',\n  errors: [{\n    'name': 'UnknownCode',\n    'message': 'Unrecognized unit code: {0}'\n  }, {\n    'name': 'InvalidRate',\n    'message': 'Invalid exchange rate: {0}'\n  }]\n}, {\n  name: 'MerkleBlock',\n  message: 'Internal Error on MerkleBlock {0}',\n  errors: [{\n    'name': 'InvalidMerkleTree',\n    'message': 'This MerkleBlock contain an invalid Merkle Tree'\n  }]\n}, {\n  name: 'Transaction',\n  message: 'Internal Error on Transaction {0}',\n  errors: [{\n    name: 'Input',\n    message: 'Internal Error on Input {0}',\n    errors: [{\n      name: 'MissingScript',\n      message: 'Need a script to create an input'\n    }, {\n      name: 'UnsupportedScript',\n      message: 'Unsupported input script type: {0}'\n    }, {\n      name: 'MissingPreviousOutput',\n      message: 'No previous output information.'\n    }]\n  }, {\n    name: 'NeedMoreInfo',\n    message: '{0}'\n  }, {\n    name: 'InvalidSorting',\n    message: 'The sorting function provided did not return the change output as one of the array elements'\n  }, {\n    name: 'InvalidOutputAmountSum',\n    message: '{0}'\n  }, {\n    name: 'MissingSignatures',\n    message: 'Some inputs have not been fully signed'\n  }, {\n    name: 'InvalidIndex',\n    message: 'Invalid index: {0} is not between 0, {1}'\n  }, {\n    name: 'UnableToVerifySignature',\n    message: 'Unable to verify signature: {0}'\n  }, {\n    name: 'DustOutputs',\n    message: 'Dust amount detected in one output'\n  }, {\n    name: 'InvalidSatoshis',\n    message: 'Output satoshis are invalid'\n  }, {\n    name: 'FeeError',\n    message: 'Internal Error on Fee {0}',\n    errors: [{\n      name: 'TooSmall',\n      message: 'Fee is too small: {0}'\n    }, {\n      name: 'TooLarge',\n      message: 'Fee is too large: {0}'\n    }, {\n      name: 'Different',\n      message: 'Unspent value is different from specified fee: {0}'\n    }]\n  }, {\n    name: 'ChangeAddressMissing',\n    message: 'Change address is missing'\n  }, {\n    name: 'BlockHeightTooHigh',\n    message: 'Block Height can be at most 2^32 -1'\n  }, {\n    name: 'NLockTimeOutOfRange',\n    message: 'Block Height can only be between 0 and 499 999 999'\n  }, {\n    name: 'LockTimeTooEarly',\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\n  }, {\n    name: 'TransactionAlreadySealed',\n    message: 'Cannot update sealed transaction'\n  }]\n}, {\n  name: 'Script',\n  message: 'Internal Error on Script {0}',\n  errors: [{\n    name: 'UnrecognizedAddress',\n    message: 'Expected argument {0} to be an address'\n  }, {\n    name: 'CantDeriveAddress',\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\n  }, {\n    name: 'InvalidBuffer',\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\n  }, {\n    name: 'InvalidOpcode',\n    message: 'Invalid Opcode: got \"{0}\"'\n  }]\n}, {\n  name: 'HDPrivateKey',\n  message: 'Internal Error on HDPrivateKey {0}',\n  errors: [{\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\n  }, {\n    name: 'InvalidEntropyArgument',\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\n    errors: [{\n      name: 'TooMuchEntropy',\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\n    }, {\n      name: 'NotEnoughEntropy',\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\n    }]\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xprivkey string in {0}'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path: {0}'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\n  }]\n}, {\n  name: 'HDPublicKey',\n  message: 'Internal Error on HDPublicKey {0}',\n  errors: [{\n    name: 'ArgumentIsPrivateExtended',\n    message: 'Argument is an extended private key: {0}'\n  }, {\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument: got {0}'\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xpubkey: got \"{0}\"'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\n  }, {\n    name: 'InvalidIndexCantDeriveHardened',\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\n  }, {\n    name: 'MustSupplyArgument',\n    message: 'Must supply an argument to create a HDPublicKey'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\n  }]\n}]\n","'use strict'\n\nvar _ = require('../util/_')\n\nfunction format (message, args) {\n  return message\n    .replace('{0}', args[0])\n    .replace('{1}', args[1])\n    .replace('{2}', args[2])\n}\nvar traverseNode = function (parent, errorDefinition) {\n  var NodeError = function () {\n    if (_.isString(errorDefinition.message)) {\n      this.message = format(errorDefinition.message, arguments)\n    } else if (_.isFunction(errorDefinition.message)) {\n      this.message = errorDefinition.message.apply(null, arguments)\n    } else {\n      throw new Error('Invalid error definition for ' + errorDefinition.name)\n    }\n    this.stack = this.message + '\\n' + (new Error()).stack\n  }\n  NodeError.prototype = Object.create(parent.prototype)\n  NodeError.prototype.name = parent.prototype.name + errorDefinition.name\n  parent[errorDefinition.name] = NodeError\n  if (errorDefinition.errors) {\n    childDefinitions(NodeError, errorDefinition.errors)\n  }\n  return NodeError\n}\n\nvar childDefinitions = function (parent, childDefinitions) {\n  _.each(childDefinitions, function (childDefinition) {\n    traverseNode(parent, childDefinition)\n  })\n}\n\nvar traverseRoot = function (parent, errorsDefinition) {\n  childDefinitions(parent, errorsDefinition)\n  return parent\n}\n\nvar bsv = {}\nbsv.Error = function () {\n  this.message = 'Internal error'\n  this.stack = this.message + '\\n' + (new Error()).stack\n}\nbsv.Error.prototype = Object.create(Error.prototype)\nbsv.Error.prototype.name = 'bsv.Error'\n\nvar data = require('./spec')\ntraverseRoot(bsv.Error, data)\n\nmodule.exports = bsv.Error\n\nmodule.exports.extend = function (spec) {\n  return traverseNode(bsv.Error, spec)\n}\n","'use strict'\n\nvar errors = require('../errors')\nvar _ = require('../util/_')\n\nmodule.exports = {\n  checkState: function (condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message)\n    }\n  },\n  checkArgument: function (condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath)\n    }\n  },\n  checkArgumentType: function (argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)'\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var buffer = require('buffer') // './buffer' fails on cordova & RN\n        if (!buffer.Buffer.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName)\n        }\n      } else if (typeof argument !== type) { // eslint-disable-line\n        throw new errors.InvalidArgumentType(argument, type, argumentName)\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName)\n      }\n    }\n  }\n}\n","'use strict'\n\nvar BN = require('bn.js')\nvar $ = require('../util/preconditions')\nvar _ = require('../util/_')\n\nvar reversebuf = function (buf) {\n  var buf2 = Buffer.alloc(buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i]\n  }\n  return buf2\n}\n\nBN.Zero = new BN(0)\nBN.One = new BN(1)\nBN.Minus1 = new BN(-1)\n\n/**\n * Convert a number into a big number.\n *\n * @param {number} n Any positive or negative integer.\n */\nBN.fromNumber = function (n) {\n  $.checkArgument(_.isNumber(n))\n  return new BN(n)\n}\n\n/**\n * Convert a string number into a big number.\n *\n * @param {string} str Any positive or negative integer formatted as a string.\n * @param {number} base The base of the number, defaults to 10.\n */\nBN.fromString = function (str, base) {\n  $.checkArgument(_.isString(str))\n  return new BN(str, base)\n}\n\n/**\n * Convert a buffer (such as a 256 bit binary private key) into a big number.\n * Sometimes these numbers can be formatted either as 'big endian' or 'little\n * endian', and so there is an opts parameter that lets you specify which\n * endianness is specified.\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromBuffer = function (buf, opts) {\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf)\n  }\n  var hex = buf.toString('hex')\n  var bn = new BN(hex, 16)\n  return bn\n}\n\n/**\n * Instantiate a BigNumber from a \"signed magnitude buffer\". (a buffer where the\n * most significant bit represents the sign (0 = positive, 1 = negative)\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromSM = function (buf, opts) {\n  var ret\n  if (buf.length === 0) {\n    return BN.fromBuffer(Buffer.from([0]))\n  }\n\n  var endian = 'big'\n  if (opts) {\n    endian = opts.endian\n  }\n  if (endian === 'little') {\n    buf = reversebuf(buf)\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f\n    ret = BN.fromBuffer(buf)\n    ret.neg().copy(ret)\n  } else {\n    ret = BN.fromBuffer(buf)\n  }\n  return ret\n}\n\n/**\n * Convert a big number into a number.\n */\nBN.prototype.toNumber = function () {\n  return parseInt(this.toString(10), 10)\n}\n\n/**\n * Convert a big number into a buffer. This is somewhat ambiguous, so there is\n * an opts parameter that let's you specify the endianness or the size.\n * opts.endian can be either 'big' or 'little' and opts.size can be any\n * sufficiently large number of bytes. If you always want to create a 32 byte\n * big endian number, then specify opts = { endian: 'big', size: 32 }\n *\n * @param {Object} opts Defaults to { endian: 'big', size: 32 }\n */\nBN.prototype.toBuffer = function (opts) {\n  var buf, hex\n  if (opts && opts.size) {\n    hex = this.toString(16, 2)\n    var natlen = hex.length / 2\n    buf = Buffer.from(hex, 'hex')\n\n    if (natlen === opts.size) {\n      // buf = buf\n    } else if (natlen > opts.size) {\n      buf = BN.trim(buf, natlen)\n    } else if (natlen < opts.size) {\n      buf = BN.pad(buf, natlen, opts.size)\n    }\n  } else {\n    hex = this.toString(16, 2)\n    buf = Buffer.from(hex, 'hex')\n  }\n\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf)\n  }\n\n  return buf\n}\n\n/**\n * For big numbers that are either positive or negative, you can convert to\n * \"sign magnitude\" format whereby the first bit specifies whether the number is\n * positive or negative.\n */\nBN.prototype.toSMBigEndian = function () {\n  var buf\n  if (this.cmp(BN.Zero) === -1) {\n    buf = this.neg().toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x80]), buf])\n    } else {\n      buf[0] = buf[0] | 0x80\n    }\n  } else {\n    buf = this.toBuffer()\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x00]), buf])\n    }\n  }\n\n  if (buf.length === 1 & buf[0] === 0) {\n    buf = Buffer.from([])\n  }\n  return buf\n}\n\n/**\n * For big numbers that are either positive or negative, you can convert to\n * \"sign magnitude\" format whereby the first bit specifies whether the number is\n * positive or negative.\n *\n * @param {Object} opts Defaults to { endian: 'big' }\n */\nBN.prototype.toSM = function (opts) {\n  var endian = opts ? opts.endian : 'big'\n  var buf = this.toSMBigEndian()\n\n  if (endian === 'little') {\n    buf = reversebuf(buf)\n  }\n  return buf\n}\n\n/**\n * Create a BN from a \"ScriptNum\": This is analogous to the constructor for\n * CScriptNum in bitcoind. Many ops in bitcoind's script interpreter use\n * CScriptNum, which is not really a proper bignum. Instead, an error is thrown\n * if trying to input a number bigger than 4 bytes. We copy that behavior here.\n * A third argument, `size`, is provided to extend the hard limit of 4 bytes, as\n * some usages require more than 4 bytes.\n *\n * @param {Buffer} buf A buffer of a number.\n * @param {boolean} fRequireMinimal Whether to require minimal size encoding.\n * @param {number} size The maximum size.\n */\nBN.fromScriptNumBuffer = function (buf, fRequireMinimal, size) {\n  var nMaxNumSize = size || Number.MAX_SAFE_INTEGER\n  $.checkArgument(buf.length <= nMaxNumSize, new Error('script number overflow'))\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number')\n      }\n    }\n  }\n  return BN.fromSM(buf, {\n    endian: 'little'\n  })\n}\n\n/**\n * The corollary to the above, with the notable exception that we do not throw\n * an error if the output is larger than four bytes. (Which can happen if\n * performing a numerical operation that results in an overflow to more than 4\n * bytes).\n */\nBN.prototype.toScriptNumBuffer = function () {\n  return this.toSM({\n    endian: 'little'\n  })\n}\n\n/**\n * Trims a buffer if it starts with zeros.\n *\n * @param {Buffer} buf A buffer formatted number.\n * @param {number} natlen The natural length of the number.\n */\nBN.trim = function (buf, natlen) {\n  return buf.slice(natlen - buf.length, buf.length)\n}\n\n/**\n * Adds extra zeros to the start of a number.\n *\n * @param {Buffer} buf A buffer formatted number.\n * @param {number} natlen The natural length of the number.\n * @param {number} size How big to pad the number in bytes.\n */\nBN.pad = function (buf, natlen, size) {\n  var rbuf = Buffer.alloc(size)\n  for (var i = 0; i < buf.length; i++) {\n    rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i]\n  }\n  for (i = 0; i < size - natlen; i++) {\n    rbuf[i] = 0\n  }\n  return rbuf\n}\n/**\n * Convert a big number into a hex string. This is somewhat ambiguous, so there\n * is an opts parameter that let's you specify the endianness or the size.\n * opts.endian can be either 'big' or 'little' and opts.size can be any\n * sufficiently large number of bytes. If you always want to create a 32 byte\n * big endian number, then specify opts = { endian: 'big', size: 32 }\n *\n * @param {Object} opts Defaults to { endian: 'big', size: 32 }\n */\nBN.prototype.toHex = function (...args) {\n  return this.toBuffer(...args).toString('hex')\n}\n\n/**\n * Convert a hex string (such as a 256 bit binary private key) into a big\n * number. Sometimes these numbers can be formatted either as 'big endian' or\n * 'little endian', and so there is an opts parameter that lets you specify\n * which endianness is specified.\n *\n * @param {Buffer} buf A buffer number, such as a 256 bit hash or key.\n * @param {Object} opts With a property 'endian' that can be either 'big' or 'little'. Defaults big endian (most significant digit first).\n */\nBN.fromHex = function (hex, ...args) {\n  return BN.fromBuffer(Buffer.from(hex, 'hex'), ...args)\n}\n\nmodule.exports = BN\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict'\n\nvar BN = require('./bn')\n\nvar EC = require('elliptic').ec\nvar ec = new EC('secp256k1')\nvar ecPoint = ec.curve.point.bind(ec.curve)\nvar ecPointFromX = ec.curve.pointFromX.bind(ec.curve)\n\n/**\n * Instantiate a valid secp256k1 Point from the X and Y coordinates. This class\n * is just an extension of the secp256k1 code from the library \"elliptic\" by\n * Fedor Indutny. It includes a few extra features that are useful in Bitcoin.\n *\n * @param {BN|String} x - The X coordinate\n * @param {BN|String} y - The Y coordinate\n * @link https://github.com/indutny/elliptic\n * @augments elliptic.curve.point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n * @constructor\n */\nvar Point = function Point (x, y, isRed) {\n  try {\n    var point = ecPoint(x, y, isRed)\n  } catch (e) {\n    throw new Error('Invalid Point')\n  }\n  point.validate()\n  return point\n}\n\nPoint.prototype = Object.getPrototypeOf(ec.curve.point())\n\n/**\n *\n * Instantiate a valid secp256k1 Point from only the X coordinate. This is\n * useful to rederive a full point from the compressed form of a point.\n *\n * @param {boolean} odd - If the Y coordinate is odd\n * @param {BN|String} x - The X coordinate\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n */\nPoint.fromX = function fromX (odd, x) {\n  try {\n    var point = ecPointFromX(x, odd)\n  } catch (e) {\n    throw new Error('Invalid X')\n  }\n  point.validate()\n  return point\n}\n\n/**\n *\n * Will return a secp256k1 ECDSA base point.\n *\n * @link https://en.bitcoin.it/wiki/Secp256k1\n * @returns {Point} An instance of the base point.\n */\nPoint.getG = function getG () {\n  return ec.curve.g\n}\n\n/**\n *\n * Will return the max of range of valid private keys as governed by the\n * secp256k1 ECDSA standard.\n *\n * @link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys\n * @returns {BN} A BN instance of the number of points on the curve\n */\nPoint.getN = function getN () {\n  return new BN(ec.curve.n.toArray())\n}\n\nif (!Point.prototype._getX) { Point.prototype._getX = Point.prototype.getX }\n\n/**\n * Will return the X coordinate of the Point.\n *\n * @returns {BN} A BN instance of the X coordinate\n */\nPoint.prototype.getX = function getX () {\n  return new BN(this._getX().toArray())\n}\n\nif (!Point.prototype._getY) { Point.prototype._getY = Point.prototype.getY }\n\n/**\n * Will return the Y coordinate of the Point.\n *\n * @returns {BN} A BN instance of the Y coordinate\n */\nPoint.prototype.getY = function getY () {\n  return new BN(this._getY().toArray())\n}\n\n/**\n * Will determine if the point is valid.\n *\n * @link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of the same Point\n */\nPoint.prototype.validate = function validate () {\n  if (this.isInfinity()) {\n    throw new Error('Point cannot be equal to Infinity')\n  }\n\n  var p2\n  try {\n    p2 = ecPointFromX(this.getX(), this.getY().isOdd())\n  } catch (e) {\n    throw new Error('Point does not lie on the curve')\n  }\n\n  if (p2.y.cmp(this.y) !== 0) {\n    throw new Error('Invalid y value for curve.')\n  }\n\n  // todo: needs test case\n  if (!(this.mul(Point.getN()).isInfinity())) {\n    throw new Error('Point times N must be infinity')\n  }\n\n  return this\n}\n\n/**\n * A \"compressed\" format point is the X part of the (X, Y) point plus an extra\n * bit (which takes an entire byte) to indicate whether the Y value is odd or\n * not. Storing points this way takes a bit less space, but requires a bit more\n * computation to rederive the full point.\n *\n * @param {Point} point An instance of Point.\n * @returns {Buffer} A compressed point in the form of a buffer.\n */\nPoint.pointToCompressed = function pointToCompressed (point) {\n  var xbuf = point.getX().toBuffer({ size: 32 })\n  var ybuf = point.getY().toBuffer({ size: 32 })\n\n  var prefix\n  var odd = ybuf[ybuf.length - 1] % 2\n  if (odd) {\n    prefix = Buffer.from([0x03])\n  } else {\n    prefix = Buffer.from([0x02])\n  }\n  return Buffer.concat([prefix, xbuf])\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} buf A compressed point.\n * @returns {Point} A Point.\n */\nPoint.pointFromCompressed = function (buf) {\n  if (buf.length !== 33) {\n    throw new Error('invalid buffer length')\n  }\n  let prefix = buf[0]\n  let odd\n  if (prefix === 0x03) {\n    odd = true\n  } else if (prefix === 0x02) {\n    odd = false\n  } else {\n    throw new Error('invalid value of compressed prefix')\n  }\n\n  let xbuf = buf.slice(1, 33)\n  let x = BN.fromBuffer(xbuf)\n  return Point.fromX(odd, x)\n}\n\n/**\n * Convert point to a compressed buffer.\n *\n * @returns {Buffer} A compressed point.\n */\nPoint.prototype.toBuffer = function () {\n  return Point.pointToCompressed(this)\n}\n\n/**\n * Convert point to a compressed hex string.\n *\n * @returns {string} A compressed point as a hex string.\n */\nPoint.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} buf A compressed point.\n * @returns {Point} A Point.\n */\nPoint.fromBuffer = function (buf) {\n  return Point.pointFromCompressed(buf)\n}\n\n/**\n * Converts a compressed buffer into a point.\n *\n * @param {Buffer} hex A compressed point as a hex string.\n * @returns {Point} A Point.\n */\nPoint.fromHex = function (hex) {\n  return Point.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nmodule.exports = Point\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('./preconditions')\n\n/**\n * Determines whether a string contains only hexadecimal values\n *\n * @name JSUtil.isHexa\n * @param {string} value\n * @return {boolean} true if the string is the hexa representation of a number\n */\nvar isHexa = function isHexa (value) {\n  if (!_.isString(value)) {\n    return false\n  }\n  return /^[0-9a-fA-F]+$/.test(value)\n}\n\n/**\n * @namespace JSUtil\n */\nmodule.exports = {\n  /**\n   * Test if an argument is a valid JSON object. If it is, returns a truthy\n   * value (the json object decoded), so no double JSON.parse call is necessary\n   *\n   * @param {string} arg\n   * @return {Object|boolean} false if the argument is not a JSON string.\n   */\n  isValidJSON: function isValidJSON (arg) {\n    var parsed\n    if (!_.isString(arg)) {\n      return false\n    }\n    try {\n      parsed = JSON.parse(arg)\n    } catch (e) {\n      return false\n    }\n    if (typeof (parsed) === 'object') {\n      return true\n    }\n    return false\n  },\n  isHexa: isHexa,\n  isHexaString: isHexa,\n\n  /**\n   * Define immutable properties on a target object\n   *\n   * @param {Object} target - An object to be extended\n   * @param {Object} values - An object of properties\n   * @return {Object} The target object\n   */\n  defineImmutable: function defineImmutable (target, values) {\n    Object.keys(values).forEach(function (key) {\n      Object.defineProperty(target, key, {\n        configurable: false,\n        enumerable: true,\n        value: values[key]\n      })\n    })\n    return target\n  },\n  /**\n   * Checks that a value is a natural number, a positive integer or zero.\n   *\n   * @param {*} value\n   * @return {Boolean}\n   */\n  isNaturalNumber: function isNaturalNumber (value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value &&\n      value >= 0\n  },\n\n  /**\n   * Transform a 4-byte integer (unsigned value) into a Buffer of length 4 (Big Endian Byte Order)\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsBuffer: function integerAsBuffer (integer) {\n    $.checkArgumentType(integer, 'number', 'integer')\n    const buf = Buffer.allocUnsafe(4)\n    buf.writeUInt32BE(integer, 0)\n    return buf\n  }\n}\n","'use strict'\n\nvar BN = require('./bn')\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar JSUtil = require('../util/js')\n\nvar Signature = function Signature (r, s) {\n  if (!(this instanceof Signature)) {\n    return new Signature(r, s)\n  }\n  if (r instanceof BN) {\n    this.set({\n      r: r,\n      s: s\n    })\n  } else if (r) {\n    var obj = r\n    this.set(obj)\n  }\n}\n\nSignature.prototype.set = function (obj) {\n  this.r = obj.r || this.r || undefined\n  this.s = obj.s || this.s || undefined\n\n  this.i = typeof obj.i !== 'undefined' ? obj.i : this.i // public key recovery parameter in range [0, 3]\n  this.compressed = typeof obj.compressed !== 'undefined'\n    ? obj.compressed : this.compressed // whether the recovered pubkey is compressed\n  this.nhashtype = obj.nhashtype || this.nhashtype || undefined\n  return this\n}\n\nSignature.fromCompact = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf), 'Argument is expected to be a Buffer')\n\n  var sig = new Signature()\n\n  var compressed = true\n  var i = buf.slice(0, 1)[0] - 27 - 4\n  if (i < 0) {\n    compressed = false\n    i = i + 4\n  }\n\n  var b2 = buf.slice(1, 33)\n  var b3 = buf.slice(33, 65)\n\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be 0, 1, 2, or 3'))\n  $.checkArgument(b2.length === 32, new Error('r must be 32 bytes'))\n  $.checkArgument(b3.length === 32, new Error('s must be 32 bytes'))\n\n  sig.compressed = compressed\n  sig.i = i\n  sig.r = BN.fromBuffer(b2)\n  sig.s = BN.fromBuffer(b3)\n\n  return sig\n}\n\nSignature.fromDER = Signature.fromBuffer = function (buf, strict) {\n  var obj = Signature.parseDER(buf, strict)\n  var sig = new Signature()\n\n  sig.r = obj.r\n  sig.s = obj.s\n\n  return sig\n}\n\n// The format used in a tx\nSignature.fromTxFormat = function (buf) {\n  var nhashtype = buf.readUInt8(buf.length - 1)\n  var derbuf = buf.slice(0, buf.length - 1)\n  var sig = Signature.fromDER(derbuf, false)\n  sig.nhashtype = nhashtype\n  return sig\n}\n\nSignature.fromString = function (str) {\n  var buf = Buffer.from(str, 'hex')\n  return Signature.fromDER(buf)\n}\n\n/**\n * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n */\nSignature.parseDER = function (buf, strict) {\n  $.checkArgument(Buffer.isBuffer(buf), new Error('DER formatted signature should be a buffer'))\n  if (_.isUndefined(strict)) {\n    strict = true\n  }\n\n  var header = buf[0]\n  $.checkArgument(header === 0x30, new Error('Header byte should be 0x30'))\n\n  var length = buf[1]\n  var buflength = buf.slice(2).length\n  $.checkArgument(!strict || length === buflength, new Error('Length byte should length of what follows'))\n\n  length = length < buflength ? length : buflength\n\n  var rheader = buf[2 + 0]\n  $.checkArgument(rheader === 0x02, new Error('Integer byte for r should be 0x02'))\n\n  var rlength = buf[2 + 1]\n  var rbuf = buf.slice(2 + 2, 2 + 2 + rlength)\n  var r = BN.fromBuffer(rbuf)\n  var rneg = buf[2 + 1 + 1] === 0x00\n  $.checkArgument(rlength === rbuf.length, new Error('Length of r incorrect'))\n\n  var sheader = buf[2 + 2 + rlength + 0]\n  $.checkArgument(sheader === 0x02, new Error('Integer byte for s should be 0x02'))\n\n  var slength = buf[2 + 2 + rlength + 1]\n  var sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength)\n  var s = BN.fromBuffer(sbuf)\n  var sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00\n  $.checkArgument(slength === sbuf.length, new Error('Length of s incorrect'))\n\n  var sumlength = 2 + 2 + rlength + 2 + slength\n  $.checkArgument(length === sumlength - 2, new Error('Length of signature incorrect'))\n\n  var obj = {\n    header: header,\n    length: length,\n    rheader: rheader,\n    rlength: rlength,\n    rneg: rneg,\n    rbuf: rbuf,\n    r: r,\n    sheader: sheader,\n    slength: slength,\n    sneg: sneg,\n    sbuf: sbuf,\n    s: s\n  }\n\n  return obj\n}\n\nSignature.prototype.toCompact = function (i, compressed) {\n  i = typeof i === 'number' ? i : this.i\n  compressed = typeof compressed === 'boolean' ? compressed : this.compressed\n\n  if (!(i === 0 || i === 1 || i === 2 || i === 3)) {\n    throw new Error('i must be equal to 0, 1, 2, or 3')\n  }\n\n  var val = i + 27 + 4\n  if (compressed === false) {\n    val = val - 4\n  }\n  var b1 = Buffer.from([val])\n  var b2 = this.r.toBuffer({\n    size: 32\n  })\n  var b3 = this.s.toBuffer({\n    size: 32\n  })\n  return Buffer.concat([b1, b2, b3])\n}\n\nSignature.prototype.toBuffer = Signature.prototype.toDER = function () {\n  var rnbuf = this.r.toBuffer()\n  var snbuf = this.s.toBuffer()\n\n  var rneg = !!(rnbuf[0] & 0x80)\n  var sneg = !!(snbuf[0] & 0x80)\n\n  var rbuf = rneg ? Buffer.concat([Buffer.from([0x00]), rnbuf]) : rnbuf\n  var sbuf = sneg ? Buffer.concat([Buffer.from([0x00]), snbuf]) : snbuf\n\n  var rlength = rbuf.length\n  var slength = sbuf.length\n  var length = 2 + rlength + 2 + slength\n  var rheader = 0x02\n  var sheader = 0x02\n  var header = 0x30\n\n  var der = Buffer.concat([Buffer.from([header, length, rheader, rlength]), rbuf, Buffer.from([sheader, slength]), sbuf])\n  return der\n}\n\nSignature.prototype.toString = function () {\n  var buf = this.toDER()\n  return buf.toString('hex')\n}\n\n/**\n * This function is translated from bitcoind's IsDERSignature and is used in\n * the script interpreter.  This \"DER\" format actually includes an extra byte,\n * the nhashtype, at the end. It is really the tx format, not DER format.\n *\n * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n * Where R and S are not negative (their first byte has its highest bit not set), and not\n * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n * in which case a single 0 byte is necessary and even required).\n *\n * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n */\nSignature.isTxDER = function (buf) {\n  if (buf.length < 9) {\n    //  Non-canonical signature: too short\n    return false\n  }\n  if (buf.length > 73) {\n    // Non-canonical signature: too long\n    return false\n  }\n  if (buf[0] !== 0x30) {\n    //  Non-canonical signature: wrong type\n    return false\n  }\n  if (buf[1] !== buf.length - 3) {\n    //  Non-canonical signature: wrong length marker\n    return false\n  }\n  var nLenR = buf[3]\n  if (5 + nLenR >= buf.length) {\n    //  Non-canonical signature: S length misplaced\n    return false\n  }\n  var nLenS = buf[5 + nLenR]\n  if ((nLenR + nLenS + 7) !== buf.length) {\n    //  Non-canonical signature: R+S length mismatch\n    return false\n  }\n\n  var R = buf.slice(4)\n  if (buf[4 - 2] !== 0x02) {\n    //  Non-canonical signature: R value type mismatch\n    return false\n  }\n  if (nLenR === 0) {\n    //  Non-canonical signature: R length is zero\n    return false\n  }\n  if (R[0] & 0x80) {\n    //  Non-canonical signature: R value negative\n    return false\n  }\n  if (nLenR > 1 && (R[0] === 0x00) && !(R[1] & 0x80)) {\n    //  Non-canonical signature: R value excessively padded\n    return false\n  }\n\n  var S = buf.slice(6 + nLenR)\n  if (buf[6 + nLenR - 2] !== 0x02) {\n    //  Non-canonical signature: S value type mismatch\n    return false\n  }\n  if (nLenS === 0) {\n    //  Non-canonical signature: S length is zero\n    return false\n  }\n  if (S[0] & 0x80) {\n    //  Non-canonical signature: S value negative\n    return false\n  }\n  if (nLenS > 1 && (S[0] === 0x00) && !(S[1] & 0x80)) {\n    //  Non-canonical signature: S value excessively padded\n    return false\n  }\n  return true\n}\n\n/**\n * Compares to bitcoind's IsLowDERSignature\n * See also ECDSA signature algorithm which enforces this.\n * See also BIP 62, \"low S values in signatures\"\n */\nSignature.prototype.hasLowS = function () {\n  if (this.s.lt(new BN(1)) ||\n    this.s.gt(new BN('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns true if the nhashtype is exactly equal to one of the standard options or combinations thereof.\n * Translated from bitcoind's IsDefinedHashtypeSignature\n */\nSignature.prototype.hasDefinedHashtype = function () {\n  if (!JSUtil.isNaturalNumber(this.nhashtype)) {\n    return false\n  }\n  // accept with or without Signature.SIGHASH_ANYONECANPAY by ignoring the bit\n  var temp = this.nhashtype & 0x1F\n  if (temp < Signature.SIGHASH_ALL || temp > Signature.SIGHASH_SINGLE) {\n    return false\n  }\n  return true\n}\n\nSignature.prototype.toTxFormat = function () {\n  var derbuf = this.toDER()\n  var buf = Buffer.alloc(1)\n  buf.writeUInt8(this.nhashtype, 0)\n  return Buffer.concat([derbuf, buf])\n}\n\nSignature.SIGHASH_ALL = 0x01\nSignature.SIGHASH_NONE = 0x02\nSignature.SIGHASH_SINGLE = 0x03\nSignature.SIGHASH_FORKID = 0x40\nSignature.SIGHASH_ANYONECANPAY = 0x80\n\nmodule.exports = Signature\n","'use strict'\n\nvar hash = require('hash.js')\nvar $ = require('../util/preconditions')\n\nvar Hash = module.exports\n\n/**\n * A SHA or SHA1 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-1\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha1 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha1().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha1.blocksize = 512\n\n/**\n * A SHA256 hash, which is always 256 bits or 32 bytes long.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha256().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha256.blocksize = 512\n\n/**\n * A double SHA256 hash, which is always 256 bits or 32 bytes bytes long. This\n * hash function is commonly used inside Bitcoin, particularly for the hash of a\n * block and the hash of a transaction.\n *\n * See:\n * https://www.movable-type.co.uk/scripts/sha256.html\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256sha256 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.sha256(Hash.sha256(buf))\n}\n\n/**\n * A RIPEMD160 hash, which is always 160 bits or 20 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.ripemd160().update(buf).digest('hex'), 'hex')\n}\n/**\n * A RIPEMD160 hash of a SHA256 hash, which is always 160 bits or 20 bytes long.\n * This value is commonly used inside Bitcoin, particularly for Bitcoin\n * addresses.\n *\n * See:\n * https://en.wikipedia.org/wiki/RIPEMD\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha256ripemd160 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Hash.ripemd160(Hash.sha256(buf))\n}\n\n/**\n * A SHA512 hash, which is always 512 bits or 64 bytes long.\n *\n * See:\n * https://en.wikipedia.org/wiki/SHA-2\n *\n * @param {Buffer} buf Data, a.k.a. pre-image, which can be any size.\n * @returns {Buffer} The hash in the form of a buffer.\n */\nHash.sha512 = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return Buffer.from(hash.sha512().update(buf).digest('hex'), 'hex')\n}\n\nHash.sha512.blocksize = 1024\n\n/**\n * A way to do HMAC using any underlying hash function. If you ever find that\n * you want to hash two pieces of data together, you should use HMAC instead of\n * just using a hash function. Rather than doing hash(data1 + data2) you should\n * do HMAC(data1, data2). Actually, rather than use HMAC directly, we recommend\n * you use either sha256hmac or sha515hmac provided below.\n *\n * See:\n * https://en.wikipedia.org/wiki/Length_extension_attack\n * https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks\n *\n * @param {function} hashf Which hash function to use.\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.hmac = function (hashf, data, key) {\n  // http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  // http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(Buffer.isBuffer(data))\n  $.checkArgument(Buffer.isBuffer(key))\n  $.checkArgument(hashf.blocksize)\n\n  var blocksize = hashf.blocksize / 8\n\n  if (key.length > blocksize) {\n    key = hashf(key)\n  } else if (key < blocksize) {\n    var fill = Buffer.alloc(blocksize)\n    fill.fill(0)\n    key.copy(fill)\n    key = fill\n  }\n\n  var oKey = Buffer.alloc(blocksize)\n  oKey.fill(0x5c)\n\n  var iKey = Buffer.alloc(blocksize)\n  iKey.fill(0x36)\n\n  var oKeyPad = Buffer.alloc(blocksize)\n  var iKeyPad = Buffer.alloc(blocksize)\n  for (var i = 0; i < blocksize; i++) {\n    oKeyPad[i] = oKey[i] ^ key[i]\n    iKeyPad[i] = iKey[i] ^ key[i]\n  }\n\n  return hashf(Buffer.concat([oKeyPad, hashf(Buffer.concat([iKeyPad, data]))]))\n}\n\n/**\n * A SHA256 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha256hmac = function (data, key) {\n  return Hash.hmac(Hash.sha256, data, key)\n}\n\n/**\n * A SHA512 HMAC.\n *\n * @param {Buffer} data Data, which can be any size.\n * @param {Buffer} key Key, which can be any size.\n * @returns {Buffer} The HMAC in the form of a buffer.\n */\nHash.sha512hmac = function (data, key) {\n  return Hash.hmac(Hash.sha512, data, key)\n}\n","if (process.browser) module.exports = require('./hash.browser')\nelse module.exports = require('./hash.node')\n","'use strict'\nvar _ = require('./util/_')\n\nvar JSUtil = require('./util/js')\nvar networks = []\nvar networkMaps = {}\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\"), \"testnet\", \"regtest\" and \"stn\".\n * @constructor\n */\nfunction Network () {}\n\nNetwork.prototype.toString = function toString () {\n  return this.name\n}\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get (arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys]\n    }\n    for (var i = 0; i < networks.length; i++) {\n      var network = networks[i]\n      var filteredNet = _.pick(network, keys)\n      var netValues = _.values(filteredNet)\n      if (~netValues.indexOf(arg)) {\n        return network\n      }\n    }\n    return undefined\n  }\n  return networkMaps[arg]\n}\n\n/***\n * Derives an array from the given cashAddrPrefix to be used in the computation\n * of the address' checksum.\n *\n * @param {string} cashAddrPrefix Network cashAddrPrefix. E.g.: 'bitcoincash'.\n */\nfunction cashAddrPrefixToArray (cashAddrPrefix) {\n  var result = []\n  for (var i = 0; i < cashAddrPrefix.length; i++) {\n    result.push(cashAddrPrefix.charCodeAt(i) & 31)\n  }\n  return result\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash cashAddrPrefix\n * @param {Number} data.privatekey - The privatekey cashAddrPrefix\n * @param {Number} data.scripthash - The scripthash cashAddrPrefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork (data) {\n  var network = new Network()\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey\n  })\n\n  var indexBy = data.indexBy || Object.keys(data)\n\n  if (data.cashAddrPrefix) {\n    _.extend(network, {\n      cashAddrPrefix: data.cashAddrPrefix,\n      cashAddrPrefixArray: cashAddrPrefixToArray(data.cashAddrPrefix)\n    })\n  }\n\n  if (data.networkMagic) {\n    _.extend(network, {\n      networkMagic: JSUtil.integerAsBuffer(data.networkMagic)\n    })\n  }\n\n  if (data.port) {\n    _.extend(network, {\n      port: data.port\n    })\n  }\n\n  if (data.dnsSeeds) {\n    _.extend(network, {\n      dnsSeeds: data.dnsSeeds\n    })\n  }\n  networks.push(network)\n  indexNetworkBy(network, indexBy)\n  return network\n}\n\nfunction indexNetworkBy (network, keys) {\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    var networkValue = network[key]\n    if (!_.isUndefined(networkValue) && !_.isObject(networkValue)) {\n      networkMaps[networkValue] = network\n    }\n  }\n}\n\nfunction unindexNetworkBy (network, values) {\n  for (var index = 0; index < values.length; index++) {\n    var value = values[index]\n    if (networkMaps[value] === network) {\n      delete networkMaps[value]\n    }\n  }\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork (network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1)\n    }\n  }\n  unindexNetworkBy(network, Object.keys(networkMaps))\n}\n\nvar networkMagic = {\n  livenet: 0xe3e1f3e8,\n  testnet: 0xf4e5f3f4,\n  regtest: 0xdab5bffa,\n  stn: 0xfbcec4f9\n}\n\nvar dnsSeeds = [\n  'seed.bitcoinsv.org',\n  'seed.bitcoinunlimited.info'\n]\n\nvar TESTNET = {\n  PORT: 18333,\n  NETWORK_MAGIC: networkMagic.testnet,\n  DNS_SEEDS: dnsSeeds,\n  PREFIX: 'testnet',\n  CASHADDRPREFIX: 'bchtest'\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: networkMagic.regtest,\n  DNS_SEEDS: [],\n  PREFIX: 'regtest',\n  CASHADDRPREFIX: 'bchreg'\n}\n\nvar STN = {\n  PORT: 9333,\n  NETWORK_MAGIC: networkMagic.stn,\n  DNS_SEEDS: ['stn-seed.bitcoinsv.io'],\n  PREFIX: 'stn',\n  CASHADDRPREFIX: 'bsvstn'\n}\n\nvar liveNetwork = {\n  name: 'livenet',\n  alias: 'mainnet',\n  prefix: 'bitcoin',\n  cashAddrPrefix: 'bitcoincash',\n  pubkeyhash: 0x00,\n  privatekey: 0x80,\n  scripthash: 0x05,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: networkMagic.livenet,\n  port: 8333,\n  dnsSeeds: dnsSeeds\n}\n\n// network magic, port, cashAddrPrefix, and dnsSeeds are overloaded by enableRegtest\nvar testNetwork = {\n  name: 'testnet',\n  prefix: TESTNET.PREFIX,\n  cashAddrPrefix: TESTNET.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: TESTNET.NETWORK_MAGIC\n}\n\nvar regtestNetwork = {\n  name: 'regtest',\n  prefix: REGTEST.PREFIX,\n  cashAddrPrefix: REGTEST.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: REGTEST.NETWORK_MAGIC,\n  port: REGTEST.PORT,\n  dnsSeeds: [],\n  indexBy: [\n    'port',\n    'name',\n    'cashAddrPrefix',\n    'networkMagic'\n  ]\n}\nvar stnNetwork = {\n  name: 'stn',\n  prefix: STN.PREFIX,\n  cashAddrPrefix: STN.CASHADDRPREFIX,\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: STN.NETWORK_MAGIC,\n  indexBy: [\n    'port',\n    'name',\n    'cashAddrPrefix',\n    'networkMagic'\n  ]\n}\n// Add configurable values for testnet/regtest\n\naddNetwork(testNetwork)\naddNetwork(stnNetwork)\naddNetwork(regtestNetwork)\naddNetwork(liveNetwork)\n\nvar livenet = get('livenet')\nvar regtest = get('regtest')\nvar testnet = get('testnet')\nvar stn = get('stn')\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT\n    } else if (this.stnEnabled) {\n      return STN.PORT\n    } else {\n      return TESTNET.PORT\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return JSUtil.integerAsBuffer(REGTEST.NETWORK_MAGIC)\n    } else if (this.stnEnabled) {\n      return JSUtil.integerAsBuffer(STN.NETWORK_MAGIC)\n    } else {\n      return JSUtil.integerAsBuffer(TESTNET.NETWORK_MAGIC)\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS\n    } else if (this.stnEnabled) {\n      return STN.DNS_SEEDS\n    } else {\n      return TESTNET.DNS_SEEDS\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'cashAddrPrefix', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return REGTEST.CASHADDRPREFIX\n    } else if (this.stnEnabled) {\n      return STN.CASHADDRPREFIX\n    } else {\n      return TESTNET.CASHADDRPREFIX\n    }\n  }\n})\n\nObject.defineProperty(testnet, 'cashAddrPrefixArray', {\n  enumerable: true,\n  configurable: false,\n  get: function () {\n    if (this.regtestEnabled) {\n      return cashAddrPrefixToArray(REGTEST.CASHADDRPREFIX)\n    } else if (this.stnEnabled) {\n      return STN.cashAddrPrefixToArray(STN.CASHADDRPREFIX)\n    } else {\n      return cashAddrPrefixToArray(TESTNET.CASHADDRPREFIX)\n    }\n  }\n})\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest () {\n  testnet.regtestEnabled = true\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest () {\n  testnet.regtestEnabled = false\n}\n/**\n * @function\n * @member Networks#enableStn\n * Will enable stn features for testnet\n */\nfunction enableStn () {\n  testnet.stnEnabled = true\n}\n\n/**\n * @function\n * @member Networks#disableStn\n * Will disable stn features for testnet\n */\nfunction disableStn () {\n  testnet.stnEnabled = false\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  regtest: regtest,\n  stn: stn,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest,\n  enableStn: enableStn,\n  disableStn: disableStn\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar _ = require('../util/_')\nvar bs58 = require('bs58')\nvar buffer = require('buffer')\n\n/**\n * The alphabet for the Bitcoin-specific Base 58 encoding distinguishes between\n * lower case L and upper case i - neither of those characters are allowed to\n * prevent accidentaly miscopying of letters.\n */\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('')\n\n/**\n * A Base58 object can encode/decoded Base 58, which is used primarily for\n * string-formatted Bitcoin addresses and private keys. Addresses and private\n * keys actually use an additional checksum, and so they actually use the\n * Base58Check class.\n *\n * @param {object} obj Can be a string or buffer.\n */\nvar Base58 = function Base58 (obj) {\n  if (!(this instanceof Base58)) {\n    return new Base58(obj)\n  }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj\n    this.fromBuffer(buf)\n  } else if (typeof obj === 'string') {\n    var str = obj\n    this.fromString(str)\n  }\n}\n\nBase58.validCharacters = function validCharacters (chars) {\n  if (buffer.Buffer.isBuffer(chars)) {\n    chars = chars.toString()\n  }\n  return _.every(_.map(chars, function (char) { return _.includes(ALPHABET, char) }))\n}\n\nBase58.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  return this\n}\n\n/**\n * Encode a buffer to Bsae 58.\n *\n * @param {Buffer} buf Any buffer to be encoded.\n * @returns {string} A Base 58 encoded string.\n */\nBase58.encode = function (buf) {\n  if (!buffer.Buffer.isBuffer(buf)) {\n    throw new Error('Input should be a buffer')\n  }\n  return bs58.encode(buf)\n}\n\n/**\n * Decode a Base 58 string to a buffer.\n *\n * @param {string} str A Base 58 encoded string.\n * @returns {Buffer} The decoded buffer.\n */\nBase58.decode = function (str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string')\n  }\n  return Buffer.from(bs58.decode(str))\n}\n\nBase58.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nBase58.fromBuffer = function (buf) {\n  return new Base58().fromBuffer(buf)\n}\n\nBase58.fromHex = function (hex) {\n  return Base58.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBase58.prototype.fromString = function (str) {\n  var buf = Base58.decode(str)\n  this.buf = buf\n  return this\n}\n\nBase58.fromString = function (str) {\n  return new Base58().fromString(str)\n}\n\nBase58.prototype.toBuffer = function () {\n  return this.buf\n}\n\nBase58.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nBase58.prototype.toString = function () {\n  return Base58.encode(this.buf)\n}\n\nmodule.exports = Base58\n","'use strict'\n\nvar _ = require('../util/_')\nvar Base58 = require('./base58')\nvar buffer = require('buffer')\nvar sha256sha256 = require('../crypto/hash').sha256sha256\n\n/**\n * A Base58check object can encode/decodd Base 58, which is used primarily for\n * string-formatted Bitcoin addresses and private keys. This is the same as\n * Base58, except that it includes a checksum to prevent accidental mistypings.\n *\n * @param {object} obj Can be a string or buffer.\n */\nvar Base58Check = function Base58Check (obj) {\n  if (!(this instanceof Base58Check)) { return new Base58Check(obj) }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj\n    this.fromBuffer(buf)\n  } else if (typeof obj === 'string') {\n    var str = obj\n    this.fromString(str)\n  }\n}\n\nBase58Check.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  return this\n}\n\nBase58Check.validChecksum = function validChecksum (data, checksum) {\n  if (_.isString(data)) {\n    data = buffer.Buffer.from(Base58.decode(data))\n  }\n  if (_.isString(checksum)) {\n    checksum = buffer.Buffer.from(Base58.decode(checksum))\n  }\n  if (!checksum) {\n    checksum = data.slice(-4)\n    data = data.slice(0, -4)\n  }\n  return Base58Check.checksum(data).toString('hex') === checksum.toString('hex')\n}\n\nBase58Check.decode = function (s) {\n  if (typeof s !== 'string') { throw new Error('Input must be a string') }\n\n  var buf = Buffer.from(Base58.decode(s))\n\n  if (buf.length < 4) { throw new Error('Input string too short') }\n\n  var data = buf.slice(0, -4)\n  var csum = buf.slice(-4)\n\n  var hash = sha256sha256(data)\n  var hash4 = hash.slice(0, 4)\n\n  if (csum.toString('hex') !== hash4.toString('hex')) { throw new Error('Checksum mismatch') }\n\n  return data\n}\n\nBase58Check.checksum = function (buffer) {\n  return sha256sha256(buffer).slice(0, 4)\n}\n\nBase58Check.encode = function (buf) {\n  if (!Buffer.isBuffer(buf)) { throw new Error('Input must be a buffer') }\n  var checkedBuf = Buffer.alloc(buf.length + 4)\n  var hash = Base58Check.checksum(buf)\n  buf.copy(checkedBuf)\n  hash.copy(checkedBuf, buf.length)\n  return Base58.encode(checkedBuf)\n}\n\nBase58Check.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nBase58Check.fromBuffer = function (buf) {\n  return new Base58Check().fromBuffer(buf)\n}\n\nBase58Check.fromHex = function (hex) {\n  return Base58Check.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nBase58Check.prototype.fromString = function (str) {\n  var buf = Base58Check.decode(str)\n  this.buf = buf\n  return this\n}\n\nBase58Check.fromString = function (str) {\n  var buf = Base58Check.decode(str)\n  return new Base58(buf)\n}\n\nBase58Check.prototype.toBuffer = function () {\n  return this.buf\n}\n\nBase58Check.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nBase58Check.prototype.toString = function () {\n  return Base58Check.encode(this.buf)\n}\n\nmodule.exports = Base58Check\n","function writeU8LE (writer, n) {\n  if (n > 0xff) throw new Error('number too large')\n  const buffer = new Uint8Array(1)\n  buffer[0] = n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeU8LE\n","function writeU16LE (writer, n) {\n  if (n > 0xffff) throw new Error('number too large')\n\n  const buffer = new Uint8Array(2)\n  buffer[0] = n % 256\n  n = n >> 8\n  buffer[1] = n % 256\n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeU16LE\n","function writeU32LE (writer, n) {\n  if (n > 0xffffffff) throw new Error('number too large')\n\n  const buffer = new Uint8Array(4)\n  buffer[0] = n % 256\n  n = Math.floor(n / 256)\n  buffer[1] = n % 256\n  n = n >> 8\n  buffer[2] = n % 256\n  n = n >> 8\n  buffer[3] = n\n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeU32LE\n","function writeI32LE (writer, n) {\n  if (n < -2147483648 || n > 2147483647) throw new Error('Out of range. It must be >= -2147483648 and <= 2147483647.')\n\n  const buffer = new Uint8Array(4)\n  buffer[0] = n % 256\n  n = Math.floor(n / 256)\n  buffer[1] = n % 256\n  n = n >> 8\n  buffer[2] = n % 256\n  n = n >> 8\n  buffer[3] = n\n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeI32LE\n","function writeVarint (writer, n) {\n  if (n > Number.MAX_SAFE_INTEGER) throw new Error('varint too large')\n\n  if (n <= 0xfc) {\n    return writer.write([n])\n  }\n\n  if (n <= 0xffff) {\n    return writer.write([0xfd, n % 256, Math.floor(n / 256)])\n  }\n\n  if (n <= 0xffffffff) {\n    const buffer = new Uint8Array(5)\n    buffer[0] = 0xfe\n    buffer[1] = n % 256\n    n = Math.floor(n / 256)\n    buffer[2] = n % 256\n    n = Math.floor(n / 256)\n    buffer[3] = n % 256\n    n = Math.floor(n / 256)\n    buffer[4] = n\n    return writer.write(buffer)\n  }\n\n  // n <= 0xffffffffffffffff\n  const buffer = new Uint8Array(9)\n  buffer[0] = 0xff\n  buffer[1] = n % 256\n  n = Math.floor(n / 256)\n  buffer[2] = n % 256\n  n = Math.floor(n / 256)\n  buffer[3] = n % 256\n  n = Math.floor(n / 256)\n  buffer[4] = n % 256\n  n = Math.floor(n / 256)\n  buffer[5] = n % 256\n  n = Math.floor(n / 256)\n  buffer[6] = n % 256\n  n = Math.floor(n / 256)\n  buffer[7] = n % 256\n  n = Math.floor(n / 256)\n  buffer[8] = n\n  return writer.write(buffer)\n}\n\nmodule.exports = writeVarint\n","'use strict'\n\nvar assert = require('assert')\n\nconst writeU8LE = require('../script/write-u8-le')\nconst writeU16LE = require('../script/write-u16-le')\nconst writeU32LE = require('../script/write-u32-le')\nconst writeI32LE = require('../script/write-i32-le')\nconst writeVarint = require('../script/write-varint')\n\nclass BufferWriter {\n  constructor (obj) {\n    if (obj) { this.set(obj) } else {\n      this.buffers = []\n      this.length = 0\n    }\n  }\n\n  write (buffer) {\n    this.buffers.push(buffer)\n    this.length += buffer.length\n    return this\n  }\n\n  set (obj) {\n    this.buffers = obj.buffers || obj.bufs || this.buffers || []\n    this.length = this.buffers.reduce(function (prev, buf) { return prev + buf.length }, 0)\n    return this\n  }\n\n  concat () {\n    return this.toBuffer()\n  }\n\n  toBuffer () {\n    if (this.buffers.length === 1) {\n      return Buffer.from(this.buffers[0])\n    }\n\n    const whole = new Uint8Array(this.length)\n\n    let offset = 0\n    this.buffers.forEach(part => {\n      whole.set(part, offset)\n      offset += part.length\n    })\n\n    return Buffer.from(whole)\n  }\n\n  writeReverse (buf) {\n    assert(Buffer.isBuffer(buf))\n    this.write(Buffer.from(buf).reverse())\n    return this\n  }\n\n  writeUInt16LE (n) {\n    writeU16LE(this, n)\n    return this\n  }\n\n  writeUInt16BE (n) {\n    var bw = new BufferWriter()\n    bw.writeUInt16LE(n)\n    this.writeReverse(bw.toBuffer())\n    return this\n  }\n\n  writeUInt32LE (n) {\n    writeU32LE(this, n)\n    return this\n  }\n\n  writeUInt32BE (n) {\n    var bw = new BufferWriter()\n    bw.writeUInt32LE(n)\n    this.writeReverse(bw.toBuffer())\n    return this\n  }\n\n  writeUInt8 (n) {\n    writeU8LE(this, n)\n    return this\n  }\n\n  writeUInt64LEBN (bn) {\n    var buf = bn.toBuffer({ size: 8 })\n    this.writeReverse(buf)\n    return this\n  }\n\n  writeUInt64BEBN (bn) {\n    var bw = new BufferWriter()\n    bw.writeUInt64LEBN(bn)\n    this.writeReverse(bw.toBuffer())\n    return this\n  }\n\n  writeVarintNum (n) {\n    writeVarint(this, n)\n    return this\n  }\n\n  writeInt32LE (n) {\n    writeI32LE(this, n)\n    return this\n  }\n\n  static varintBufNum (n) {\n    var bw = new BufferWriter()\n    bw.writeVarintNum(n)\n    return bw.toBuffer()\n  }\n\n  writeVarintBN (bn) {\n    var n = bn.toNumber()\n    if (n < 253) {\n      writeU8LE(this, n)\n    } else if (n < 0x10000) {\n      writeU8LE(this, 253)\n      writeU16LE(this, n)\n    } else if (n < 0x100000000) {\n      writeU8LE(this, 254)\n      writeU32LE(this, n)\n    } else {\n      var bw = new BufferWriter()\n      bw.writeUInt8(255)\n      bw.writeUInt64LEBN(bn)\n      var buf = bw.toBuffer()\n      this.write(buf)\n    }\n    return this\n  }\n}\n\nmodule.exports = BufferWriter\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\nvar JSUtil = require('./util/js')\n\nfunction Opcode (num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num)\n  }\n\n  var value\n\n  if (_.isNumber(num)) {\n    value = num\n  } else if (_.isString(num)) {\n    value = Opcode.map[num]\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof (num) + '\" for Opcode')\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  })\n\n  return this\n}\n\nOpcode.fromBuffer = function (buf) {\n  $.checkArgument(Buffer.isBuffer(buf))\n  return new Opcode(Number('0x' + buf.toString('hex')))\n}\n\nOpcode.fromNumber = function (num) {\n  $.checkArgument(_.isNumber(num))\n  return new Opcode(num)\n}\n\nOpcode.fromString = function (str) {\n  $.checkArgument(_.isString(str))\n  var value = Opcode.map[str]\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr')\n  }\n  return new Opcode(value)\n}\n\nOpcode.prototype.toHex = function () {\n  return this.num.toString(16)\n}\n\nOpcode.prototype.toBuffer = function () {\n  return Buffer.from(this.toHex(), 'hex')\n}\n\nOpcode.prototype.toNumber = function () {\n  return this.num\n}\n\nOpcode.prototype.toString = function () {\n  var str = Opcode.reverseMap[this.num]\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation')\n  }\n  return str\n}\n\nOpcode.prototype.toSafeString = function () {\n  var str = Opcode.reverseMap[this.num]\n  if (typeof str === 'undefined') {\n    return this.toHex()\n  }\n  return str\n}\n\nOpcode.smallInt = function (n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number')\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16')\n  if (n === 0) {\n    return Opcode('OP_0')\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1)\n}\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SPLIT: 127,\n  OP_NUM2BIN: 128,\n  OP_BIN2NUM: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_CHECKSEQUENCEVERIFY: 178,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n}\n\nOpcode.reverseMap = []\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map)\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function (opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber()\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)))\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function () {\n  return '<Opcode: ' + this.toString() + ', hex: ' + this.toHex() + ', decimal: ' + this.num + '>'\n}\n\nmodule.exports = Opcode\n","function decodeScriptChunks (script) {\n  const chunks = []\n  let i = 0\n  let len = 0\n  while (i < script.length) {\n    const opcodenum = script[i]\n    i += 1\n    if (opcodenum === 0) {\n      len = opcodenum\n      chunks.push({ opcodenum: opcodenum, len })\n    } else if (opcodenum < 76) { // OP_PUSHDATA1\n      len = opcodenum\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + opcodenum), len })\n      i += opcodenum\n    } else if (opcodenum === 76) { // OP_PUSHDATA1\n      len = script[i]\n      i += 1\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + len), len })\n      i += len\n    } else if (opcodenum === 77) { // OP_PUSHDATA2\n      len = script[i] | script[i + 1] << 8\n      i += 2\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + len), len })\n      i += len\n    } else if (opcodenum === 78) { // OP_PUSHDATA4\n      len = script[i] + script[i + 1] * 0x0100 + script[i + 2] * 0x010000 + script[i + 3] * 0x01000000\n      i += 4\n      chunks.push({ opcodenum: opcodenum, buf: script.slice(i, i + len), len })\n      i += len\n    } else {\n      chunks.push({ opcodenum: opcodenum })\n    }\n  }\n  // if (i !== script.length) throw new Error('bad script')\n  return chunks\n}\n\nmodule.exports = decodeScriptChunks\n","const HEX_REGEX = /^(?:[a-fA-F0-9][a-fA-F0-9])*$/\n\nfunction isHex (s) {\n  return HEX_REGEX.test(s)\n}\n\nmodule.exports = isHex\n","/* global VARIANT */\n\nconst isHex = require('./is-hex')\n\n// Prefer our implementation of decodeHex over Buffer when we don't know the VARIANT\n// to avoid accidentally importing the Buffer shim in the browser.\n\nfunction decodeHex (hex) {\n  if (typeof hex !== 'string') throw new Error('not a string')\n\n  if (hex.startsWith('0x')) hex = hex.slice(2)\n\n  if (hex.length % 2 === 1) hex = '0' + hex\n\n  if (!isHex(hex)) throw new Error('invalid hex string in script')\n\n  if (typeof VARIANT === 'undefined' || VARIANT === 'browser') {\n    const length = hex.length / 2\n    const arr = new Uint8Array(length)\n    const isNaN = x => x !== x // eslint-disable-line no-self-compare\n    for (let i = 0; i < length; ++i) {\n      const byte = parseInt(hex.substr(i * 2, 2), 16)\n      if (isNaN(byte)) throw new Error('bad hex char')\n      arr[i] = byte\n    }\n    return arr\n  } else {\n    return Buffer.from(hex, 'hex')\n  }\n}\n\nmodule.exports = decodeHex\n","function writePushData (writer, buffer) {\n  // It is possible to optimize buffers that only store numbers 1-16, or -1, by using the OP_N opcodes.\n  // But we say \"push data\" is always stored using OP_0 or OP_PUSH(N) so that it's easy to identify and\n  // extract, and also because there is some ambiguity around OP_0 if we don't do this.\n  if (buffer.length === 0) {\n    writer.write([0])\n  } else if (buffer.length <= 75) {\n    writer.write([buffer.length]) // OP_PUSH(buffer.length)\n    writer.write(buffer)\n  } else if (buffer.length <= 0xFF) {\n    writer.write([76, buffer.length]) // OP_PUSHDATA1\n    writer.write(buffer)\n  } else if (buffer.length <= 0xFFFF) {\n    writer.write([77, buffer.length % 256, buffer.length >> 8]) // OP_PUSHDATA2\n    writer.write(buffer)\n  } else if (buffer.length <= 0xFFFFFFFF) {\n    const prefix = new Uint8Array(5)\n    prefix[0] = 78 // OP_PUSHDATA4\n    let n = buffer.length\n    prefix[1] = n % 256\n    n = Math.floor(n / 256)\n    prefix[2] = n % 256\n    n = Math.floor(n / 256)\n    prefix[3] = n % 256\n    n = Math.floor(n / 256)\n    prefix[4] = n\n    writer.write(prefix)\n    writer.write(buffer)\n  } else {\n    throw new Error('data too large')\n  }\n  return writer\n}\n\nmodule.exports = writePushData\n","const decodeHex = require('./decode-hex')\nconst opcodes = require('../opcode')\nconst BufferWriter = require('./bufferwriter')\nconst writePushData = require('../script/write-push-data')\n\nfunction decodeASM (script) {\n  const parts = script.split(' ')\n  const writer = new BufferWriter()\n  parts.forEach(part => {\n    if (part in opcodes) {\n      writer.write([opcodes[part]])\n    } else if (part === '0') {\n      writer.write([opcodes.OP_0])\n    } else if (part === '-1') {\n      writer.write([opcodes.OP_1NEGATE])\n    } else {\n      const buf = decodeHex(part)\n      writePushData(writer, buf)\n    }\n  })\n  return writer.toBuffer()\n}\n\nmodule.exports = decodeASM\n","/* global VARIANT */\n\nlet encodeHex = null\n\n// Prefer our implementation of encodeHex over Buffer when we don't know the VARIANT\n// to avoid accidentally importing the Buffer shim in the browser.\n\nif (typeof VARIANT === 'undefined' || VARIANT === 'browser') {\n  // In the browser, a lookup table is fastest, and faster than the Buffer toString shim.\n  const HEX = [\n    '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f',\n    '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f',\n    '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f',\n    '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f',\n    '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f',\n    '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f',\n    '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f',\n    '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f',\n    '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f',\n    '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f',\n    'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af',\n    'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf',\n    'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf',\n    'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df',\n    'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef',\n    'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff'\n  ]\n\n  encodeHex = function (buffer) {\n    const len = buffer.length\n    const out = new Array(len)\n    for (let i = 0; i < len; ++i) {\n      out[i] = HEX[buffer[i]]\n    }\n    return out.join('')\n  }\n} else {\n  // Buffer toString('hex') in Node is faster than any JavaScript we could write\n  encodeHex = function (buffer) {\n    return buffer instanceof Buffer ? buffer.toString('hex') : Buffer.from(buffer).toString('hex')\n  }\n}\n\nmodule.exports = encodeHex\n","'use strict'\n\nvar Address = require('../address')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Opcode = require('../opcode')\nvar PublicKey = require('../publickey')\nvar Signature = require('../crypto/signature')\nvar Networks = require('../networks')\nvar $ = require('../util/preconditions')\nvar _ = require('../util/_')\nvar errors = require('../errors')\nvar buffer = require('buffer')\nvar JSUtil = require('../util/js')\nconst decodeScriptChunks = require('../encoding/decode-script-chunks')\nconst decodeASM = require('../encoding/decode-asm')\nconst encodeHex = require('../encoding/encode-hex')\n\n// These WeakMap caches allow the objects themselves to maintain their immutability\nconst SCRIPT_TO_CHUNKS_CACHE = new WeakMap()\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script (from) {\n  if (!(this instanceof Script)) {\n    return new Script(from)\n  }\n  this.buffer = Buffer.from([])\n\n  if (Buffer.isBuffer(from)) {\n    return Script.fromBuffer(from)\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from)\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer())\n  } else if (_.isString(from)) {\n    return Script.fromString(from)\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    return Script.fromChunks(from.chunks)\n  } else if (_.isObject(from) && Buffer.isBuffer(from.buffer)) {\n    return Script.fromBuffer(from.buffer)\n  }\n}\n\nScript.prototype.set = function (obj) {\n  $.checkArgument(_.isObject(obj))\n  if (obj.chunks && _.isArray(obj.chunks)) {\n    var s = Script.fromChunks(obj.chunks)\n    this.buffer = s.buffer\n    return this\n  }\n\n  $.checkArgument(Buffer.isBuffer(obj.buffer))\n  this.buffer = obj.buffer\n  return this\n}\n\nScript.fromBuffer = function (buffer) {\n  $.checkArgument(Buffer.isBuffer(buffer))\n  var script = new Script()\n  script.buffer = buffer\n  return script\n}\n\nScript.fromChunks = function (chunks) {\n  var script = new Script()\n\n  const bw = new BufferWriter()\n\n  for (let index = 0; index < chunks.length; index++) {\n    const chunk = chunks[index]\n    bw.writeUInt8(chunk.opcodenum)\n    if (chunk.buf) {\n      if (chunk.opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf)\n      } else if (chunk.opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len)\n        bw.write(chunk.buf)\n      } else if (chunk.opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len)\n        bw.write(chunk.buf)\n      } else if (chunk.opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len)\n        bw.write(chunk.buf)\n      }\n    }\n  }\n\n  script.buffer = bw.toBuffer()\n  return script\n}\n\nScript.prototype.toBuffer = function () {\n  return this.buffer\n}\n\nScript.fromASM = function (str) {\n  return Script.fromBuffer(decodeASM(str))\n}\n\nScript.fromHex = function (str) {\n  return new Script(buffer.Buffer.from(str, 'hex'))\n}\n\nScript.fromString = function (str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(buffer.Buffer.from(str, 'hex'))\n  }\n\n  var chunks = []\n\n  var tokens = str.split(' ')\n  var i = 0\n  while (i < tokens.length) {\n    var token = tokens[i]\n    var opcode = Opcode(token)\n    var opcodenum = opcode.toNumber()\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token)\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        var buf = Buffer.from(tokens[i + 1].slice(2), 'hex')\n        if (buf.length !== opcodenum) {\n          throw new Error('Invalid script buf len: ' + JSON.stringify(str))\n        }\n        chunks.push({\n          buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        })\n        i = i + 2\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str))\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x')\n      }\n      chunks.push({\n        buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      })\n      i = i + 3\n    } else {\n      chunks.push({\n        opcodenum: opcodenum\n      })\n      i = i + 1\n    }\n  }\n  return Script.fromChunks(chunks)\n}\n\nScript.prototype.slice = function (start, end) {\n  return this.buffer.slice(start, end)\n}\n\nObject.defineProperty(Script.prototype, 'chunks', {\n  get () {\n    if (SCRIPT_TO_CHUNKS_CACHE.has(this)) return SCRIPT_TO_CHUNKS_CACHE.get(this)\n    const chunks = decodeScriptChunks(this.buffer)\n    SCRIPT_TO_CHUNKS_CACHE.set(this, chunks)\n    return chunks\n  }\n})\n\nObject.defineProperty(Script.prototype, 'length', {\n  get () {\n    return this.buffer.length\n  }\n})\n\nScript.prototype._chunkToString = function (chunk, type) {\n  var opcodenum = chunk.opcodenum\n  var asm = (type === 'asm')\n  var str = ''\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0'\n        } else if (opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1'\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString()\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString()\n      }\n    } else {\n      var numstr = opcodenum.toString(16)\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr\n      }\n      if (asm) {\n        str = str + ' ' + numstr\n      } else {\n        str = str + ' ' + '0x' + numstr\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4)) {\n      str = str + ' ' + Opcode(opcodenum).toString()\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex')\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex')\n      }\n    }\n  }\n  return str\n}\n\nScript.prototype.toASM = function () {\n  var str = ''\n  var chunks = this.chunks\n  for (var i = 0; i < chunks.length; i++) {\n    var chunk = this.chunks[i]\n    str += this._chunkToString(chunk, 'asm')\n  }\n\n  return str.substr(1)\n}\n\nScript.prototype.toString = function () {\n  var str = ''\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i]\n    str += this._chunkToString(chunk)\n  }\n\n  return str.substr(1)\n}\n\nScript.prototype.toHex = function () {\n  return encodeHex(this.buffer)\n}\n\nScript.prototype.inspect = function () {\n  return '<Script: ' + this.toString() + '>'\n}\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function () {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG)\n}\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function () {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf\n    var pubkeyBuf = this.chunks[1].buf\n    if (signatureBuf &&\n      signatureBuf.length &&\n      signatureBuf[0] === 0x30 &&\n      pubkeyBuf &&\n      pubkeyBuf.length\n    ) {\n      var version = pubkeyBuf[0]\n      if ((version === 0x04 ||\n        version === 0x06 ||\n        version === 0x07) && pubkeyBuf.length === 65) {\n        return true\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nScript.prototype.getPublicKey = function () {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output')\n  return this.chunks[0].buf\n}\n\nScript.prototype.getPublicKeyHash = function () {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output')\n  return this.chunks[2].buf\n}\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function () {\n  if (this.chunks.length === 2 &&\n    this.chunks[0].buf &&\n    this.chunks[0].buf.length &&\n    this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf\n    var version = pubkeyBuf[0]\n    var isVersion = false\n    if ((version === 0x04 ||\n      version === 0x06 ||\n      version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf)\n    }\n  }\n  return false\n}\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function () {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf\n    if (signatureBuf &&\n      signatureBuf.length &&\n      signatureBuf[0] === 0x30) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function () {\n  var buf = this.toBuffer()\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL)\n}\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function () {\n  if (this.chunks.length <= 1) {\n    return false\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1]\n  var redeemBuf = redeemChunk.buf\n  if (!redeemBuf) {\n    return false\n  }\n\n  var redeemScript\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf)\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false\n    }\n    throw e\n  }\n  var type = redeemScript.classify()\n  return type !== Script.types.UNKNOWN\n}\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function () {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function (obj) {\n      return obj.buf && Buffer.isBuffer(obj.buf)\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG)\n}\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function () {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function (obj) {\n      return obj.buf &&\n        Buffer.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf)\n    })\n}\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function () {\n  var step1 = this.buffer.length >= 1 &&\n    this.buffer[0] === Opcode.OP_RETURN\n  if (!step1) return false\n  var buffer = this.buffer.slice(1)\n  var script2 = new Script({ buffer: buffer })\n  return script2.isPushOnly()\n}\n\nScript.prototype.isSafeDataOut = function () {\n  if (this.buffer.length < 2) {\n    return false\n  }\n  if (this.buffer[0] !== Opcode.OP_FALSE) {\n    return false\n  }\n  var buffer = this.buffer.slice(1)\n  var script2 = new Script({ buffer })\n  return script2.isDataOut()\n}\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of safe OP_RETURN data, return an array of buffers\n * In the case of a standard deprecated OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function () {\n  if (this.isSafeDataOut()) {\n    var chunks = this.chunks.slice(2)\n    var buffers = chunks.map(chunk => chunk.buf)\n    return buffers\n  }\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return Buffer.alloc(0)\n    } else {\n      return Buffer.from(this.chunks[1].buf)\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return Buffer.from(this.chunks[2].buf)\n  }\n  throw new Error('Unrecognized script type to get data from')\n}\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function () {\n  return _.every(this.chunks, function (chunk) {\n    return chunk.opcodenum <= Opcode.OP_16 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA1 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA2 ||\n      chunk.opcodenum === Opcode.OP_PUSHDATA4\n  })\n}\n\nScript.types = {}\nScript.types.UNKNOWN = 'Unknown'\nScript.types.PUBKEY_OUT = 'Pay to public key'\nScript.types.PUBKEY_IN = 'Spend from public key'\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash'\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash'\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash'\nScript.types.SCRIPTHASH_IN = 'Spend from script hash'\nScript.types.MULTISIG_OUT = 'Pay to multisig'\nScript.types.MULTISIG_IN = 'Spend from multisig'\nScript.types.DATA_OUT = 'Data push'\nScript.types.SAFE_DATA_OUT = 'Safe data push'\n\nScript.OP_RETURN_STANDARD_SIZE = 220\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function () {\n  if (this._isInput) {\n    return this.classifyInput()\n  } else if (this._isOutput) {\n    return this.classifyOutput()\n  } else {\n    var outputType = this.classifyOutput()\n    return outputType !== Script.types.UNKNOWN ? outputType : this.classifyInput()\n  }\n}\n\nScript.outputIdentifiers = {}\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut\nScript.outputIdentifiers.SAFE_DATA_OUT = Script.prototype.isSafeDataOut\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function () {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type]\n    }\n  }\n  return Script.types.UNKNOWN\n}\n\nScript.inputIdentifiers = {}\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function () {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type]\n    }\n  }\n  return Script.types.UNKNOWN\n}\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function () {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN\n}\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function (obj) {\n  this._addByType(obj, true)\n  return this\n}\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function (script) {\n  $.checkState(script instanceof Script, 'Must provide another script')\n  if (this.buffer.length !== script.buffer.length) {\n    return false\n  }\n  var i\n  for (i = 0; i < this.buffer.length; i++) {\n    if (this.buffer[i] !== script.buffer[i]) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function (obj) {\n  this._addByType(obj, false)\n  return this\n}\n\nScript.prototype._addByType = function (obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend)\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend)\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend)\n  } else if (Buffer.isBuffer(obj)) {\n    this._addBuffer(obj, prepend)\n  } else if (obj instanceof Script) {\n    this._insertAtPosition(obj.buffer, prepend)\n  } else if (typeof obj === 'object') {\n    var s = Script.fromChunks([obj])\n    this._insertAtPosition(s.toBuffer(), prepend)\n  } else {\n    throw new Error('Invalid script chunk')\n  }\n}\n\nScript.prototype._insertAtPosition = function (buf, prepend) {\n  var bw = new BufferWriter()\n\n  if (prepend) {\n    bw.write(buf)\n    bw.write(this.buffer)\n  } else {\n    bw.write(this.buffer)\n    bw.write(buf)\n  }\n  this.buffer = bw.toBuffer()\n}\n\nScript.prototype._addOpcode = function (opcode, prepend) {\n  var op\n  if (typeof opcode === 'number') {\n    op = opcode\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber()\n  } else {\n    op = Opcode(opcode).toNumber()\n  }\n\n  // OP_INVALIDOPCODE\n  if (op > 255) {\n    throw new errors.Script.InvalidOpcode(op)\n  }\n  this._insertAtPosition(Script.fromChunks([{\n    opcodenum: op\n  }]).toBuffer(), prepend)\n  return this\n}\n\nScript.prototype._addBuffer = function (buf, prepend) {\n  var bw = new BufferWriter()\n  var opcodenum\n  var len = buf.length\n  if (len === 0) {\n    opcodenum = 0\n    bw.writeUInt8(opcodenum)\n  } else if (len > 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len\n    bw.writeUInt8(opcodenum)\n    bw.write(buf)\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1\n    bw.writeUInt8(opcodenum)\n    bw.writeUInt8(len)\n    bw.write(buf)\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2\n    bw.writeUInt8(opcodenum)\n    bw.writeUInt16LE(len)\n    bw.write(buf)\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4\n    bw.writeUInt8(opcodenum)\n    bw.writeUInt32LE(len)\n    bw.write(buf)\n  } else {\n    throw new Error('You can\\'t push that much data')\n  }\n\n  this._insertAtPosition(bw.toBuffer(), prepend)\n  return this\n}\n\nScript.prototype.clone = function () {\n  return Script.fromBuffer(this.buffer.slice())\n}\n\nScript.prototype.removeCodeseparators = function () {\n  var chunks = []\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i])\n    }\n  }\n  SCRIPT_TO_CHUNKS_CACHE.delete(this)\n\n  this.buffer = Script.fromChunks(chunks).toBuffer()\n  return this\n}\n\n/**\n * If the script does not contain any OP_CODESEPARATOR, Return all scripts\n * If the script contains any OP_CODESEPARATOR, the scriptCode is the script but removing everything up to and including the last executed OP_CODESEPARATOR before the signature checking opcode being executed\n * @param {n} The {n}th codeseparator in the script\n *\n * @returns {Script} Subset of script starting at the {n}th codeseparator\n */\nScript.prototype.subScript = function (n) {\n  var idx = 0\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum === Opcode.OP_CODESEPARATOR) {\n      if (idx === n) {\n        return Script.fromChunks(this.chunks.slice(i + 1))\n      } else {\n        idx++\n      }\n    }\n  }\n\n  return this\n}\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function (publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys')\n  opts = opts || {}\n  var script = new Script()\n  script.add(Opcode.smallInt(threshold))\n  publicKeys = _.map(publicKeys, PublicKey)\n  var sorted = publicKeys\n  if (!opts.noSorting) {\n    sorted = publicKeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i]\n    script.add(publicKey.toBuffer())\n  }\n  script.add(Opcode.smallInt(publicKeys.length))\n  script.add(Opcode.OP_CHECKMULTISIG)\n  return script\n}\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys))\n  $.checkArgument(_.isNumber(threshold))\n  $.checkArgument(_.isArray(signatures))\n  opts = opts || {}\n  var s = new Script()\n  s.add(Opcode.OP_0)\n  _.each(signatures, function (signature) {\n    $.checkArgument(Buffer.isBuffer(signature), 'Signatures must be an array of Buffers')\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature)\n  })\n  return s\n}\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function (pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys))\n  $.checkArgument(_.isNumber(threshold))\n  $.checkArgument(_.isArray(signatures))\n  opts = opts || {}\n  var s = new Script()\n  s.add(Opcode.OP_0)\n  _.each(signatures, function (signature) {\n    $.checkArgument(Buffer.isBuffer(signature), 'Signatures must be an array of Buffers')\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature)\n  })\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer())\n  return s\n}\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function (to) {\n  $.checkArgument(!_.isUndefined(to))\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to))\n  if (to instanceof PublicKey) {\n    to = to.toAddress()\n  } else if (_.isString(to)) {\n    to = new Address(to)\n  }\n  var s = new Script()\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG)\n  s._network = to.network\n  return s\n}\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function (pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey)\n  var s = new Script()\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG)\n  return s\n}\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer|Array)} data - the data to embed in the output - it is a string, buffer, or array of strings or buffers\n * @param {(string)} encoding - the type of encoding of the string(s)\n */\nScript.buildDataOut = function (data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || _.isArray(data) || Buffer.isBuffer(data))\n  var datas = data\n  if (!_.isArray(datas)) {\n    datas = [data]\n  }\n  var s = new Script()\n  s.add(Opcode.OP_RETURN)\n  for (let data of datas) {\n    $.checkArgument(_.isUndefined(data) || _.isString(data) || Buffer.isBuffer(data))\n    if (_.isString(data)) {\n      data = Buffer.from(data, encoding)\n    }\n    if (!_.isUndefined(data)) {\n      s.add(data)\n    }\n  }\n  return s\n}\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer|Array)} data - the data to embed in the output - it is a string, buffer, or array of strings or buffers\n * @param {(string)} encoding - the type of encoding of the string(s)\n */\nScript.buildSafeDataOut = function (data, encoding) {\n  var s2 = Script.buildDataOut(data, encoding)\n  var s1 = new Script()\n  s1.add(Opcode.OP_FALSE)\n  s1.add(s2)\n  return s1\n}\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function (script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()))\n  var s = new Script()\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL)\n\n  s._network = script._network || script.network\n  return s\n}\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function (signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || Buffer.isBuffer(signature))\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype))\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer()\n  }\n  var script = new Script()\n  script.add(Buffer.concat([\n    signature,\n    Buffer.from([(sigtype || Signature.SIGHASH_ALL) & 0xff])\n  ]))\n  return script\n}\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function (publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || Buffer.isBuffer(signature))\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype))\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer()\n  }\n  var script = new Script()\n    .add(Buffer.concat([\n      signature,\n      Buffer.from([(sigtype || Signature.SIGHASH_ALL) & 0xff])\n    ]))\n    .add(new PublicKey(publicKey).toBuffer())\n  return script\n}\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function () {\n  return new Script()\n}\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function () {\n  return Script.buildScriptHashOut(this)\n}\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function (address) {\n  address = Address(address)\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address)\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address)\n  }\n  throw new errors.Script.UnrecognizedAddress(address)\n}\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function (opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo()\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo()\n  } else {\n    var info = this._getOutputAddressInfo()\n    if (!info) {\n      return this._getInputAddressInfo()\n    }\n    return info\n  }\n}\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function () {\n  var info = {}\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData()\n    info.type = Address.PayToScriptHash\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData()\n    info.type = Address.PayToPublicKeyHash\n  } else {\n    return false\n  }\n  return info\n}\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function () {\n  var info = {}\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf)\n    info.type = Address.PayToPublicKeyHash\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf)\n    info.type = Address.PayToScriptHash\n  } else {\n    return false\n  }\n  return info\n}\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function (network) {\n  var info = this.getAddressInfo()\n  if (!info) {\n    return false\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork\n  return new Address(info)\n}\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function (script) {\n  var buf = script.toBuffer()\n  var hex = buf.toString('hex')\n  var chunks = this.chunks\n  for (var i = 0; i < chunks.length; i++) {\n    var script2 = Script.fromChunks([chunks[i]])\n    var buf2 = script2.toBuffer()\n    var hex2 = buf2.toString('hex')\n    if (hex === hex2) {\n      chunks.splice(i, 1)\n      this.buffer = Script.fromChunks(chunks).toBuffer()\n    }\n  }\n  return this\n}\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function (i) {\n  var chunk = this.chunks[i]\n  var buf = chunk.buf\n  var opcodenum = chunk.opcodenum\n  if (!buf) {\n    return true\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1)\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2\n  }\n  return true\n}\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function (opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1)\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode))\n  }\n}\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function (accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate)\n  var self = this\n  var n = 0\n  var lastOpcode = Opcode.OP_INVALIDOPCODE\n  _.each(self.chunks, function getChunk (chunk) {\n    var opcode = chunk.opcodenum\n    if (opcode === Opcode.OP_CHECKSIG || opcode === Opcode.OP_CHECKSIGVERIFY) {\n      n++\n    } else if (opcode === Opcode.OP_CHECKMULTISIG || opcode === Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode)\n      } else {\n        n += 20\n      }\n    }\n    lastOpcode = opcode\n  })\n  return n\n}\n\nmodule.exports = Script\n","'use strict'\n\nvar Stack = function Stack (rawstack, varStack) {\n  this.stack = rawstack\n  this.varStack = varStack || []\n}\n\nmodule.exports = Stack\n\nStack.prototype.pushVar = function (varName) {\n  this.varStack.push(varName || '$tmp')\n}\n\nStack.prototype.popVar = function () {\n  this.varStack.pop()\n}\n\nStack.prototype.push = function (n, varName) {\n  this.pushVar(varName)\n  this.stack.push(n)\n  this.checkConsistency()\n}\n\nStack.prototype.pop = function () {\n  this.popVar()\n  let top = this.stack.pop()\n  this.checkConsistency()\n  return top\n}\n\nStack.prototype.updateTopVars = function (vars) {\n  if (vars.length > this.varStack.length) {\n    throw new Error(`updateTopVars fail, stack: ${this.stack.length},  varStack: ${this.varStack.length}, vars:${vars.length}`)\n  }\n  vars = vars.reverse()\n  this.varStack.splice(this.varStack.length - vars.length, vars.length, ...vars)\n}\n\nStack.prototype.stacktop = function (i) {\n  return this.stack[this.stack.length + i]\n}\n\nStack.prototype.vartop = function (i) {\n  return this.varStack[this.varStack.length + i]\n}\n\nStack.prototype.slice = function (start, end) {\n  return this.stack.slice(start, end)\n}\n\nStack.prototype.splice = function (start, deleteCount, ...items) {\n  this.varStack.splice(start, deleteCount, ...items)\n  return this.stack.splice(start, deleteCount, ...items)\n}\n\nStack.prototype.write = function (i, value) {\n  this.stack[this.stack.length + i] = value\n}\n\nStack.prototype.copy = function () {\n  return new Stack(this.stack.slice() || [], this.varStack.slice() || [])\n}\n\nfunction bytesToHexString (bytearray) {\n  return bytearray.reduce(function (o, c) {\n    o += ('0' + (c & 0xFF).toString(16)).slice(-2)\n    return o\n  }, '')\n}\n\nStack.prototype.printVarStack = function () {\n  let array = this.varStack.map((v, i) => ({\n    name: v,\n    value: bytesToHexString(this.rawstack[i].data)\n  }))\n  console.log(JSON.stringify(array, null, 4))\n}\n\nStack.prototype.checkConsistency = function () {\n  if (this.stack.length !== this.varStack.length) {\n    this.printVarStack()\n    throw new Error(`checkConsistency fail, stack: ${this.stack.length}, varStack:${this.varStack.length}`)\n  }\n}\n\nStack.prototype.checkConsistencyWithVars = function (varStack) {\n  if (this.stack.length < varStack.length) {\n    this.printVarStack()\n    throw new Error(`checkConsistencyWithVars fail, stack: ${this.stack.length}, varStack:${varStack.length}`)\n  }\n}\n\nObject.defineProperty(Stack.prototype, 'length', {\n  get: function () {\n    return this.stack.length\n  }\n})\n\nObject.defineProperty(Stack.prototype, 'rawstack', {\n  get: function () {\n    return this.stack\n  }\n})\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar BN = require('../crypto/bn')\n\nvar BufferReader = function BufferReader (buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf)\n  }\n  if (_.isUndefined(buf)) {\n    return\n  }\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    })\n  } else if (_.isString(buf)) {\n    var b = Buffer.from(buf, 'hex')\n    if (b.length * 2 !== buf.length) { throw new TypeError('Invalid hex string') }\n\n    this.set({\n      buf: b\n    })\n  } else if (_.isObject(buf)) {\n    var obj = buf\n    this.set(obj)\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader')\n  }\n}\n\nBufferReader.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined\n  this.pos = obj.pos || this.pos || 0\n  return this\n}\n\nBufferReader.prototype.eof = function () {\n  return this.pos >= this.buf.length\n}\n\nBufferReader.prototype.finished = BufferReader.prototype.eof\n\nBufferReader.prototype.read = function (len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length')\n  var buf = this.buf.slice(this.pos, this.pos + len)\n  this.pos = this.pos + len\n  return buf\n}\n\nBufferReader.prototype.readAll = function () {\n  var buf = this.buf.slice(this.pos, this.buf.length)\n  this.pos = this.buf.length\n  return buf\n}\n\nBufferReader.prototype.readUInt8 = function () {\n  var val = this.buf.readUInt8(this.pos)\n  this.pos = this.pos + 1\n  return val\n}\n\nBufferReader.prototype.readUInt16BE = function () {\n  var val = this.buf.readUInt16BE(this.pos)\n  this.pos = this.pos + 2\n  return val\n}\n\nBufferReader.prototype.readUInt16LE = function () {\n  var val = this.buf.readUInt16LE(this.pos)\n  this.pos = this.pos + 2\n  return val\n}\n\nBufferReader.prototype.readUInt32BE = function () {\n  var val = this.buf.readUInt32BE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readUInt32LE = function () {\n  var val = this.buf.readUInt32LE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readInt32LE = function () {\n  var val = this.buf.readInt32LE(this.pos)\n  this.pos = this.pos + 4\n  return val\n}\n\nBufferReader.prototype.readUInt64BEBN = function () {\n  var buf = this.buf.slice(this.pos, this.pos + 8)\n  var bn = BN.fromBuffer(buf)\n  this.pos = this.pos + 8\n  return bn\n}\n\nBufferReader.prototype.readUInt64LEBN = function () {\n  var second = this.buf.readUInt32LE(this.pos)\n  var first = this.buf.readUInt32LE(this.pos + 4)\n  var combined = (first * 0x100000000) + second\n  // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n  var bn\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined)\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8)\n    bn = new BN(data, 10, 'le')\n  }\n  this.pos = this.pos + 8\n  return bn\n}\n\nBufferReader.prototype.readVarintNum = function () {\n  var first = this.readUInt8()\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE()\n    case 0xFE:\n      return this.readUInt32LE()\n    case 0xFF:\n      var bn = this.readUInt64LEBN()\n      var n = bn.toNumber()\n      if (n <= Math.pow(2, 53)) {\n        return n\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN')\n      }\n      // break // unreachable\n    default:\n      return first\n  }\n}\n\n/**\n * reads a length prepended buffer\n */\nBufferReader.prototype.readVarLengthBuffer = function () {\n  var len = this.readVarintNum()\n  var buf = this.read(len)\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' +\n    'Expected to read: ' + len + ' and read ' + buf.length)\n  return buf\n}\n\nBufferReader.prototype.readVarintBuf = function () {\n  var first = this.buf.readUInt8(this.pos)\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2)\n    case 0xFE:\n      return this.read(1 + 4)\n    case 0xFF:\n      return this.read(1 + 8)\n    default:\n      return this.read(1)\n  }\n}\n\nBufferReader.prototype.readVarintBN = function () {\n  var first = this.readUInt8()\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE())\n    case 0xFE:\n      return new BN(this.readUInt32LE())\n    case 0xFF:\n      return this.readUInt64LEBN()\n    default:\n      return new BN(first)\n  }\n}\n\nBufferReader.prototype.reverse = function () {\n  var buf = Buffer.alloc(this.buf.length)\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i]\n  }\n  this.buf = buf\n  return this\n}\n\nBufferReader.prototype.readReverse = function (len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length\n  }\n  var buf = this.buf.slice(this.pos, this.pos + len)\n  this.pos = this.pos + len\n  return Buffer.from(buf).reverse()\n}\n\nmodule.exports = BufferReader\n","'use strict'\n\nvar BufferWriter = require('./bufferwriter')\nvar BufferReader = require('./bufferreader')\nvar BN = require('../crypto/bn')\n\nvar Varint = function Varint (buf) {\n  if (!(this instanceof Varint)) { return new Varint(buf) }\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf\n  } else if (typeof buf === 'number') {\n    var num = buf\n    this.fromNumber(num)\n  } else if (buf instanceof BN) {\n    var bn = buf\n    this.fromBN(bn)\n  } else if (buf) {\n    var obj = buf\n    this.set(obj)\n  }\n}\n\nVarint.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf\n  return this\n}\n\nVarint.prototype.fromString = function (str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  })\n  return this\n}\n\nVarint.prototype.toString = function () {\n  return this.buf.toString('hex')\n}\n\nVarint.prototype.fromBuffer = function (buf) {\n  this.buf = buf\n  return this\n}\n\nVarint.prototype.fromBufferReader = function (br) {\n  this.buf = br.readVarintBuf()\n  return this\n}\n\nVarint.prototype.fromBN = function (bn) {\n  var bw = new BufferWriter()\n  this.buf = bw.writeVarintBN(bn).toBuffer()\n  return this\n}\n\nVarint.prototype.fromNumber = function (num) {\n  var bw = new BufferWriter()\n  this.buf = bw.writeVarintNum(num).toBuffer()\n  return this\n}\n\nVarint.prototype.toBuffer = function () {\n  return this.buf\n}\n\nVarint.prototype.toBN = function () {\n  return BufferReader(this.buf).readVarintBN()\n}\n\nVarint.prototype.toNumber = function () {\n  return BufferReader(this.buf).readVarintNum()\n}\n\nmodule.exports = Varint\n","'use strict'\n\nvar _ = require('../util/_')\nvar BN = require('../crypto/bn')\nvar buffer = require('buffer')\nvar JSUtil = require('../util/js')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Varint = require('../encoding/varint')\nvar Script = require('../script')\nvar $ = require('../util/preconditions')\nvar errors = require('../errors')\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff\n\nfunction Output (args) {\n  if (!(this instanceof Output)) {\n    return new Output(args)\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis\n    if (Buffer.isBuffer(args.script)) {\n      this.setScriptFromBuffer(args.script)\n    } else {\n      var script\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = buffer.Buffer.from(args.script, 'hex')\n      } else {\n        script = args.script\n      }\n      this.setScript(script)\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output')\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._script\n  }\n})\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._satoshis\n  },\n  set: function (num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num\n      this._satoshis = num.toNumber()\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num)\n      this._satoshisBN = BN.fromNumber(this._satoshis)\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      )\n      this._satoshisBN = BN.fromNumber(num)\n      this._satoshis = num\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    )\n  }\n})\n\nOutput.prototype.invalidSatoshis = function () {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer'\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value'\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative'\n  }\n  return false\n}\n\nObject.defineProperty(Output.prototype, 'satoshisBN', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._satoshisBN\n  },\n  set: function (num) {\n    this._satoshisBN = num\n    this._satoshis = num.toNumber()\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    )\n  }\n})\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject () {\n  var obj = {\n    satoshis: this.satoshis\n  }\n  obj.script = this._script.toBuffer().toString('hex')\n  return obj\n}\n\nOutput.fromObject = function (data) {\n  return new Output(data)\n}\n\nOutput.prototype.setScriptFromBuffer = function (buffer) {\n  try {\n    this._script = Script.fromBuffer(buffer)\n    this._script._isOutput = true\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null\n    } else {\n      throw e\n    }\n  }\n}\n\nOutput.prototype.setScript = function (script) {\n  if (script instanceof Script) {\n    this._script = script\n    this._script._isOutput = true\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script)\n    this._script._isOutput = true\n  } else if (Buffer.isBuffer(script)) {\n    this.setScriptFromBuffer(script)\n  } else {\n    throw new TypeError('Invalid argument type: script')\n  }\n  return this\n}\n\nOutput.prototype.inspect = function () {\n  var scriptStr\n  if (this.script) {\n    scriptStr = this.script.inspect()\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>'\n}\n\nOutput.fromBufferReader = function (br) {\n  var obj = {}\n  obj.satoshis = br.readUInt64LEBN()\n  var size = br.readVarintNum()\n  if (size !== 0) {\n    obj.script = br.read(size)\n  } else {\n    obj.script = buffer.Buffer.from([])\n  }\n  return new Output(obj)\n}\n\nOutput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter()\n  }\n  writer.writeUInt64LEBN(this._satoshisBN)\n  var script = this._script.toBuffer()\n  writer.writeVarintNum(script.length)\n  writer.write(script)\n  return writer\n}\n\n// 8    value\n// ???  script size (VARINT)\n// ???  script\nOutput.prototype.getSize = function () {\n  var scriptSize = this.script.toBuffer().length\n  var varintSize = Varint(scriptSize).toBuffer().length\n  return 8 + varintSize + scriptSize\n}\n\nmodule.exports = Output\n","'use strict'\n\nvar _ = require('../../util/_')\nvar $ = require('../../util/preconditions')\nvar errors = require('../../errors')\nvar BufferWriter = require('../../encoding/bufferwriter')\nvar buffer = require('buffer')\nvar JSUtil = require('../../util/js')\nvar Script = require('../../script')\nvar Sighash = require('../sighash')\nvar Output = require('../output')\n\nvar MAXINT = 0xffffffff // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2\nvar DEFAULT_SEQNUMBER = MAXINT\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1\n\nfunction Input (params) {\n  if (!(this instanceof Input)) {\n    return new Input(params)\n  }\n  if (params) {\n    return this._fromObject(params)\n  }\n}\n\nInput.MAXINT = MAXINT\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER\n// txid + output index + sequence number\nInput.BASE_SIZE = 32 + 4 + 4\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    if (this.isNull()) {\n      return null\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer)\n      this._script._isInput = true\n    }\n    return this._script\n  }\n})\n\nInput.fromObject = function (obj) {\n  $.checkArgument(_.isObject(obj))\n  var input = new Input()\n  return input._fromObject(obj)\n}\n\nInput.prototype._fromObject = function (params) {\n  var prevTxId\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = buffer.Buffer.from(params.prevTxId, 'hex')\n  } else {\n    prevTxId = params.prevTxId\n  }\n  this.output = params.output\n    ? (params.output instanceof Output ? params.output : new Output(params.output)) : undefined\n  this.prevTxId = prevTxId || params.txidbuf\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber)\n    ? (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript()\n  }\n  this.setScript(params.scriptBuffer || params.script)\n  return this\n}\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject () {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex')\n  }\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString()\n  }\n  if (this.output) {\n    obj.output = this.output.toObject()\n  }\n  return obj\n}\n\nInput.fromBufferReader = function (br) {\n  var input = new Input()\n  input.prevTxId = br.readReverse(32)\n  input.outputIndex = br.readUInt32LE()\n  input._scriptBuffer = br.readVarLengthBuffer()\n  input.sequenceNumber = br.readUInt32LE()\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input\n}\n\nInput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter()\n  }\n  writer.writeReverse(this.prevTxId)\n  writer.writeUInt32LE(this.outputIndex)\n  var script = this._scriptBuffer\n  writer.writeVarintNum(script.length)\n  writer.write(script)\n  writer.writeUInt32LE(this.sequenceNumber)\n  return writer\n}\n\nInput.prototype.setScript = function (script) {\n  this._script = null\n  if (script instanceof Script) {\n    this._script = script\n    this._script._isInput = true\n    this._scriptBuffer = script.toBuffer()\n  } else if (script === null) {\n    this._script = Script.empty()\n    this._script._isInput = true\n    this._scriptBuffer = this._script.toBuffer()\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = buffer.Buffer.from(script, 'hex')\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script)\n    this._script._isInput = true\n    this._scriptBuffer = this._script.toBuffer()\n  } else if (Buffer.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = buffer.Buffer.from(script)\n  } else {\n    throw new TypeError('Invalid argument type: script')\n  }\n  return this\n}\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function () {\n  // throw new errors.AbstractMethodInvoked(\n  //   'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n  //   ' for input: ' + JSON.stringify(this)\n  // )\n  return []\n}\n\nInput.prototype.isFullySigned = function () {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned')\n}\n\nInput.prototype.isFinal = function () {\n  return this.sequenceNumber === Input.MAXINT\n}\n\nInput.prototype.addSignature = function () {\n  // throw new errors.AbstractMethodInvoked('Input#addSignature')\n}\n\nInput.prototype.clearSignatures = function () {\n  // throw new errors.AbstractMethodInvoked('Input#clearSignatures')\n}\n\nInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    this.output.satoshisBN\n  )\n}\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function () {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff\n}\n\nInput.prototype._estimateSize = function () {\n  return this.toBufferWriter().toBuffer().length\n}\n\nmodule.exports = Input\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar inherits = require('inherits')\nvar JSUtil = require('../util/js')\n\nvar PublicKey = require('../publickey')\nvar errors = require('../errors')\nvar Signature = require('../crypto/signature')\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature (arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg)\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg)\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object')\n}\ninherits(TransactionSignature, Signature)\n\nTransactionSignature.prototype._fromObject = function (arg) {\n  this._checkObjectArgs(arg)\n  this.publicKey = new PublicKey(arg.publicKey)\n  this.prevTxId = Buffer.isBuffer(arg.prevTxId) ? arg.prevTxId : Buffer.from(arg.prevTxId, 'hex')\n  this.outputIndex = arg.outputIndex\n  this.inputIndex = arg.inputIndex\n  this.signature = (arg.signature instanceof Signature) ? arg.signature\n    : Buffer.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature)\n      : Signature.fromString(arg.signature)\n  this.sigtype = arg.sigtype\n  return this\n}\n\nTransactionSignature.prototype._checkObjectArgs = function (arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey')\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex')\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex')\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number')\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number')\n  $.checkArgument(arg.signature, 'signature')\n  $.checkArgument(arg.prevTxId, 'prevTxId')\n  $.checkState(arg.signature instanceof Signature ||\n               Buffer.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value')\n  $.checkState(Buffer.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value')\n  $.checkArgument(arg.sigtype, 'sigtype')\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number')\n}\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject () {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  }\n}\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function (object) {\n  $.checkArgument(object)\n  return new TransactionSignature(object)\n}\n\nmodule.exports = TransactionSignature\n","'use strict'\n\nvar inherits = require('inherits')\n\nvar $ = require('../../util/preconditions')\n\nvar Input = require('./input')\nvar Output = require('../output')\nvar Sighash = require('../sighash')\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput () {\n  Input.apply(this, arguments)\n}\ninherits(PublicKeyInput, Input)\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n  var publicKey = privateKey.toPublicKey()\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    })]\n  }\n  return []\n}\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid')\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ))\n  return this\n}\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty())\n  return this\n}\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyIn()\n}\n\n// 32   txid\n// 4    output index\n// ---\n// 1    script size (VARINT)\n// 1    signature size (OP_PUSHDATA)\n// <=72 signature (DER + SIGHASH type)\n// ---\n// 4    sequence number\nPublicKeyInput.SCRIPT_MAX_SIZE = 74\n\nPublicKeyInput.prototype._estimateSize = function () {\n  return Input.BASE_SIZE + PublicKeyInput.SCRIPT_MAX_SIZE\n}\n\nmodule.exports = PublicKeyInput\n","'use strict'\n\nvar inherits = require('inherits')\n\nvar $ = require('../../util/preconditions')\n\nvar Hash = require('../../crypto/hash')\nvar Input = require('./input')\nvar Output = require('../output')\nvar Sighash = require('../sighash')\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar TransactionSignature = require('../signature')\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput () {\n  Input.apply(this, arguments)\n}\ninherits(PublicKeyHashInput, Input)\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output)\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer())\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  if (hashData.equals(this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, this.output.satoshisBN),\n      sigtype: sigtype\n    })]\n  }\n  return []\n}\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid')\n\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ))\n  return this\n}\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function () {\n  this.setScript(Script.empty())\n  return this\n}\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function () {\n  return this.script.isPublicKeyHashIn()\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// 1    script size (VARINT)\n// 1    signature size (OP_PUSHDATA)\n// <=72 signature (DER + SIGHASH type)\n// 1    public key size (OP_PUSHDATA)\n// 33   compressed public key\n//\n// 4    sequence number\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 108\n\nPublicKeyHashInput.prototype._estimateSize = function () {\n  return Input.BASE_SIZE + PublicKeyHashInput.SCRIPT_MAX_SIZE\n}\n\nmodule.exports = PublicKeyHashInput\n","'use strict'\n\nvar _ = require('../../util/_')\nvar inherits = require('inherits')\nvar Input = require('./input')\nvar Output = require('../output')\nvar $ = require('../../util/preconditions')\n\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar Sighash = require('../sighash')\nvar TransactionSignature = require('../signature')\nvar PublicKey = require('../../publickey')\nvar Varint = require('../../encoding/varint')\n\n/**\n * @constructor\n */\nfunction MultiSigInput (input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments)\n  var self = this\n  pubkeys = pubkeys || input.publicKeys\n  threshold = threshold || input.threshold\n  signatures = signatures || input.signatures\n  this.publicKeys = pubkeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script')\n  this.publicKeyIndex = {}\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index\n  })\n  this.threshold = threshold\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length)\n}\ninherits(MultiSigInput, Input)\n\nMultiSigInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments)\n  obj.threshold = this.threshold\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) { return publicKey.toString() })\n  obj.signatures = this._serializeSignatures()\n  return obj\n}\n\nMultiSigInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return new TransactionSignature(signature)\n  })\n}\n\nMultiSigInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return signature.toObject()\n  })\n}\n\nMultiSigInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  var self = this\n  var results = []\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script, self.output.satoshisBN),\n        sigtype: sigtype\n      }))\n    }\n  })\n\n  return results\n}\n\nMultiSigInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added')\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key')\n  $.checkState(this.isValidSignature(transaction, signature))\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature\n  this._updateScript()\n  return this\n}\n\nMultiSigInput.prototype._updateScript = function () {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ))\n  return this\n}\n\nMultiSigInput.prototype._createSignatures = function () {\n  return _.map(\n    _.filter(this.signatures, function (signature) { return !_.isUndefined(signature) }),\n    function (signature) {\n      return Buffer.concat([\n        signature.signature.toDER(),\n        Buffer.from([signature.sigtype & 0xff])\n      ])\n    }\n  )\n}\n\nMultiSigInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length)\n  this._updateScript()\n}\n\nMultiSigInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold\n}\n\nMultiSigInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures()\n}\n\nMultiSigInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + (!!signature)\n  }, 0)\n}\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]])\n  })\n}\n\nMultiSigInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    this.output.satoshisBN\n  )\n}\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function (transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      })\n\n      signature.signature.nhashtype = signature.sigtype\n      var isMatch = Sighash.verify(\n        transaction,\n        signature.signature,\n        signature.publicKey,\n        signature.inputIndex,\n        input.output.script\n      )\n\n      if (isMatch) {\n        signatureMatch = signature\n        return false\n      }\n\n      return true\n    })\n\n    return signatureMatch || null\n  })\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// ??? script size (VARINT)\n// 1    OP_0\n// --- signature list ---\n//      1       signature size (OP_PUSHDATA)\n//      <=72    signature (DER + SIGHASH type)\n//\n// 4    sequence number\nMultiSigInput.SIGNATURE_SIZE = 73\n\nMultiSigInput.prototype._estimateSize = function () {\n  var scriptSize = 1 + this.threshold * MultiSigInput.SIGNATURE_SIZE\n  return Input.BASE_SIZE + Varint(scriptSize).toBuffer().length + scriptSize\n}\n\nmodule.exports = MultiSigInput\n","'use strict'\n\nvar _ = require('../../util/_')\nvar inherits = require('inherits')\nvar Input = require('./input')\nvar Output = require('../output')\nvar $ = require('../../util/preconditions')\n\nvar Script = require('../../script')\nvar Signature = require('../../crypto/signature')\nvar Sighash = require('../sighash')\nvar TransactionSignature = require('../signature')\nvar PublicKey = require('../../publickey')\nvar Varint = require('../../encoding/varint')\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput (input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments)\n  var self = this\n  pubkeys = pubkeys || input.publicKeys\n  threshold = threshold || input.threshold\n  signatures = signatures || input.signatures\n  this.publicKeys = pubkeys.map(k => k.toString('hex')).sort().map(k => new PublicKey(k))\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold)\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n    'Provided public keys don\\'t hash to the provided output')\n  this.publicKeyIndex = {}\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index\n  })\n  this.threshold = threshold\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length)\n}\ninherits(MultiSigScriptHashInput, Input)\n\nMultiSigScriptHashInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments)\n  obj.threshold = this.threshold\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) { return publicKey.toString() })\n  obj.signatures = this._serializeSignatures()\n  return obj\n}\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return new TransactionSignature(signature)\n  })\n}\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined\n    }\n    return signature.toObject()\n  })\n}\n\nMultiSigScriptHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output)\n  sigtype = sigtype || (Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID)\n\n  var self = this\n  var results = []\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript, self.output.satoshisBN),\n        sigtype: sigtype\n      }))\n    }\n  })\n  return results\n}\n\nMultiSigScriptHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added')\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key')\n  $.checkState(this.isValidSignature(transaction, signature))\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature\n  this._updateScript()\n  return this\n}\n\nMultiSigScriptHashInput.prototype._updateScript = function () {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ))\n  return this\n}\n\nMultiSigScriptHashInput.prototype._createSignatures = function () {\n  return _.map(\n    _.filter(this.signatures, function (signature) { return !_.isUndefined(signature) }),\n    function (signature) {\n      return Buffer.concat([\n        signature.signature.toDER(),\n        Buffer.from([signature.sigtype & 0xff])\n      ])\n    }\n  )\n}\n\nMultiSigScriptHashInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length)\n  this._updateScript()\n}\n\nMultiSigScriptHashInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold\n}\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures()\n}\n\nMultiSigScriptHashInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + (!!signature)\n  }, 0)\n}\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]])\n  })\n}\n\nMultiSigScriptHashInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.redeemScript,\n    this.output.satoshisBN\n  )\n}\n\n// 32   txid\n// 4    output index\n// --- script ---\n// ???  script size (VARINT)\n// 1    OP_0\n// --- signature list ---\n//      1       signature size (OP_PUSHDATA)\n//      <=72    signature (DER + SIGHASH type)\n//\n// ???  redeem script size (OP_PUSHDATA)\n// --- redeem script ---\n//      1       OP_2\n//      --- public key list ---\n//      1       public key size (OP_PUSHDATA)\n//      33      compressed public key\n//\n//      1       OP_3\n//      1       OP_CHECKMULTISIG\n//\n// 4    sequence number\nMultiSigScriptHashInput.SIGNATURE_SIZE = 73\nMultiSigScriptHashInput.PUBKEY_SIZE = 34\n\nMultiSigScriptHashInput.prototype._estimateSize = function () {\n  var pubKeysSize = this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE\n  var sigsSize = this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE\n  var redeemScriptSize = 3 + pubKeysSize\n  var redeemScriptPushdataSize = redeemScriptSize <= 75 ? 1 : redeemScriptSize <= 255 ? 2 : 3\n  var scriptLength = sigsSize + 1 + redeemScriptPushdataSize + redeemScriptSize\n  return Input.BASE_SIZE + Varint(scriptLength).toBuffer().length + scriptLength\n}\n\nmodule.exports = MultiSigScriptHashInput\n","module.exports = require('./input')\n\nmodule.exports.PublicKey = require('./publickey')\nmodule.exports.PublicKeyHash = require('./publickeyhash')\nmodule.exports.MultiSig = require('./multisig.js')\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js')\n","'use strict'\n\nvar buffer = require('buffer')\n\nvar Signature = require('../crypto/signature')\nvar Script = require('../script')\nvar Output = require('./output')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar ECDSA = require('../crypto/ecdsa')\nvar $ = require('../util/preconditions')\nvar Interpreter = require('../script/interpreter')\nvar _ = require('../util/_')\n\nvar SIGHASH_SINGLE_BUG = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\nvar BITS_64_ON = 'ffffffffffffffff'\n\n// By default, we sign with sighash_forkid\nvar DEFAULT_SIGN_FLAGS = Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID\n\nvar sighashPreimageForForkId = function (transaction, sighashType, inputNumber, subscript, satoshisBN) {\n  var input = transaction.inputs[inputNumber]\n  $.checkArgument(\n    satoshisBN instanceof BN,\n    'For ForkId=0 signatures, satoshis or complete input must be provided'\n  )\n\n  function GetPrevoutHash (tx) {\n    var writer = new BufferWriter()\n\n    _.each(tx.inputs, function (input) {\n      writer.writeReverse(input.prevTxId)\n      writer.writeUInt32LE(input.outputIndex)\n    })\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  function GetSequenceHash (tx) {\n    var writer = new BufferWriter()\n\n    _.each(tx.inputs, function (input) {\n      writer.writeUInt32LE(input.sequenceNumber)\n    })\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  function GetOutputsHash (tx, n) {\n    var writer = new BufferWriter()\n\n    if (_.isUndefined(n)) {\n      _.each(tx.outputs, function (output) {\n        output.toBufferWriter(writer)\n      })\n    } else {\n      tx.outputs[n].toBufferWriter(writer)\n    }\n\n    var buf = writer.toBuffer()\n    var ret = Hash.sha256sha256(buf)\n    return ret\n  }\n\n  var hashPrevouts = Buffer.alloc(32)\n  var hashSequence = Buffer.alloc(32)\n  var hashOutputs = Buffer.alloc(32)\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY)) {\n    hashPrevouts = GetPrevoutHash(transaction)\n  }\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY) &&\n    (sighashType & 31) !== Signature.SIGHASH_SINGLE &&\n    (sighashType & 31) !== Signature.SIGHASH_NONE) {\n    hashSequence = GetSequenceHash(transaction)\n  }\n\n  if ((sighashType & 31) !== Signature.SIGHASH_SINGLE && (sighashType & 31) !== Signature.SIGHASH_NONE) {\n    hashOutputs = GetOutputsHash(transaction)\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE && inputNumber < transaction.outputs.length) {\n    hashOutputs = GetOutputsHash(transaction, inputNumber)\n  }\n\n  var writer = new BufferWriter()\n  // Version\n  writer.writeUInt32LE(transaction.version)\n\n  // Input prevouts/nSequence (none/all, depending on flags)\n  writer.write(hashPrevouts)\n  writer.write(hashSequence)\n\n  //  outpoint (32-byte hash + 4-byte little endian)\n  writer.writeReverse(input.prevTxId)\n  writer.writeUInt32LE(input.outputIndex)\n\n  // scriptCode of the input (serialized as scripts inside CTxOuts)\n  var subscriptBuffer = subscript.toBuffer()\n  writer.writeVarintNum(subscriptBuffer.length)\n  writer.write(subscriptBuffer)\n\n  // value of the output spent by this input (8-byte little endian)\n  writer.writeUInt64LEBN(satoshisBN)\n\n  // nSequence of the input (4-byte little endian)\n  var sequenceNumber = input.sequenceNumber\n  writer.writeUInt32LE(sequenceNumber)\n\n  // Outputs (none/one/all, depending on flags)\n  writer.write(hashOutputs)\n\n  // Locktime\n  writer.writeUInt32LE(transaction.nLockTime)\n\n  // sighashType\n  writer.writeUInt32LE(sighashType >>> 0)\n  var buf = writer.toBuffer()\n  return buf\n}\n\n/**\n * Returns a buffer with the which is hashed with sighash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n * @param {satoshisBN} input's amount (for  ForkId signatures)\n *\n */\nvar sighashPreimage = function sighashPreimage (transaction, sighashType, inputNumber, subscript, satoshisBN, flags) {\n  var Transaction = require('./transaction')\n  var Input = require('./input')\n\n  if (_.isUndefined(flags)) {\n    flags = DEFAULT_SIGN_FLAGS\n  }\n\n  if (flags & Interpreter.SCRIPT_ENABLE_REPLAY_PROTECTION) {\n    // Legacy chain's value for fork id must be of the form 0xffxxxx.\n    // By xoring with 0xdead, we ensure that the value will be different\n    // from the original one, even if it already starts with 0xff.\n    var forkValue = sighashType >> 8\n    var newForkValue = 0xff0000 | (forkValue ^ 0xdead)\n    sighashType = (newForkValue << 8) | (sighashType & 0xff)\n  }\n\n  if ((sighashType & Signature.SIGHASH_FORKID) && (flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID)) {\n    return sighashPreimageForForkId(transaction, sighashType, inputNumber, subscript, satoshisBN)\n  }\n\n  // Copy transaction\n  var txcopy = Transaction.shallowCopy(transaction)\n\n  // Copy script\n  subscript = new Script(subscript)\n\n  // For no ForkId sighash, separators need to be removed.\n  subscript.removeCodeseparators()\n\n  var i\n\n  for (i = 0; i < txcopy.inputs.length; i++) {\n    // Blank signatures for other inputs\n    txcopy.inputs[i] = new Input(txcopy.inputs[i]).setScript(Script.empty())\n  }\n\n  txcopy.inputs[inputNumber] = new Input(txcopy.inputs[inputNumber]).setScript(subscript)\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE ||\n    (sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // clear all sequenceNumbers\n    for (i = 0; i < txcopy.inputs.length; i++) {\n      if (i !== inputNumber) {\n        txcopy.inputs[i].sequenceNumber = 0\n      }\n    }\n  }\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE) {\n    txcopy.outputs = []\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // The SIGHASH_SINGLE bug.\n    // https://bitcointalk.org/index.php?topic=260595.0\n    if (inputNumber >= txcopy.outputs.length) {\n      return SIGHASH_SINGLE_BUG\n    }\n\n    txcopy.outputs.length = inputNumber + 1\n\n    for (i = 0; i < inputNumber; i++) {\n      txcopy.outputs[i] = new Output({\n        satoshis: BN.fromBuffer(buffer.Buffer.from(BITS_64_ON, 'hex')),\n        script: Script.empty()\n      })\n    }\n  }\n\n  if (sighashType & Signature.SIGHASH_ANYONECANPAY) {\n    txcopy.inputs = [txcopy.inputs[inputNumber]]\n  }\n\n  var buf = new BufferWriter()\n    .write(txcopy.toBuffer())\n    .writeInt32LE(sighashType)\n    .toBuffer()\n  return buf\n}\n\n/**\n * Returns a buffer of length 32 bytes with the hash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n * @param {satoshisBN} input's amount (for  ForkId signatures)\n *\n */\nvar sighash = function sighash (transaction, sighashType, inputNumber, subscript, satoshisBN, flags) {\n  var preimage = sighashPreimage(transaction, sighashType, inputNumber, subscript, satoshisBN, flags)\n  if (preimage.compare(SIGHASH_SINGLE_BUG) === 0) return preimage\n  var ret = Hash.sha256sha256(preimage)\n  ret = new BufferReader(ret).readReverse()\n  return ret\n}\n\n/**\n * Create a signature\n *\n * @name Signing.sign\n * @param {Transaction} transaction\n * @param {PrivateKey} privateKey\n * @param {number} sighash\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {satoshisBN} input's amount\n * @return {Signature}\n */\nfunction sign (transaction, privateKey, sighashType, inputIndex, subscript, satoshisBN, flags) {\n  var hashbuf = sighash(transaction, sighashType, inputIndex, subscript, satoshisBN, flags)\n\n  var sig = ECDSA.sign(hashbuf, privateKey, 'little').set({\n    nhashtype: sighashType\n  })\n  return sig\n}\n\n/**\n * Verify a signature\n *\n * @name Signing.verify\n * @param {Transaction} transaction\n * @param {Signature} signature\n * @param {PublicKey} publicKey\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {satoshisBN} input's amount\n * @param {flags} verification flags\n * @return {boolean}\n */\nfunction verify (transaction, signature, publicKey, inputIndex, subscript, satoshisBN, flags) {\n  $.checkArgument(!_.isUndefined(transaction))\n  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype))\n  var hashbuf = sighash(transaction, signature.nhashtype, inputIndex, subscript, satoshisBN, flags)\n  return ECDSA.verify(hashbuf, signature, publicKey, 'little')\n}\n\n/**\n * @namespace Signing\n */\nmodule.exports = {\n  sighashPreimage: sighashPreimage,\n  sighash: sighash,\n  sign: sign,\n  verify: verify\n}\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar JSUtil = require('../util/js')\n\nvar Script = require('../script')\nvar Address = require('../address')\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BSV = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput (data) {\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data)\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data')\n  var address = data.address ? new Address(data.address) : undefined\n  var txId = data.txid ? data.txid : data.txId\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data)\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex)\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n    'Must provide the scriptPubKey for that output!')\n  var script = new Script(data.scriptPubKey || data.script)\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n    'Must provide an amount for the output')\n  var amount = !_.isUndefined(data.amount) ? Math.round(data.amount * 1e8) : data.satoshis\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number')\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  })\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function () {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>'\n}\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function () {\n  return this.txId + ':' + this.outputIndex\n}\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function (data) {\n  return new UnspentOutput(data)\n}\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject () {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Number.parseFloat((this.satoshis / 1e8).toFixed(8))\n  }\n}\n\nmodule.exports = UnspentOutput\n","'use strict'\n\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\nvar buffer = require('buffer')\n\nvar errors = require('../errors')\nvar JSUtil = require('../util/js')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Varint = require('../encoding/varint')\nvar Hash = require('../crypto/hash')\nvar Signature = require('../crypto/signature')\nvar Sighash = require('./sighash')\n\nvar Address = require('../address')\nvar UnspentOutput = require('./unspentoutput')\nvar Input = require('./input')\nvar PublicKeyHashInput = Input.PublicKeyHash\nvar PublicKeyInput = Input.PublicKey\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash\nvar MultiSigInput = Input.MultiSig\nvar Output = require('./output')\nvar Script = require('../script')\nvar PrivateKey = require('../privatekey')\nvar BN = require('../crypto/bn')\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized)\n  }\n  this.inputs = []\n  this.outputs = []\n  this._inputAmount = undefined\n  this._outputAmount = undefined\n  this.unlockScriptCallbackMap = new Map()\n  this.outputCallbackMap = new Map()\n  this._privateKey = undefined\n  this._sigType = undefined\n  this.isSeal = false\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized)\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized)\n    } else if (Buffer.isBuffer(serialized)) {\n      this.fromBuffer(serialized)\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized)\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction')\n    }\n  } else {\n    this._newTransaction()\n  }\n}\n\nvar CURRENT_VERSION = 1\nvar DEFAULT_NLOCKTIME = 0\nvar MAX_BLOCK_SIZE = 1000000\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 150\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 500\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function (transaction) {\n  var copy = new Transaction(transaction.toBuffer())\n  return copy\n}\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    this._hash = new BufferReader(this._getHash()).readReverse().toString('hex')\n    return this._hash\n  },\n}\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty)\nObject.defineProperty(Transaction.prototype, 'id', hashProperty)\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function () {\n    return this._getInputAmount()\n  },\n}\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty)\nioProperty.get = function () {\n  return this._getOutputAmount()\n}\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty)\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function () {\n  if (this.version >= 10) {\n    return Hash.sha256sha256(this.newTxHeader().toBuffer())\n  }\n  return Hash.sha256sha256(this.toBuffer())\n}\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function (unsafe) {\n  if (unsafe === true || (unsafe && unsafe.disableAll)) {\n    return this.uncheckedSerialize()\n  } else {\n    return this.checkedSerialize(unsafe)\n  }\n}\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function (opts) {\n  var serializationError = this.getSerializationError(opts)\n  if (serializationError) {\n    serializationError.message +=\n      ' - For more information please see: ' + 'https://bsv.io/api/lib/transaction#serialization-checks'\n    throw serializationError\n  }\n  return this.uncheckedSerialize()\n}\n\nTransaction.prototype.invalidSatoshis = function () {\n  var invalid = false\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true\n    }\n  }\n  return invalid\n}\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bsv.Error}\n */\nTransaction.prototype.getSerializationError = function (opts) {\n  opts = opts || {}\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis()\n  }\n\n  var unspent = this._getUnspentValue()\n  var unspentError\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum()\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent)\n  }\n\n  return unspentError || this._hasDustOutputs(opts) || this._isMissingSignatures(opts)\n}\n\nTransaction.prototype._hasFeeError = function (opts, unspent) {\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee,\n    )\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee())\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing('Fee is too large and no change address was provided')\n      }\n      return new errors.Transaction.FeeError.TooLarge('expected less than ' + maximumFee + ' but got ' + unspent)\n    }\n  }\n}\n\nTransaction.prototype._missingChange = function () {\n  return !this._changeScript\n}\n\nTransaction.prototype._hasDustOutputs = function (opts) {\n  if (opts.disableDustOutputs) {\n    return\n  }\n  var index, output\n  for (index in this.outputs) {\n    output = this.outputs[index]\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut() && !output.script.isSafeDataOut()) {\n      return new errors.Transaction.DustOutputs()\n    }\n  }\n}\n\nTransaction.prototype._isMissingSignatures = function (opts) {\n  if (opts.disableIsFullySigned) {\n    return\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures()\n  }\n}\n\nTransaction.prototype.inspect = function () {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>'\n}\n\nTransaction.prototype.toBuffer = function () {\n  var writer = new BufferWriter()\n  return this.toBufferWriter(writer).toBuffer()\n}\n\nTransaction.prototype.toBufferWriter = function (writer) {\n  writer.writeInt32LE(this.version)\n  writer.writeVarintNum(this.inputs.length)\n  _.each(this.inputs, function (input) {\n    input.toBufferWriter(writer)\n  })\n  writer.writeVarintNum(this.outputs.length)\n  _.each(this.outputs, function (output) {\n    output.toBufferWriter(writer)\n  })\n  writer.writeUInt32LE(this.nLockTime)\n  return writer\n}\n\nTransaction.prototype.newTxHeader = function () {\n  var writer = new BufferWriter()\n  writer.writeUInt32LE(this.version)\n  writer.writeUInt32LE(this.nLockTime)\n  writer.writeInt32LE(this.inputs.length)\n  writer.writeInt32LE(this.outputs.length)\n\n  const inputWriter = new BufferWriter()\n  const inputWriter2 = new BufferWriter()\n  for (const input of this.inputs) {\n    inputWriter.writeReverse(input.prevTxId)\n    inputWriter.writeUInt32LE(input.outputIndex)\n    inputWriter.writeUInt32LE(input.sequenceNumber)\n\n    inputWriter2.write(Hash.sha256(input.script.toBuffer()))\n  }\n  writer.write(Hash.sha256(inputWriter.toBuffer()))\n  writer.write(Hash.sha256(inputWriter2.toBuffer()))\n\n  const outputWriter = new BufferWriter()\n  for (const output of this.outputs) {\n    outputWriter.writeUInt64LEBN(output.satoshisBN)\n    outputWriter.write(Hash.sha256(output.script.toBuffer()))\n  }\n  writer.write(Hash.sha256(outputWriter.toBuffer()))\n  return writer\n}\n\nTransaction.prototype.fromBuffer = function (buffer) {\n  var reader = new BufferReader(buffer)\n  return this.fromBufferReader(reader)\n}\n\nTransaction.prototype.fromBufferReader = function (reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received')\n  var i, sizeTxIns, sizeTxOuts\n\n  this.version = reader.readInt32LE()\n  sizeTxIns = reader.readVarintNum()\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader)\n    this.inputs.push(input)\n  }\n  sizeTxOuts = reader.readVarintNum()\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader))\n  }\n  this.nLockTime = reader.readUInt32LE()\n  return this\n}\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = []\n  this.inputs.forEach(function (input) {\n    inputs.push(input.toObject())\n  })\n  var outputs = []\n  this.outputs.forEach(function (output) {\n    outputs.push(output.toObject())\n  })\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime,\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString()\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee\n  }\n  return obj\n}\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction)\n  var self = this\n  var transaction\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject()\n  } else {\n    transaction = arg\n  }\n  _.each(transaction.inputs, function (input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input))\n      return\n    }\n    var script = new Script(input.output.script)\n    var txin\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input)\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(input, input.publicKeys, input.threshold, input.signatures)\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input)\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script)\n    }\n    self.addInput(txin)\n  })\n  _.each(transaction.outputs, function (output) {\n    self.addOutput(new Output(output))\n  })\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript)\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee\n  }\n  this.nLockTime = transaction.nLockTime\n  this.version = transaction.version\n  this._checkConsistency(arg)\n  return this\n}\n\nTransaction.prototype._checkConsistency = function (arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript, 'Change script is expected.')\n    $.checkState(this.outputs[this._changeIndex], 'Change index points to undefined output.')\n    $.checkState(\n      this.outputs[this._changeIndex].script.toString() === this._changeScript.toString(),\n      'Change output has an unexpected script.',\n    )\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash.')\n  }\n}\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function (time) {\n  $.checkArgument(time)\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly()\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER\n    }\n  }\n\n  this.nLockTime = time\n  return this\n}\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function (height) {\n  $.checkArgument(_.isNumber(height))\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh()\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange()\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER) {\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER\n    }\n  }\n\n  this.nLockTime = height\n  return this\n}\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function () {\n  if (!this.nLockTime) {\n    return null\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime\n  }\n  return new Date(1000 * this.nLockTime)\n}\n\nTransaction.prototype.fromString = function (string) {\n  this.fromBuffer(buffer.Buffer.from(string, 'hex'))\n}\n\nTransaction.prototype._newTransaction = function () {\n  this.version = CURRENT_VERSION\n  this.nLockTime = DEFAULT_NLOCKTIME\n}\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bsv:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bsv Address object. The\n * same is true for `script`, which can be a string or a bsv Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function (utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this\n    _.each(utxo, function (utxo) {\n      self.from(utxo, pubkeys, threshold)\n    })\n    return this\n  }\n  var exists = _.some(this.inputs, function (input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex\n  })\n  if (exists) {\n    return this\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold)\n  } else {\n    this._fromNonP2SH(utxo)\n  }\n  return this\n}\n\nTransaction.prototype._fromNonP2SH = function (utxo) {\n  var Clazz\n  utxo = new UnspentOutput(utxo)\n  if (utxo.script.isPublicKeyHashOut()) {\n    Clazz = PublicKeyHashInput\n  } else if (utxo.script.isPublicKeyOut()) {\n    Clazz = PublicKeyInput\n  } else {\n    Clazz = Input\n  }\n  this.addInput(\n    new Clazz({\n      output: new Output({\n        script: utxo.script,\n        satoshis: utxo.satoshis,\n      }),\n      prevTxId: utxo.txId,\n      outputIndex: utxo.outputIndex,\n      script: Script.empty(),\n    }),\n  )\n}\n\nTransaction.prototype._fromMultisigUtxo = function (utxo, pubkeys, threshold) {\n  $.checkArgument(\n    threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys',\n  )\n  var Clazz\n  utxo = new UnspentOutput(utxo)\n  if (utxo.script.isMultisigOut()) {\n    Clazz = MultiSigInput\n  } else if (utxo.script.isScriptHashOut()) {\n    Clazz = MultiSigScriptHashInput\n  } else {\n    throw new Error('@TODO')\n  }\n  this.addInput(\n    new Clazz(\n      {\n        output: new Output({\n          script: utxo.script,\n          satoshis: utxo.satoshis,\n        }),\n        prevTxId: utxo.txId,\n        outputIndex: utxo.outputIndex,\n        script: Script.empty(),\n      },\n      pubkeys,\n      threshold,\n    ),\n  )\n}\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function (input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input')\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis')\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript)\n    $.checkArgumentType(satoshis, 'number', 'satoshis')\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis,\n    })\n  }\n  return this.uncheckedAddInput(input)\n}\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function (input) {\n  $.checkArgumentType(input, Input, 'input')\n  this.inputs.push(input)\n  this._inputAmount = undefined\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function () {\n  return _.every(\n    this.inputs.map(function (input) {\n      return !!input.output\n    }),\n  )\n}\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number')\n  this._fee = amount\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number')\n  this._feePerKb = amount\n  this._updateChangeOutput()\n  return this\n}\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function (address) {\n  $.checkArgument(address, 'address is required')\n  this._changeScript = Script.fromAddress(address)\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function () {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex]\n  }\n  return null\n}\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function (address, amount) {\n  if (_.isArray(address)) {\n    var self = this\n    _.each(address, function (to) {\n      self.to(to.address, to.satoshis)\n    })\n    return this\n  }\n\n  $.checkArgument(JSUtil.isNaturalNumber(amount), 'Amount is expected to be a positive integer')\n  this.addOutput(\n    new Output({\n      script: Script(new Address(address)),\n      satoshis: amount,\n    }),\n  )\n  return this\n}\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function (value) {\n  this.addOutput(\n    new Output({\n      script: Script.buildDataOut(value),\n      satoshis: 0,\n    }),\n  )\n  return this\n}\n\n/**\n * Add an OP_FALSE | OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addSafeData = function (value) {\n  this.addOutput(\n    new Output({\n      script: Script.buildSafeDataOut(value),\n      satoshis: 0,\n    }),\n  )\n  return this\n}\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function (output) {\n  $.checkArgumentType(output, Output, 'output')\n  this._addOutput(output)\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function () {\n  this.outputs = []\n  this._clearSignatures()\n  this._outputAmount = undefined\n  this._changeIndex = undefined\n  this._updateChangeOutput()\n  return this\n}\n\nTransaction.prototype._addOutput = function (output) {\n  this.outputs.push(output)\n  this._outputAmount = undefined\n}\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function () {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this\n    this._outputAmount = 0\n    _.each(this.outputs, function (output) {\n      self._outputAmount += output.satoshis\n    })\n  }\n  return this._outputAmount\n}\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function () {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this\n    this._inputAmount = 0\n    _.each(this.inputs, function (input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput()\n      }\n      self._inputAmount += input.output.satoshis\n    })\n  }\n  return this._inputAmount\n}\n\nTransaction.prototype._updateChangeOutput = function () {\n  if (this.isSeal) {\n    throw new errors.Transaction.TransactionAlreadySealed()\n  }\n\n  if (!this._changeScript) {\n    return\n  }\n  this._clearSignatures()\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex)\n  }\n  this._changeIndex = this.outputs.length\n  this._addOutput(\n    new Output({\n      script: this._changeScript,\n      satoshis: 0,\n    }),\n  )\n  var available = this._getUnspentValue()\n  var fee = this.getFee()\n  var changeAmount = available - fee\n  this._removeOutput(this._changeIndex)\n  this._changeIndex = undefined\n  if (changeAmount >= Transaction.DUST_AMOUNT) {\n    this._changeIndex = this.outputs.length\n    this._addOutput(\n      new Output({\n        script: this._changeScript,\n        satoshis: changeAmount,\n      }),\n    )\n  }\n}\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function () {\n  if (this.isCoinbase()) {\n    return 0\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue()\n  }\n  return this._estimateFee()\n}\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function () {\n  var estimatedSize = this._estimateSize()\n  return Math.ceil((estimatedSize / 1000) * (this._feePerKb || Transaction.FEE_PER_KB))\n}\n\nTransaction.prototype._getUnspentValue = function () {\n  return this._getInputAmount() - this._getOutputAmount()\n}\n\nTransaction.prototype._clearSignatures = function () {\n  _.each(this.inputs, function (input) {\n    input.clearSignatures()\n  })\n}\n\n// 4    version\n// ???  num inputs (VARINT)\n// --- input list ---\n//\n// ???  num outputs (VARINT)\n// --- output list ---\n//      8       value\n//      ???     script size (VARINT)\n//      ???     script\n//\n// 4    locktime\nTransaction.prototype._estimateSize = function () {\n  var result = 4 + 4 // size of version + size of locktime\n  result += Varint(this.inputs.length).toBuffer().length\n  result += Varint(this.outputs.length).toBuffer().length\n  _.each(this.inputs, function (input) {\n    result += input._estimateSize()\n  })\n  _.each(this.outputs, function (output) {\n    result += output.getSize()\n  })\n  return result\n}\n\nTransaction.prototype._removeOutput = function (index) {\n  var output = this.outputs[index]\n  this.outputs = _.without(this.outputs, output)\n  this._outputAmount = undefined\n}\n\nTransaction.prototype.removeOutput = function (index) {\n  this._removeOutput(index)\n  this._updateChangeOutput()\n}\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function () {\n  this.sortInputs(function (inputs) {\n    var copy = Array.prototype.concat.apply([], inputs)\n    copy.sort(function (first, second) {\n      return first.prevTxId.compare(second.prevTxId) || first.outputIndex - second.outputIndex\n    })\n    return copy\n  })\n  this.sortOutputs(function (outputs) {\n    var copy = Array.prototype.concat.apply([], outputs)\n    copy.sort(function (first, second) {\n      return first.satoshis - second.satoshis || first.script.toBuffer().compare(second.script.toBuffer())\n    })\n    return copy\n  })\n  return this\n}\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle.\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function () {\n  return this.sortOutputs(_.shuffle)\n}\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function (sortingFunction) {\n  var outs = sortingFunction(this.outputs)\n  return this._newOutputOrder(outs)\n}\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function (sortingFunction) {\n  this.inputs = sortingFunction(this.inputs)\n  this._clearSignatures()\n  return this\n}\n\nTransaction.prototype._newOutputOrder = function (newOutputs) {\n  var isInvalidSorting =\n    this.outputs.length !== newOutputs.length || _.difference(this.outputs, newOutputs).length !== 0\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting()\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex]\n    this._changeIndex = newOutputs.indexOf(changeOutput)\n  }\n\n  this.outputs = newOutputs\n  return this\n}\n\nTransaction.prototype.removeInput = function (txId, outputIndex) {\n  var index\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId\n  } else {\n    index = _.findIndex(this.inputs, function (input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex\n    })\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length)\n  }\n  var input = this.inputs[index]\n  this.inputs = _.without(this.inputs, input)\n  this._inputAmount = undefined\n  this._updateChangeOutput()\n}\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function (privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo(), 'Not all utxo information is available to sign the transaction.')\n  var self = this\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function (privateKey) {\n      self.sign(privateKey, sigtype)\n    })\n    return this\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function (signature) {\n    self.applySignature(signature)\n  })\n\n  this._privateKey = privateKey\n  this._sigType = sigtype\n  return this\n}\n\nTransaction.prototype.getSignatures = function (privKey, sigtype) {\n  privKey = new PrivateKey(privKey)\n  // By default, signs using ALL|FORKID\n  sigtype = sigtype || Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID\n  var transaction = this\n  var results = []\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer())\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function (signature) {\n      results.push(signature)\n    })\n  })\n  return results\n}\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function (signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature)\n  return this\n}\n\nTransaction.prototype.isFullySigned = function () {\n  _.each(this.inputs, function (input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n          'This usually happens when creating a transaction from a serialized transaction',\n      )\n    }\n  })\n  return _.every(\n    _.map(this.inputs, function (input) {\n      return input.isFullySigned()\n    }),\n  )\n}\n\nTransaction.prototype.isValidSignature = function (signature) {\n  var self = this\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction',\n    )\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature)\n}\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function (sig, pubkey, nin, subscript, satoshisBN, flags) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript, satoshisBN, flags)\n}\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function () {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty'\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty'\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0)\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i]\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid'\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY'\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN)\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY'\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size'\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {}\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i]\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input'\n    }\n    txinmap[inputid] = true\n  }\n\n  var isCoinbase = this.isCoinbase()\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid'\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input'\n      }\n    }\n  }\n  return true\n}\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function () {\n  return this.inputs.length === 1 && this.inputs[0].isNull()\n}\n\n/**\n *\n * @param {number} inputIndex\n * @param {Script|(tx, output) => Script} unlockScriptOrCallback  unlockScript or a callback returns unlockScript\n * @returns unlockScript of the special input\n */\nTransaction.prototype.setInputScript = function (inputIndex, unlockScriptOrCallback) {\n  if (unlockScriptOrCallback instanceof Function) {\n    this.unlockScriptCallbackMap.set(inputIndex, unlockScriptOrCallback)\n    this.inputs[inputIndex].setScript(unlockScriptOrCallback(this, this.inputs[inputIndex].output))\n  } else {\n    this.inputs[inputIndex].setScript(unlockScriptOrCallback)\n  }\n\n  this._updateChangeOutput()\n  return this\n}\n\nTransaction.prototype.setInputSequence = function (inputIndex, sequence) {\n  this.inputs[inputIndex].sequenceNumber = sequence\n  return this\n}\n\n/**\n *\n * @param {number} outputIndex\n * @param {Output|(tx) => Output} outputOrcb  output or a callback returns output\n * @returns output\n */\nTransaction.prototype.setOutput = function (outputIndex, outputOrcb) {\n  if (outputOrcb instanceof Function) {\n    this.outputCallbackMap.set(outputIndex, outputOrcb)\n    this.outputs[outputIndex] = outputOrcb(this)\n  } else {\n    this.outputs[outputIndex] = outputOrcb\n  }\n\n  this._updateChangeOutput()\n  return this\n}\n\n/**\n * Seal a transaction. After the transaction is sealed, except for the unlock script entered,\n * other attributes of the transaction cannot be modified\n */\nTransaction.prototype.seal = function () {\n  const self = this\n\n  this.outputCallbackMap.forEach(function (outputCallback, key) {\n    self.outputs[key] = outputCallback(self)\n  })\n\n  this.unlockScriptCallbackMap.forEach(function (unlockScriptCallback, key) {\n    self.inputs[key].setScript(unlockScriptCallback(self, self.inputs[key].output))\n  })\n\n  if (this._privateKey) {\n    this.sign(this._privateKey, this._sigType)\n  }\n\n  this.isSeal = true\n\n  return this\n}\n\nTransaction.prototype.setLockTime = function (nLockTime) {\n  this.nLockTime = nLockTime\n  return this\n}\n\n/**\n *\n * @returns satoshis of change output\n */\nTransaction.prototype.getChangeAmount = function () {\n  if (_.isUndefined(this._changeIndex)) {\n    return 0\n  }\n\n  return this.outputs[this._changeIndex].satoshis\n}\n\n/**\n *\n * @returns estimate fee by transaction size\n */\nTransaction.prototype.getEstimateFee = function () {\n  return this._estimateFee()\n}\n\n/**\n *\n * @param {number} feePerKb the fee per KB for this transaction\n * @returns true or false\n */\nTransaction.prototype.checkFeeRate = function (feePerKb) {\n  const fee = this._getUnspentValue()\n\n  var estimatedSize = this._estimateSize()\n  var expectedFee = Math.ceil((estimatedSize / 1000) * (feePerKb || this._feePerKb || Transaction.FEE_PER_KB))\n\n  return fee >= expectedFee\n}\n\n/**\n *\n * @returns the serialization of all input outpoints\n */\nTransaction.prototype.prevouts = function () {\n  var writer = new BufferWriter()\n\n  _.each(this.inputs, function (input) {\n    writer.writeReverse(input.prevTxId)\n    writer.writeUInt32LE(input.outputIndex)\n  })\n\n  var buf = writer.toBuffer()\n  return buf.toString('hex')\n}\n\nmodule.exports = Transaction\n","module.exports = require('./transaction')\n\nmodule.exports.Input = require('./input')\nmodule.exports.Output = require('./output')\nmodule.exports.UnspentOutput = require('./unspentoutput')\nmodule.exports.Signature = require('./signature')\nmodule.exports.Sighash = require('./sighash')\n","'use strict'\n\nvar _ = require('../util/_')\n\nvar Script = require('./script')\nvar Opcode = require('../opcode')\nvar BN = require('../crypto/bn')\nvar Hash = require('../crypto/hash')\nvar Signature = require('../crypto/signature')\nvar PublicKey = require('../publickey')\nvar Stack = require('./stack')\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter (obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj)\n  }\n  if (obj) {\n    this.initialize()\n    this.set(obj)\n  } else {\n    this.initialize()\n  }\n}\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n * @param {number} satoshisBN - amount in satoshis of the input to be verified (when FORKID signhash is used)\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function (scriptSig, scriptPubkey, tx, nin, flags, satoshisBN, sighashScript) {\n  var Transaction = require('../transaction')\n\n  if (_.isUndefined(tx)) {\n    tx = new Transaction()\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0\n  }\n\n  // If FORKID is enabled, we also ensure strict encoding.\n  if (flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) {\n    flags |= Interpreter.SCRIPT_VERIFY_STRICTENC\n\n    // If FORKID is enabled, we need the input amount.\n    if (!satoshisBN) {\n      throw new Error('internal error - need satoshisBN to verify FORKID transactions')\n    }\n  }\n\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags,\n    satoshisBN: satoshisBN,\n    sighashScript: sighashScript\n  })\n  var stackCopy\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY'\n    return false\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate('scriptSig')) {\n    return false\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.copy()\n  }\n\n  var stack = this.stack\n  this.initialize()\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags,\n    satoshisBN: satoshisBN,\n    sighashScript: sighashScript\n  })\n\n  // evaluate scriptPubkey\n  if (!this.evaluate('scriptPubkey')) {\n    return false\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT'\n    return false\n  }\n\n  var buf = this.stack.stacktop(-1)\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK'\n    return false\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY'\n      return false\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty')\n    }\n\n    var redeemScriptSerialized = stackCopy.stacktop(-1)\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized)\n    stackCopy.pop()\n\n    this.initialize()\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags,\n      satoshisBN: satoshisBN\n    })\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK'\n      return false\n    }\n\n    if (!Interpreter.castToBool(stackCopy.stacktop(-1))) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK'\n      return false\n    }\n  }\n\n  // The CLEANSTACK check is only performed after potential P2SH evaluation,\n  // as the non-P2SH evaluation of a P2SH script will obviously not result in\n  // a clean stack (the P2SH inputs remain). The same holds for witness\n  // evaluation.\n  if ((flags & Interpreter.SCRIPT_VERIFY_CLEANSTACK) !== 0) {\n    // Disallow CLEANSTACK without P2SH, as otherwise a switch\n    // CLEANSTACK->P2SH+CLEANSTACK would be possible, which is not a\n    // softfork (and P2SH should be one).\n    // if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) === 0) {\n    //   throw new Error('internal error - CLEANSTACK without P2SH')\n    // }\n\n    if (this.stack.length !== 1) {\n      this.errstr = 'SCRIPT_ERR_CLEANSTACK'\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = Interpreter\n\nInterpreter.prototype.initialize = function (obj) {\n  this.stack = new Stack([])\n  this.altstack = new Stack([])\n  this.pc = 0\n  this.pbegincodehash = 0\n  this.nOpCount = 0\n  this.vfExec = []\n  this.errstr = ''\n  this.flags = 0\n  // if OP_RETURN is found in executed branches after genesis is activated,\n  // we still have to check if the rest of the script is valid\n  this.nonTopLevelReturnAfterGenesis = false\n  this.returned = false\n}\n\nInterpreter.prototype.set = function (obj) {\n  this.script = obj.script || this.script\n  this.tx = obj.tx || this.tx\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin\n  this.satoshisBN = obj.satoshisBN || this.satoshisBN\n  this.stack = obj.stack || this.stack\n  this.altstack = obj.altstack || this.altstack\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount\n  this.vfExec = obj.vfExec || this.vfExec\n  this.errstr = obj.errstr || this.errstr\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags\n  this.sighashScript = obj.sighashScript || this.sighashScript\n}\n\nInterpreter.prototype.subscript = function () {\n  if (this.sighashScript) {\n    return this.sighashScript.clone()\n  } else {\n    // Subset of script starting at the most recent codeseparator\n    // CScript scriptCode(pbegincodehash, pend);\n    return Script.fromChunks(this.script.chunks.slice(this.pbegincodehash))\n  }\n}\n\nInterpreter.getTrue = () => Buffer.from([1])\nInterpreter.getFalse = () => Buffer.from([])\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520\nInterpreter.MAXIMUM_ELEMENT_SIZE = 4\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD)\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0)\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1)\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2)\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3)\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4)\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5)\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6)\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7)\n\n// Require that only a single stack element remains after evaluation. This\n// changes the success criterion from \"At least one stack element must\n// remain, and when interpreted as a boolean, it must be true\" to \"Exactly\n// one stack element must remain, and when interpreted as a boolean, it must\n// be true\".\n// (softfork safe, BIP62 rule 6)\n// Note: CLEANSTACK should never be used without P2SH or WITNESS.\nInterpreter.SCRIPT_VERIFY_CLEANSTACK = (1 << 8)\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9)\n\n// support CHECKSEQUENCEVERIFY opcode\n//\n// See BIP112 for details\nInterpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1 << 10)\n\n// Segwit script only: Require the argument of OP_IF/NOTIF to be exactly\n// 0x01 or empty vector\n//\nInterpreter.SCRIPT_VERIFY_MINIMALIF = (1 << 13)\n\n// Signature(s) must be empty vector if an CHECK(MULTI)SIG operation failed\n//\nInterpreter.SCRIPT_VERIFY_NULLFAIL = (1 << 14)\n\n// Public keys in scripts must be compressed\nInterpreter.SCRIPT_VERIFY_COMPRESSED_PUBKEYTYPE = (1 << 15)\n\n// Do we accept signature using SIGHASH_FORKID\n//\nInterpreter.SCRIPT_ENABLE_SIGHASH_FORKID = (1 << 16)\n\n// Do we accept activate replay protection using a different fork id.\n//\nInterpreter.SCRIPT_ENABLE_REPLAY_PROTECTION = (1 << 17)\n\n// Enable new opcodes.\n//\nInterpreter.SCRIPT_ENABLE_MONOLITH_OPCODES = (1 << 18)\n\n// Are the Magnetic upgrade opcodes enabled?\n//\nInterpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES = (1 << 19)\n\n/* Below flags apply in the context of BIP 68 */\n/**\n * If this flag set, CTxIn::nSequence is NOT interpreted as a relative\n * lock-time.\n */\nInterpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31)\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time and this flag is set,\n * the relative lock-time has units of 512 seconds, otherwise it specifies\n * blocks with a granularity of 1.\n */\nInterpreter.SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22)\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time, this mask is applied to\n * extract that lock-time from the sequence field.\n */\nInterpreter.SEQUENCE_LOCKTIME_MASK = 0x0000ffff\n\nInterpreter.MAX_SCRIPT_SIZE = Number.MAX_SAFE_INTEGER\n\nInterpreter.MAX_OPCODE_COUNT = Number.MAX_SAFE_INTEGER\n\nInterpreter.castToBool = function (buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function (buf) {\n  var sig\n\n  // Empty signature. Not strictly DER encoded, but allowed to provide a\n  // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n  if (buf.length === 0) {\n    return true\n  }\n\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT'\n    return false\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf)\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S'\n      return false\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf)\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE'\n      return false\n    }\n\n    if (!(this.flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) &&\n      (sig.nhashtype & Signature.SIGHASH_FORKID)) {\n      this.errstr = 'SCRIPT_ERR_ILLEGAL_FORKID'\n      return false\n    }\n\n    if ((this.flags & Interpreter.SCRIPT_ENABLE_SIGHASH_FORKID) &&\n      !(sig.nhashtype & Signature.SIGHASH_FORKID)) {\n      this.errstr = 'SCRIPT_ERR_MUST_USE_FORKID'\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function (buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE'\n    return false\n  }\n  return true\n}\n\n/**\n  *\n  * Check the buffer is minimally encoded (see https://github.com/bitcoincashorg/spec/blob/master/may-2018-reenabled-opcodes.md#op_bin2num)\n  *\n  *\n  */\n\nInterpreter._isMinimallyEncoded = function (buf, nMaxNumSize) {\n  nMaxNumSize = nMaxNumSize || Interpreter.MAXIMUM_ELEMENT_SIZE\n  if (buf.length > nMaxNumSize) {\n    return false\n  }\n\n  if (buf.length > 0) {\n    // Check that the number is encoded with the minimum possible number\n    // of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set it\n      // would conflict with the sign bit. An example of this case is\n      // +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n  *\n  * minimally encode the buffer content\n  *\n  * @param {number} nMaxNumSize (max allowed size)\n  */\nInterpreter._minimallyEncode = function (buf) {\n  if (buf.length === 0) {\n    return buf\n  }\n\n  // If the last byte is not 0x00 or 0x80, we are minimally encoded.\n  var last = buf[buf.length - 1]\n  if (last & 0x7f) {\n    return buf\n  }\n\n  // If the script is one byte long, then we have a zero, which encodes as an\n  // empty array.\n  if (buf.length === 1) {\n    return Buffer.from('')\n  }\n\n  // If the next byte has it sign bit set, then we are minimaly encoded.\n  if (buf[buf.length - 2] & 0x80) {\n    return buf\n  }\n\n  // We are not minimally encoded, we need to figure out how much to trim.\n  for (var i = buf.length - 1; i > 0; i--) {\n    // We found a non zero byte, time to encode.\n    if (buf[i - 1] !== 0) {\n      if (buf[i - 1] & 0x80) {\n        // We found a byte with it sign bit set so we need one more\n        // byte.\n        buf[i++] = last\n      } else {\n        // the sign bit is clear, we can use it.\n        buf[i - 1] |= last\n      }\n\n      return buf.slice(0, i)\n    }\n  }\n\n  // If we found the whole thing is zeros, then we have a zero.\n  return Buffer.from('')\n}\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function (scriptType) {\n  // TODO: script size should be configurable. no magic numbers\n  if (this.script.toBuffer().length > Interpreter.MAX_SCRIPT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE'\n    return false\n  }\n\n  try {\n    while (!this.returned && this.pc < this.script.chunks.length) {\n      // fExec: if the opcode will be executed, i.e., not in a false branch\n      let thisStep = { pc: this.pc, fExec: (this.vfExec.indexOf(false) === -1), opcode: Opcode.fromNumber(this.script.chunks[this.pc].opcodenum) }\n\n      var fSuccess = this.step(scriptType)\n\n      this._callbackStep(thisStep)\n\n      if (!fSuccess) {\n        return false\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE'\n      return false\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e\n    return false\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n    return false\n  }\n\n  return true\n}\n\nInterpreter.prototype._callbackStep = function (thisStep) {\n  if (typeof this.stepListener === 'function') {\n    try {\n      this.stepListener(thisStep)\n    } catch (err) {\n      console.log(`Error in Step callback:${err}`)\n    }\n  }\n}\n\n/**\n * call to update stackvar\n * @param {*} stack\n */\nInterpreter.prototype._callbackStack = function (stack, pc, scriptType) {\n  if (typeof this.stackListener === 'function') {\n    try {\n      this.stackListener(stack, pc, scriptType)\n    } catch (err) {\n      var chunk = this.script.chunks[pc]\n      console.error(`Error: ${err} in _updateStack pc: ${pc}, opcode ${Opcode.fromNumber(chunk.opcodenum).toSafeString()}`)\n    }\n  }\n}\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function (nLockTime) {\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime < Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (this.tx.inputs[this.nin].isFinal()) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Checks a sequence parameter with the transaction's sequence.\n * @param {BN} nSequence the sequence read from the script\n * @return {boolean} true if the transaction's sequence is less than or equal to\n *                   the transaction's sequence\n */\nInterpreter.prototype.checkSequence = function (nSequence) {\n  // Relative lock times are supported by comparing the passed in operand to\n  // the sequence number of the input.\n  var txToSequence = this.tx.inputs[this.nin].sequenceNumber\n\n  // Fail if the transaction's version number is not set high enough to\n  // trigger BIP 68 rules.\n  if (this.tx.version < 2) {\n    return false\n  }\n\n  // Sequence numbers with their most significant bit set are not consensus\n  // constrained. Testing that the transaction's sequence number do not have\n  // this bit set prevents using this property to get around a\n  // CHECKSEQUENCEVERIFY check.\n  if (txToSequence & Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n    return false\n  }\n\n  // Mask off any bits that do not have consensus-enforced meaning before\n  // doing the integer comparisons\n  var nLockTimeMask =\n    Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG | Interpreter.SEQUENCE_LOCKTIME_MASK\n  var txToSequenceMasked = new BN(txToSequence & nLockTimeMask)\n  var nSequenceMasked = nSequence.and(nLockTimeMask)\n\n  // There are two kinds of nSequence: lock-by-blockheight and\n  // lock-by-blocktime, distinguished by whether nSequenceMasked <\n  // CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n  //\n  // We want to compare apples to apples, so fail the script unless the type\n  // of nSequenceMasked being tested is the same as the nSequenceMasked in the\n  // transaction.\n  var SEQUENCE_LOCKTIME_TYPE_FLAG_BN = new BN(Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG)\n\n  if (!((txToSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n    nSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)) ||\n    (txToSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n      nSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)))) {\n    return false\n  }\n\n  // Now that we know we're comparing apples-to-apples, the comparison is a\n  // simple numeric one.\n  if (nSequenceMasked.gt(txToSequenceMasked)) {\n    return false\n  }\n  return true\n}\n\nfunction padBufferToSize (buf, len) {\n  let b = buf\n  while (b.length < len) {\n    b = Buffer.concat([Buffer.from([0x00]), b])\n  }\n  return b\n}\n\n/**\n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function (scriptType) {\n  var self = this\n\n  function stacktop (i) {\n    return self.stack.stacktop(i)\n  }\n\n  function vartop (i) {\n    return self.stack.vartop(i)\n  }\n\n  function isOpcodeDisabled (opcode) {\n    switch (opcode) {\n      case Opcode.OP_2MUL:\n      case Opcode.OP_2DIV:\n\n        // Disabled opcodes.\n        return true\n\n      case Opcode.OP_INVERT:\n      case Opcode.OP_MUL:\n      case Opcode.OP_LSHIFT:\n      case Opcode.OP_RSHIFT:\n        // Opcodes that have been reenabled.\n        if ((self.flags & Interpreter.SCRIPT_ENABLE_MAGNETIC_OPCODES) === 0) {\n          return true\n        }\n        break\n      case Opcode.OP_DIV:\n      case Opcode.OP_MOD:\n      case Opcode.OP_SPLIT:\n      case Opcode.OP_CAT:\n      case Opcode.OP_AND:\n      case Opcode.OP_OR:\n      case Opcode.OP_XOR:\n      case Opcode.OP_BIN2NUM:\n      case Opcode.OP_NUM2BIN:\n        // Opcodes that have been reenabled.\n        if ((self.flags & Interpreter.SCRIPT_ENABLE_MONOLITH_OPCODES) === 0) {\n          return true\n        }\n        break\n      default:\n        break\n    }\n\n    return false\n  }\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0\n\n  // bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript\n  var sig, pubkey\n  var fValue, fSuccess\n  var var1, var2, var3\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc]\n  this.pc++\n  var opcodenum = chunk.opcodenum\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE'\n    return false\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n    return false\n  }\n\n  // Do not execute instructions if Genesis OP_RETURN was found in executed branches.\n  var fExec = (this.vfExec.indexOf(false) === -1) && (!this.nonTopLevelReturnAfterGenesis || opcodenum === Opcode.OP_RETURN)\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > Interpreter.MAX_OPCODE_COUNT) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT'\n    return false\n  }\n\n  if (isOpcodeDisabled(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE'\n    return false\n  }\n\n  if (fExec && opcodenum >= 0 && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA'\n      return false\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.getFalse())\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error(`Length of push value not equal to length of data (${chunk.len},${chunk.buf.length})`)\n    } else {\n      this.stack.push(chunk.buf)\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        // ( -- value)\n        // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n        n = opcodenum - (Opcode.OP_1 - 1)\n        buf = new BN(n).toScriptNumBuffer()\n        this.stack.push(buf)\n        // The result of these opcodes should always be the minimal way to push the data\n        // they push, so no need for a CheckMinimalPush here.\n        break\n\n      //\n      // Control\n      //\n      case Opcode.OP_NOP:\n        break\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n            return false\n          }\n          break\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack.stacktop(-1), fRequireMinimal, 5)\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n          return false\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n          return false\n        }\n        break\n\n      case Opcode.OP_NOP3:\n      case Opcode.OP_CHECKSEQUENCEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n          // not enabled; treat as a NOP3\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n            return false\n          }\n          break\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // nSequence, like nLockTime, is a 32-bit unsigned\n        // integer field. See the comment in CHECKLOCKTIMEVERIFY\n        // regarding 5-byte numeric operands.\n\n        var nSequence = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal, 5)\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKSEQUENCEVERIFY.\n        if (nSequence.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME'\n          return false\n        }\n\n        // To provide for future soft-fork extensibility, if the\n        // operand has the disabled lock-time flag set,\n        // CHECKSEQUENCEVERIFY behaves as a NOP.\n        if ((nSequence &\n          Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) !== 0) {\n          break\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkSequence(nSequence)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME'\n          return false\n        }\n        break\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n          this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS'\n          return false\n        }\n        break\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        // <expression> if [statements] [else [statements]] endif\n        // bool fValue = false;\n        fValue = false\n        if (fExec) {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n            return false\n          }\n          buf = stacktop(-1)\n\n          if (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALIF) {\n            if (buf.length > 1) {\n              this.errstr = 'SCRIPT_ERR_MINIMALIF'\n              return false\n            }\n            if (buf.length === 1 && buf[0] !== 1) {\n              this.errstr = 'SCRIPT_ERR_MINIMALIF'\n              return false\n            }\n          }\n          fValue = Interpreter.castToBool(buf)\n          if (opcodenum === Opcode.OP_NOTIF) {\n            fValue = !fValue\n          }\n          this.stack.pop()\n        }\n        this.vfExec.push(fValue)\n        break\n\n      case Opcode.OP_ELSE:\n        if (this.vfExec.length === 0) {\n          this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n          return false\n        }\n        this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1]\n        break\n\n      case Opcode.OP_ENDIF:\n        if (this.vfExec.length === 0) {\n          this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL'\n          return false\n        }\n        this.vfExec.pop()\n        break\n\n      case Opcode.OP_VERIFY:\n        // (true -- ) or\n        // (false -- false) and return\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        fValue = Interpreter.castToBool(buf)\n        if (fValue) {\n          this.stack.pop()\n        } else {\n          this.errstr = 'SCRIPT_ERR_VERIFY'\n          return false\n        }\n        break\n\n      case Opcode.OP_RETURN:\n\n        if ((this.flags & Interpreter.SCRIPT_VERIFY_P2SH) === 0) { // utxo_after_genesis\n          if (this.vfExec.length === 0) {\n            // Terminate the execution as successful. The remaining of the script does not affect the validity (even in\n            // presence of unbalanced IFs, invalid opcodes etc)\n            this.returned = true\n            return true\n          }\n          // op_return encountered inside if statement after genesis --> check for invalid grammar\n          this.nonTopLevelReturnAfterGenesis = true\n        } else {\n          return false\n        }\n\n        break\n\n      //\n      // Stack ops\n      //\n      case Opcode.OP_TOALTSTACK:\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-1)\n        this.altstack.push(this.stack.pop(), var1)\n        break\n\n      case Opcode.OP_FROMALTSTACK:\n        if (this.altstack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION'\n          return false\n        }\n        const varAlt = this.altstack.vartop(-1)\n        this.stack.push(this.altstack.pop(), varAlt)\n        break\n\n      case Opcode.OP_2DROP:\n        // (x1 x2 -- )\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.pop()\n        this.stack.pop()\n        break\n\n      case Opcode.OP_2DUP:\n        // (x1 x2 -- x1 x2 x1 x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        break\n\n      case Opcode.OP_3DUP:\n        // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-3)\n        buf2 = stacktop(-2)\n        var buf3 = stacktop(-1)\n        var1 = vartop(-3)\n        var2 = vartop(-2)\n        var3 = vartop(-1)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        this.stack.push(Buffer.from(buf3), `$${var3}`)\n        break\n\n      case Opcode.OP_2OVER:\n        // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n        if (this.stack.length < 4) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-4)\n        buf2 = stacktop(-3)\n        var1 = vartop(-4)\n        var2 = vartop(-3)\n        this.stack.push(Buffer.from(buf1), `$${var1}`)\n        this.stack.push(Buffer.from(buf2), `$${var2}`)\n        break\n\n      case Opcode.OP_2ROT:\n        // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n        if (this.stack.length < 6) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var1 = vartop(-6)\n        var2 = vartop(-5)\n\n        spliced = this.stack.splice(this.stack.length - 6, 2)\n        this.stack.push(spliced[0], var1)\n        this.stack.push(spliced[1], var2)\n        break\n\n      case Opcode.OP_2SWAP:\n        // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n        if (this.stack.length < 4) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-4)\n        var2 = vartop(-3)\n        spliced = this.stack.splice(this.stack.length - 4, 2)\n        this.stack.push(spliced[0], var1)\n        this.stack.push(spliced[1], var2)\n        break\n\n      case Opcode.OP_IFDUP:\n        // (x - 0 | x x)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        fValue = Interpreter.castToBool(buf)\n        if (fValue) {\n          var1 = vartop(-1)\n          this.stack.push(Buffer.from(buf), `$${var1}`)\n        }\n        break\n\n      case Opcode.OP_DEPTH:\n        // -- stacksize\n        buf = new BN(this.stack.length).toScriptNumBuffer()\n        this.stack.push(buf, '$depth')\n        break\n\n      case Opcode.OP_DROP:\n        // (x -- )\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.pop()\n        break\n\n      case Opcode.OP_DUP:\n        // (x -- x x)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var1 = vartop(-1)\n        this.stack.push(Buffer.from(stacktop(-1)), `$${var1}`)\n        break\n\n      case Opcode.OP_NIP:\n        // (x1 x2 -- x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        this.stack.splice(this.stack.length - 2, 1)\n        break\n\n      case Opcode.OP_OVER:\n        // (x1 x2 -- x1 x2 x1)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        var2 = vartop(-2)\n        this.stack.push(Buffer.from(stacktop(-2)), `$${var2}`)\n        break\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n        // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        bn = BN.fromScriptNumBuffer(buf, fRequireMinimal, 4)\n        n = bn.toNumber()\n        this.stack.pop()\n        if (n < 0 || n >= this.stack.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-n - 1)\n        var1 = vartop(-n - 1)\n        if (opcodenum === Opcode.OP_ROLL) {\n          this.stack.splice(this.stack.length - n - 1, 1)\n          this.stack.push(Buffer.from(buf), var1)\n        } else {\n          this.stack.push(Buffer.from(buf), `$${var1}`)\n        }\n\n        break\n\n      case Opcode.OP_ROT:\n        // (x1 x2 x3 -- x2 x3 x1)\n        //  x2 x1 x3  after first swap\n        //  x2 x3 x1  after second swap\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        x1 = stacktop(-3)\n        x2 = stacktop(-2)\n        var x3 = stacktop(-1)\n        var1 = vartop(-3)\n        var2 = vartop(-2)\n        var3 = vartop(-1)\n        this.stack.write(-3, x2)\n        this.stack.write(-2, x3)\n        this.stack.write(-1, x1)\n        this.stack.updateTopVars([var1, var3, var2])\n        break\n\n      case Opcode.OP_SWAP:\n        // (x1 x2 -- x2 x1)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        x1 = stacktop(-2)\n        x2 = stacktop(-1)\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n        this.stack.write(-2, x2)\n        this.stack.write(-1, x1)\n        this.stack.updateTopVars([var1, var2])\n        break\n\n      case Opcode.OP_TUCK:\n        // (x1 x2 -- x2 x1 x2)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var1 = vartop(-2)\n        var2 = vartop(-1)\n\n        this.stack.splice(this.stack.length - 2, 0, Buffer.from(stacktop(-1)))\n        this.stack.updateTopVars([var2, var1, `$${var2}`])\n        break\n\n      case Opcode.OP_SIZE:\n        // (in -- in size)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn = new BN(stacktop(-1).length)\n        this.stack.push(bn.toScriptNumBuffer(), `$size`)\n        break\n\n      //\n      // Bitwise logic\n      //\n      case Opcode.OP_AND:\n      case Opcode.OP_OR:\n      case Opcode.OP_XOR:\n        // (x1 x2 - out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n\n        // Inputs must be the same size\n        if (buf1.length !== buf2.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_OPERAND_SIZE'\n          return false\n        }\n\n        // To avoid allocating, we modify vch1 in place.\n        switch (opcodenum) {\n          case Opcode.OP_AND:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] &= buf2[i]\n            }\n            break\n          case Opcode.OP_OR:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] |= buf2[i]\n            }\n            break\n          case Opcode.OP_XOR:\n            for (let i = 0; i < buf1.length; i++) {\n              buf1[i] ^= buf2[i]\n            }\n            break\n          default:\n            break\n        }\n\n        // And pop vch2.\n        this.stack.pop()\n        break\n\n      case Opcode.OP_INVERT:\n        // (x -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n        }\n        buf = stacktop(-1)\n        for (let i = 0; i < buf.length; i++) {\n          buf[i] = ~buf[i]\n        }\n        break\n\n      case Opcode.OP_LSHIFT:\n      case Opcode.OP_RSHIFT:\n        // (x n -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        if (buf1.length === 0) {\n          this.stack.pop()\n        } else {\n          bn1 = new BN(buf1)\n          bn2 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal, 4)\n          n = bn2.toNumber()\n          if (n < 0) {\n            this.errstr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n            return false\n          }\n          this.stack.pop()\n          this.stack.pop()\n          let shifted\n          if (opcodenum === Opcode.OP_LSHIFT) {\n            shifted = bn1.ushln(n)\n          }\n          if (opcodenum === Opcode.OP_RSHIFT) {\n            shifted = bn1.ushrn(n)\n          }\n          // bitcoin client implementation of l/rshift is unconventional, therefore this implementation is a bit unconventional\n          // bn library has shift functions however it expands the carried bits into a new byte\n          // in contrast to the bitcoin client implementation which drops off the carried bits\n          // in other words, if operand was 1 byte then we put 1 byte back on the stack instead of expanding to more shifted bytes\n          let bufShifted = padBufferToSize(Buffer.from(shifted.toArray().slice(buf1.length * -1)), buf1.length)\n          this.stack.push(bufShifted)\n        }\n        break\n\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        // case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        // (x1 x2 - bool)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        var fEqual = buf1.toString('hex') === buf2.toString('hex')\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(fEqual ? Interpreter.getTrue() : Interpreter.getFalse())\n        if (opcodenum === Opcode.OP_EQUALVERIFY) {\n          if (fEqual) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_EQUALVERIFY'\n            return false\n          }\n        }\n        break\n\n      //\n      // Numeric\n      //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        // (in -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        bn = BN.fromScriptNumBuffer(buf, fRequireMinimal)\n        switch (opcodenum) {\n          case Opcode.OP_1ADD:\n            bn = bn.add(BN.One)\n            break\n          case Opcode.OP_1SUB:\n            bn = bn.sub(BN.One)\n            break\n          case Opcode.OP_NEGATE:\n            bn = bn.neg()\n            break\n          case Opcode.OP_ABS:\n            if (bn.cmp(BN.Zero) < 0) {\n              bn = bn.neg()\n            }\n            break\n          case Opcode.OP_NOT:\n            bn = new BN((bn.cmp(BN.Zero) === 0) + 0)\n            break\n          case Opcode.OP_0NOTEQUAL:\n            bn = new BN((bn.cmp(BN.Zero) !== 0) + 0)\n            break\n          // default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n        }\n        this.stack.pop()\n        this.stack.push(bn.toScriptNumBuffer())\n        break\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_MUL:\n      case Opcode.OP_MOD:\n      case Opcode.OP_DIV:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        // (x1 x2 -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn1 = BN.fromScriptNumBuffer(stacktop(-2), fRequireMinimal)\n        bn2 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal)\n        bn = new BN(0)\n\n        switch (opcodenum) {\n          case Opcode.OP_ADD:\n            bn = bn1.add(bn2)\n            break\n\n          case Opcode.OP_SUB:\n            bn = bn1.sub(bn2)\n            break\n\n          case Opcode.OP_MUL:\n            bn = bn1.mul(bn2)\n            break\n\n          case Opcode.OP_DIV:\n            // denominator must not be 0\n            if (bn2 === 0) {\n              this.errstr = 'SCRIPT_ERR_DIV_BY_ZERO'\n              return false\n            }\n            bn = bn1.div(bn2)\n            break\n\n          case Opcode.OP_MOD:\n            // divisor must not be 0\n            if (bn2 === 0) {\n              this.errstr = 'SCRIPT_ERR_DIV_BY_ZERO'\n              return false\n            }\n            bn = bn1.mod(bn2)\n            break\n\n          case Opcode.OP_BOOLAND:\n            bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0)\n            break\n          // case Opcode.OP_BOOLOR:        bn = (bn1 !== bnZero || bn2 !== bnZero); break;\n          case Opcode.OP_BOOLOR:\n            bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0)\n            break\n          // case Opcode.OP_NUMEQUAL:      bn = (bn1 === bn2); break;\n          case Opcode.OP_NUMEQUAL:\n            bn = new BN((bn1.cmp(bn2) === 0) + 0)\n            break\n          // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 === bn2); break;\n          case Opcode.OP_NUMEQUALVERIFY:\n            bn = new BN((bn1.cmp(bn2) === 0) + 0)\n            break\n          // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 !== bn2); break;\n          case Opcode.OP_NUMNOTEQUAL:\n            bn = new BN((bn1.cmp(bn2) !== 0) + 0)\n            break\n          // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n          case Opcode.OP_LESSTHAN:\n            bn = new BN((bn1.cmp(bn2) < 0) + 0)\n            break\n          // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n          case Opcode.OP_GREATERTHAN:\n            bn = new BN((bn1.cmp(bn2) > 0) + 0)\n            break\n          // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n          case Opcode.OP_LESSTHANOREQUAL:\n            bn = new BN((bn1.cmp(bn2) <= 0) + 0)\n            break\n          // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n          case Opcode.OP_GREATERTHANOREQUAL:\n            bn = new BN((bn1.cmp(bn2) >= 0) + 0)\n            break\n          case Opcode.OP_MIN:\n            bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2)\n            break\n          case Opcode.OP_MAX:\n            bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2)\n            break\n          // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n        }\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(bn.toScriptNumBuffer())\n\n        if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n          // if (CastToBool(stacktop(-1)))\n          if (Interpreter.castToBool(stacktop(-1))) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY'\n            return false\n          }\n        }\n        break\n\n      case Opcode.OP_WITHIN:\n        // (x min max -- out)\n        if (this.stack.length < 3) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        bn1 = BN.fromScriptNumBuffer(stacktop(-3), fRequireMinimal)\n        bn2 = BN.fromScriptNumBuffer(stacktop(-2), fRequireMinimal)\n        var bn3 = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal)\n        // bool fValue = (bn2 <= bn1 && bn1 < bn3);\n        fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0)\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.pop()\n        this.stack.push(fValue ? Interpreter.getTrue() : Interpreter.getFalse())\n        break\n\n      //\n      // Crypto\n      //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        // (in -- hash)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf = stacktop(-1)\n        // valtype vchHash((opcode === Opcode.OP_RIPEMD160 ||\n        //                 opcode === Opcode.OP_SHA1 || opcode === Opcode.OP_HASH160) ? 20 : 32);\n        var bufHash\n        if (opcodenum === Opcode.OP_RIPEMD160) {\n          bufHash = Hash.ripemd160(buf)\n        } else if (opcodenum === Opcode.OP_SHA1) {\n          bufHash = Hash.sha1(buf)\n        } else if (opcodenum === Opcode.OP_SHA256) {\n          bufHash = Hash.sha256(buf)\n        } else if (opcodenum === Opcode.OP_HASH160) {\n          bufHash = Hash.sha256ripemd160(buf)\n        } else if (opcodenum === Opcode.OP_HASH256) {\n          bufHash = Hash.sha256sha256(buf)\n        }\n        this.stack.pop()\n        this.stack.push(bufHash)\n        break\n\n      case Opcode.OP_CODESEPARATOR:\n        // Hash starts after the code separator\n        this.pbegincodehash = this.pc\n        break\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        // (sig pubkey -- bool)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        bufSig = stacktop(-2)\n        bufPubkey = stacktop(-1)\n\n        if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n          return false\n        }\n\n        // Subset of script starting at the most recent codeseparator\n        // CScript scriptCode(pbegincodehash, pend);\n        subscript = this.subscript()\n\n        // Drop the signature, since there's no way for a signature to sign itself\n        var tmpScript = new Script().add(bufSig)\n        subscript.findAndDelete(tmpScript)\n\n        try {\n          sig = Signature.fromTxFormat(bufSig)\n          pubkey = PublicKey.fromBuffer(bufPubkey, false)\n\n          fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.satoshisBN, this.flags)\n        } catch (e) {\n          // invalid sig or pubkey\n          fSuccess = false\n        }\n\n        if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n          bufSig.length) {\n          this.errstr = 'SCRIPT_ERR_NULLFAIL'\n          return false\n        }\n\n        this.stack.pop()\n        this.stack.pop()\n\n        // stack.push_back(fSuccess ? vchTrue : vchFalse);\n        this.stack.push(fSuccess ? Interpreter.getTrue() : Interpreter.getFalse())\n        if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n          if (fSuccess) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY'\n            return false\n          }\n        }\n        break\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n        var i = 1\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var nKeysCount = BN.fromScriptNumBuffer(stacktop(-i), fRequireMinimal).toNumber()\n        // TODO: Keys and opcount are parameterized in client. No magic numbers!\n        if (nKeysCount < 0 || nKeysCount > 20) {\n          this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT'\n          return false\n        }\n        this.nOpCount += nKeysCount\n        if (this.nOpCount > Interpreter.MAX_OPCODE_COUNT) {\n          this.errstr = 'SCRIPT_ERR_OP_COUNT'\n          return false\n        }\n        // int ikey = ++i;\n        var ikey = ++i\n        i += nKeysCount\n\n        // ikey2 is the position of last non-signature item in\n        // the stack. Top stack item = 1. With\n        // SCRIPT_VERIFY_NULLFAIL, this is used for cleanup if\n        // operation fails.\n        var ikey2 = nKeysCount + 2\n\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var nSigsCount = BN.fromScriptNumBuffer(stacktop(-i), fRequireMinimal).toNumber()\n        if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n          this.errstr = 'SCRIPT_ERR_SIG_COUNT'\n          return false\n        }\n        // int isig = ++i;\n        var isig = ++i\n        i += nSigsCount\n        if (this.stack.length < i) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        // Subset of script starting at the most recent codeseparator\n        subscript = this.subscript()\n\n        // Drop the signatures, since there's no way for a signature to sign itself\n        for (var k = 0; k < nSigsCount; k++) {\n          bufSig = stacktop(-isig - k)\n          subscript.findAndDelete(new Script().add(bufSig))\n        }\n\n        fSuccess = true\n        while (fSuccess && nSigsCount > 0) {\n          // valtype& vchSig  = stacktop(-isig);\n          bufSig = stacktop(-isig)\n          // valtype& vchPubKey = stacktop(-ikey);\n          bufPubkey = stacktop(-ikey)\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false\n          }\n\n          var fOk\n          try {\n            sig = Signature.fromTxFormat(bufSig)\n            pubkey = PublicKey.fromBuffer(bufPubkey, false)\n            fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.satoshisBN, this.flags)\n          } catch (e) {\n            // invalid sig or pubkey\n            fOk = false\n          }\n\n          if (fOk) {\n            isig++\n            nSigsCount--\n          }\n          ikey++\n          nKeysCount--\n\n          // If there are more signatures left than keys left,\n          // then too many signatures have failed\n          if (nSigsCount > nKeysCount) {\n            fSuccess = false\n          }\n        }\n\n        // Clean up stack of actual arguments\n        while (i-- > 1) {\n          if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n            !ikey2 && stacktop(-1).length) {\n            this.errstr = 'SCRIPT_ERR_NULLFAIL'\n            return false\n          }\n\n          if (ikey2 > 0) {\n            ikey2--\n          }\n\n          this.stack.pop()\n        }\n\n        // A bug causes CHECKMULTISIG to consume one extra argument\n        // whose contents were not checked in any way.\n        //\n        // Unfortunately this is a potential source of mutability,\n        // so optionally verify it is exactly equal to zero prior\n        // to removing it from the stack.\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && stacktop(-1).length) {\n          this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY'\n          return false\n        }\n        this.stack.pop()\n\n        this.stack.push(fSuccess ? Interpreter.getTrue() : Interpreter.getFalse())\n\n        if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n          if (fSuccess) {\n            this.stack.pop()\n          } else {\n            this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY'\n            return false\n          }\n        }\n        break\n\n      //\n      // Byte string operations\n      //\n      case Opcode.OP_CAT:\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        buf1 = stacktop(-2)\n        buf2 = stacktop(-1)\n        if (buf1.length + buf2.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n          this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n          return false\n        }\n        this.stack.write(-2, Buffer.concat([buf1, buf2]))\n        this.stack.pop()\n        break\n\n      case Opcode.OP_SPLIT:\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n        buf1 = stacktop(-2)\n\n        // Make sure the split point is apropriate.\n        var position = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal).toNumber()\n        if (position < 0 || position > buf1.length) {\n          this.errstr = 'SCRIPT_ERR_INVALID_SPLIT_RANGE'\n          return false\n        }\n\n        // Prepare the results in their own buffer as `data`\n        // will be invalidated.\n        // Copy buffer data, to slice it before\n        var n1 = Buffer.from(buf1)\n\n        // Replace existing stack values by the new values.\n        this.stack.write(-2, n1.slice(0, position))\n        this.stack.write(-1, n1.slice(position))\n        break\n\n      //\n      // Conversion operations\n      //\n      case Opcode.OP_NUM2BIN:\n        // (in -- out)\n        if (this.stack.length < 2) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        var size = BN.fromScriptNumBuffer(stacktop(-1), fRequireMinimal).toNumber()\n        if (size > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n          this.errstr = 'SCRIPT_ERR_PUSH_SIZE'\n          return false\n        }\n\n        this.stack.pop()\n        var rawnum = stacktop(-1)\n\n        // Try to see if we can fit that number in the number of\n        // byte requested.\n        rawnum = Interpreter._minimallyEncode(rawnum)\n\n        if (rawnum.length > size) {\n          // We definitively cannot.\n          this.errstr = 'SCRIPT_ERR_IMPOSSIBLE_ENCODING'\n          return false\n        }\n\n        // We already have an element of the right size, we\n        // don't need to do anything.\n        if (rawnum.length === size) {\n          this.stack.write(-1, rawnum)\n          break\n        }\n\n        var signbit = 0x00\n        if (rawnum.length > 0) {\n          signbit = rawnum[rawnum.length - 1] & 0x80\n          rawnum[rawnum.length - 1] &= 0x7f\n        }\n\n        var num = Buffer.alloc(size)\n        rawnum.copy(num, 0)\n\n        var l = rawnum.length - 1\n        while (l++ < size - 2) {\n          num[l] = 0x00\n        }\n\n        num[l] = signbit\n\n        this.stack.write(-1, num)\n        break\n\n      case Opcode.OP_BIN2NUM:\n        // (in -- out)\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION'\n          return false\n        }\n\n        buf1 = stacktop(-1)\n        buf2 = Interpreter._minimallyEncode(buf1)\n\n        this.stack.write(-1, buf2)\n\n        // The resulting number must be a valid number.\n        if (!Interpreter._isMinimallyEncoded(buf2)) {\n          this.errstr = 'SCRIPT_ERR_INVALID_NUMBER_RANGE'\n          return false\n        }\n        break\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE'\n        return false\n    }\n  }\n\n  // only when next opcode is evaluate opcode, we update stack\n  if (this.vfExec.indexOf(false) === -1) {\n    this._callbackStack(this.stack, this.pc, scriptType)\n  }\n\n  return true\n}\n","module.exports = require('./script')\n\nmodule.exports.Interpreter = require('./interpreter')\n\nmodule.exports.Stack = require('./stack')\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\nvar errors = require('./errors')\nvar Base58Check = require('./encoding/base58check')\nvar Networks = require('./networks')\nvar Hash = require('./crypto/hash')\nvar JSUtil = require('./util/js')\nvar PublicKey = require('./publickey')\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address (data, network, type) {\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type)\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type)\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html')\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\", \"testnet\", or \"regtest\".')\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".')\n  }\n\n  var info = this._classifyArguments(data, network, type)\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork\n  info.type = info.type || type || Address.PayToPublicKeyHash\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  })\n\n  return this\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function (data, network, type) {\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data)\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type)\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data)\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network)\n  } else if (typeof (data) === 'string') {\n    return Address._transformString(data, network, type)\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data)\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.')\n  }\n}\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash'\n/** @static */\nAddress.PayToScriptHash = 'scripthash'\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function (hash) {\n  var info = {}\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.')\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.')\n  }\n  info.hashBuffer = hash\n  return info\n}\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function (data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property')\n  $.checkArgument(data.type, 'Must provide a `type` property')\n  return {\n    hashBuffer: data.hash ? Buffer.from(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  }\n}\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function (buffer) {\n  var version = {}\n\n  var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash')\n  var scripthashNetwork = Networks.get(buffer[0], 'scripthash')\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork\n    version.type = Address.PayToPublicKeyHash\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork\n    version.type = Address.PayToScriptHash\n  }\n\n  return version\n}\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function (buffer, network, type) {\n  var info = {}\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.')\n  }\n  if (buffer.length !== 1 + 20) {\n    throw new TypeError('Address buffers must be exactly 21 bytes.')\n  }\n\n  var networkObj = Networks.get(network)\n  var bufferVersion = Address._classifyFromVersion(buffer)\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network')\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj !== bufferVersion.network)) {\n    // console.log(bufferVersion)\n    throw new TypeError('Address has mismatched network type.')\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.')\n  }\n\n  info.hashBuffer = buffer.slice(1)\n  info.network = bufferVersion.network\n  info.type = bufferVersion.type\n  return info\n}\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function (pubkey) {\n  var info = {}\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.')\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer())\n  info.type = Address.PayToPublicKeyHash\n  return info\n}\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function (script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance')\n  var info = script.getAddressInfo(network)\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script)\n  }\n  return info\n}\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function (publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network)\n}\n\n/**\n * Internal function to transform a bitcoin cash address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function (data, network, type) {\n  if (typeof (data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.')\n  }\n  if (data.length < 27) {\n    throw new Error('Invalid Address string provided')\n  }\n  data = data.trim()\n  var networkObj = Networks.get(network)\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network')\n  }\n\n  var addressBuffer = Base58Check.decode(data)\n  return Address._transformBuffer(addressBuffer, network, type)\n}\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function (data, network) {\n  var info = Address._transformPublicKey(data)\n  network = network || Networks.defaultNetwork\n  return new Address(info.hashBuffer, network, info.type)\n}\n\n/**\n * Instantiate an address from a PrivateKey instance\n *\n * @param {PrivateKey} privateKey\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPrivateKey = function (privateKey, network) {\n  let publicKey = PublicKey.fromPrivateKey(privateKey)\n  network = network || privateKey.network || Networks.defaultNetwork\n  return Address.fromPublicKey(publicKey, network)\n}\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function (hash, network) {\n  var info = Address._transformHash(hash)\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash)\n}\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function (hash, network) {\n  $.checkArgument(hash, 'hash parameter is required')\n  var info = Address._transformHash(hash)\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash)\n}\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function (script, network) {\n  $.checkArgument(script, 'script is required')\n  $.checkArgument(script instanceof Script, 'script must be instance of Script')\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network)\n}\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function (script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance')\n  var info = Address._transformScript(script, network)\n  return new Address(info.hashBuffer, network, info.type)\n}\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function (buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type)\n  return new Address(info.hashBuffer, info.network, info.type)\n}\n\nAddress.fromHex = function (hex, network, type) {\n  return Address.fromBuffer(Buffer.from(hex, 'hex'), network, type)\n}\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function (str, network, type) {\n  var info = Address._transformString(str, network, type)\n  return new Address(info.hashBuffer, info.network, info.type)\n}\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject (obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  )\n  var hashBuffer = Buffer.from(obj.hash, 'hex')\n  return new Address(hashBuffer, obj.network, obj.type)\n}\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function (data, network, type) {\n  var error\n  try {\n    new Address(data, network, type) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function (data, network, type) {\n  return !Address.getValidationError(data, network, type)\n}\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function () {\n  return this.type === Address.PayToPublicKeyHash\n}\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function () {\n  return this.type === Address.PayToScriptHash\n}\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function () {\n  var version = Buffer.from([this.network[this.type]])\n  var buf = Buffer.concat([version, this.hashBuffer])\n  return buf\n}\n\nAddress.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject () {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  }\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function () {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>'\n}\n\n/**\n * Will return a the base58 string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function () {\n  return Base58Check.encode(this.toBuffer())\n}\n\nmodule.exports = Address\n\nvar Script = require('./script')\n","'use strict'\n\nfunction Random () {\n}\n\n/* secure random bytes that sometimes throws an error due to lack of entropy */\nRandom.getRandomBuffer = function (size) {\n  if (process.browser) { return Random.getRandomBufferBrowser(size) } else { return Random.getRandomBufferNode(size) }\n}\n\nRandom.getRandomBufferNode = function (size) {\n  var crypto = require('crypto')\n  return crypto.randomBytes(size)\n}\n\nRandom.getRandomBufferBrowser = function (size) {\n  if (!window.crypto && !window.msCrypto) {\n    throw new Error('window.crypto not available')\n  }\n  var crypto\n\n  if (window.crypto && window.crypto.getRandomValues) {\n    crypto = window.crypto\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) { // internet explorer\n    crypto = window.msCrypto\n  } else {\n    throw new Error('window.crypto.getRandomValues not available')\n  }\n\n  var bbuf = new Uint8Array(size)\n  crypto.getRandomValues(bbuf)\n  var buf = Buffer.from(bbuf)\n\n  return buf\n}\n\nmodule.exports = Random\n","'use strict'\n\nvar _ = require('./util/_')\nvar Address = require('./address')\nvar Base58Check = require('./encoding/base58check')\nvar BN = require('./crypto/bn')\nvar JSUtil = require('./util/js')\nvar Networks = require('./networks')\nvar Point = require('./crypto/point')\nvar PublicKey = require('./publickey')\nvar Random = require('./crypto/random')\nvar $ = require('./util/preconditions')\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer or WIF string.\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey (data, network) {\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network)\n  }\n  if (data instanceof PrivateKey) {\n    return data\n  }\n\n  var info = this._classifyArguments(data, network)\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0) {\n    throw new TypeError('Number can not be equal to zero, undefined, null or false')\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N')\n  }\n  if (typeof (info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")')\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  })\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  })\n\n  return this\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function (data, network) {\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  }\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)) {\n    info.bn = PrivateKey._getRandomBN()\n  } else if (data instanceof BN) {\n    info.bn = data\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n    info = PrivateKey._transformBuffer(data, network)\n  } else if (data.bn && data.network) {\n    info = PrivateKey._transformObject(data)\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN()\n    info.network = Networks.get(data)\n  } else if (typeof (data) === 'string') {\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(Buffer.from(data, 'hex'))\n    } else {\n      info = PrivateKey._transformWIF(data, network)\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.')\n  }\n  return info\n}\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function () {\n  var condition\n  var bn\n  do {\n    var privbuf = Random.getRandomBuffer(32)\n    bn = BN.fromBuffer(privbuf)\n    condition = bn.lt(Point.getN())\n  } while (!condition)\n  return bn\n}\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function (buf, network) {\n  var info = {}\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network)\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey')\n\n  if (!info.network) {\n    throw new Error('Invalid network')\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch')\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)')\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1))\n\n  return info\n}\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function (buf, network) {\n  var info = {}\n  info.network = Networks.get(network) || Networks.defaultNetwork\n  info.bn = BN.fromBuffer(buf)\n  info.compressed = false\n  return info\n}\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function (str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network)\n}\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} buf\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function (buf, network) {\n  return new PrivateKey(buf, network)\n}\n\nPrivateKey.fromHex = function (hex, network) {\n  return PrivateKey.fromBuffer(Buffer.from(hex, 'hex'), network)\n}\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function (json) {\n  var bn = new BN(json.bn, 'hex')\n  var network = Networks.get(json.network)\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  }\n}\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function (str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.')\n  return new PrivateKey(str)\n}\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = PrivateKey.fromJSON = function (obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.')\n  return new PrivateKey(obj)\n}\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function (network) {\n  var bn = PrivateKey._getRandomBN()\n  return new PrivateKey(bn, network)\n}\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function (data, network) {\n  var error\n  try {\n    new PrivateKey(data, network) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function (data, network) {\n  if (!data) {\n    return false\n  }\n  return !PrivateKey.getValidationError(data, network)\n}\n\n/**\n * Will output the PrivateKey in WIF\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function () {\n  return this.toWIF()\n}\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function () {\n  var network = this.network\n  var compressed = this.compressed\n\n  var buf\n  if (compressed) {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n      this.bn.toBuffer({ size: 32 }),\n      Buffer.from([0x01])])\n  } else {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n      this.bn.toBuffer({ size: 32 })])\n  }\n\n  return Base58Check.encode(buf)\n}\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function () {\n  return this.bn\n}\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function () {\n  return this.bn.toBuffer({ size: 32 })\n}\n\nPrivateKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function () {\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this)\n  }\n  return this._pubkey\n}\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function (network) {\n  var pubkey = this.toPublicKey()\n  return Address.fromPublicKey(pubkey, network || this.network)\n}\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject () {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  }\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function () {\n  var uncompressed = !this.compressed ? ', uncompressed' : ''\n  return '<PrivateKey: ' + this.toHex() + ', network: ' + this.network + uncompressed + '>'\n}\n\nmodule.exports = PrivateKey\n","'use strict'\n\nvar BN = require('./crypto/bn')\nvar Point = require('./crypto/point')\nvar Hash = require('./crypto/hash')\nvar JSUtil = require('./util/js')\nvar Network = require('./networks')\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey (data, extra) {\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra)\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.')\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data\n  }\n  extra = extra || {}\n\n  var info = this._classifyArgs(data, extra)\n\n  // validation\n  info.point.validate()\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Network.defaultNetwork\n  })\n\n  return this\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function (data, extra) {\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  }\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data)\n  } else if (typeof (data) === 'string') {\n    info = PublicKey._transformDER(Buffer.from(data, 'hex'))\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data)\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data)\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.')\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Network.get(extra.network)\n  }\n  return info\n}\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function (param) {\n  var PrivateKey = require('./privatekey')\n  return param instanceof PrivateKey\n}\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function (param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array)\n}\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey')\n  var info = {}\n  info.point = Point.getG().mul(privkey.bn)\n  info.compressed = privkey.compressed\n  info.network = privkey.network\n  return info\n}\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An DER buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a buffer of DER encoded public key')\n  var info = {}\n\n  strict = _.isUndefined(strict) ? true : strict\n\n  var x\n  var y\n  var xbuf\n  var ybuf\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33)\n    ybuf = buf.slice(33, 65)\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes')\n    }\n    x = new BN(xbuf)\n    y = new BN(ybuf)\n    info.point = new Point(x, y)\n    info.compressed = false\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1)\n    x = new BN(xbuf)\n    info = PublicKey._transformX(true, x)\n    info.compressed = true\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1)\n    x = new BN(xbuf)\n    info = PublicKey._transformX(false, x)\n    info.compressed = true\n  } else {\n    throw new TypeError('Invalid DER format public key')\n  }\n  return info\n}\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function (odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)')\n  var info = {}\n  info.point = Point.fromX(odd, x)\n  return info\n}\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function (json) {\n  var x = new BN(json.x, 'hex')\n  var y = new BN(json.y, 'hex')\n  var point = new Point(x, y)\n  return new PublicKey(point, {\n    compressed: json.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function (privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey')\n  var info = PublicKey._transformPrivateKey(privkey)\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  })\n}\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function (buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a buffer of DER encoded public key')\n  var info = PublicKey._transformDER(buf, strict)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function (point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.')\n  return new PublicKey(point, {\n    compressed: compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromHex = PublicKey.fromString = function (str, encoding) {\n  var buf = Buffer.from(str, encoding || 'hex')\n  var info = PublicKey._transformDER(buf)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function (odd, x) {\n  var info = PublicKey._transformX(odd, x)\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  })\n}\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function (data) {\n  var error\n  try {\n    new PublicKey(data) // eslint-disable-line\n  } catch (e) {\n    error = e\n  }\n  return error\n}\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function (data) {\n  return !PublicKey.getValidationError(data)\n}\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject () {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  }\n}\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function () {\n  var x = this.point.getX()\n  var y = this.point.getY()\n\n  var xbuf = x.toBuffer({\n    size: 32\n  })\n  var ybuf = y.toBuffer({\n    size: 32\n  })\n\n  var prefix\n  if (!this.compressed) {\n    prefix = Buffer.from([0x04])\n    return Buffer.concat([prefix, xbuf, ybuf])\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2\n    if (odd) {\n      prefix = Buffer.from([0x03])\n    } else {\n      prefix = Buffer.from([0x02])\n    }\n    return Buffer.concat([prefix, xbuf])\n  }\n}\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID () {\n  return Hash.sha256ripemd160(this.toBuffer())\n}\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function (network) {\n  var Address = require('./address')\n  return Address.fromPublicKey(this, network || this.network)\n}\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = PublicKey.prototype.toHex = function () {\n  return this.toDER().toString('hex')\n}\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function () {\n  return '<PublicKey: ' + this.toHex() +\n    (this.compressed ? '' : ', uncompressed') + '>'\n}\n\nmodule.exports = PublicKey\n","'use strict'\n\nvar BN = require('./bn')\nvar Point = require('./point')\nvar Signature = require('./signature')\nvar PublicKey = require('../publickey')\nvar Random = require('./random')\nvar Hash = require('./hash')\nvar _ = require('../util/_')\nvar $ = require('../util/preconditions')\n\nvar ECDSA = function ECDSA (obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj)\n  }\n  if (obj) {\n    this.set(obj)\n  }\n}\n\nECDSA.prototype.set = function (obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf\n  this.endian = obj.endian || this.endian // the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey)\n  this.sig = obj.sig || this.sig\n  this.k = obj.k || this.k\n  this.verified = obj.verified || this.verified\n  return this\n}\n\nECDSA.prototype.privkey2pubkey = function () {\n  this.pubkey = this.privkey.toPublicKey()\n}\n\nECDSA.prototype.calci = function () {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i\n    var Qprime\n    try {\n      Qprime = this.toPublicKey()\n    } catch (e) {\n      console.error(e)\n      continue\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed\n      return this\n    }\n  }\n\n  this.sig.i = undefined\n  throw new Error('Unable to find valid recovery factor')\n}\n\nECDSA.fromString = function (str) {\n  var obj = JSON.parse(str)\n  return new ECDSA(obj)\n}\n\nECDSA.prototype.randomK = function () {\n  var N = Point.getN()\n  var k\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32))\n  } while (!(k.lt(N) && k.gt(BN.Zero)))\n  this.k = k\n  return this\n}\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function (badrs) {\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0\n  }\n  var v = Buffer.alloc(32)\n  v.fill(0x01)\n  var k = Buffer.alloc(32)\n  k.fill(0x00)\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  })\n  var hashbuf = this.endian === 'little' ? Buffer.from(this.hashbuf).reverse() : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00]), x, hashbuf]), k)\n  v = Hash.sha256hmac(v, k)\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x01]), x, hashbuf]), k)\n  v = Hash.sha256hmac(v, k)\n  v = Hash.sha256hmac(v, k)\n  var T = BN.fromBuffer(v)\n  var N = Point.getN()\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00])]), k)\n    v = Hash.sha256hmac(v, k)\n    v = Hash.sha256hmac(v, k)\n    T = BN.fromBuffer(v)\n  }\n\n  this.k = T\n  return this\n}\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function () {\n  var i = this.sig.i\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'))\n\n  var e = BN.fromBuffer(this.hashbuf)\n  var r = this.sig.r\n  var s = this.sig.s\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1\n\n  var n = Point.getN()\n  var G = Point.getG()\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r\n  var R = Point.fromX(isYOdd, x)\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n)\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point')\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().umod(n)\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n)\n\n  // var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv)\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed)\n\n  return pubkey\n}\n\nECDSA.prototype.sigError = function () {\n  if (!Buffer.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer'\n  }\n\n  var r = this.sig.r\n  var s = this.sig.s\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range'\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined)\n  var n = Point.getN()\n  var sinv = s.invm(n)\n  var u1 = sinv.mul(e).umod(n)\n  var u2 = sinv.mul(r).umod(n)\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2)\n  if (p.isInfinity()) {\n    return 'p is infinity'\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature'\n  } else {\n    return false\n  }\n}\n\nECDSA.toLowS = function (s) {\n  // enforce low s\n  // see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(Buffer.from('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s)\n  }\n  return s\n}\n\nECDSA.prototype._findSignature = function (d, e) {\n  var N = Point.getN()\n  var G = Point.getG()\n  // try different values of k until r, s are valid\n  var badrs = 0\n  var k, Q, r, s\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs)\n    }\n    badrs++\n    k = this.k\n    Q = G.mul(k)\n    r = new BN(1).mul(Q.x.umod(N))\n    s = k.invm(N).mul(e.add(d.mul(r))).umod(N)\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0)\n\n  s = ECDSA.toLowS(s)\n  return {\n    s: s,\n    r: r\n  }\n}\n\nECDSA.prototype.sign = function () {\n  var hashbuf = this.hashbuf\n  var privkey = this.privkey\n  var d = privkey.bn\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'))\n  $.checkState(Buffer.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'))\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined)\n\n  var obj = this._findSignature(d, e)\n  obj.compressed = this.pubkey.compressed\n\n  this.sig = new Signature(obj)\n  return this\n}\n\nECDSA.prototype.signRandomK = function () {\n  this.randomK()\n  return this.sign()\n}\n\nECDSA.prototype.toString = function () {\n  var obj = {}\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex')\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString()\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString()\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString()\n  }\n  if (this.k) {\n    obj.k = this.k.toString()\n  }\n  return JSON.stringify(obj)\n}\n\nECDSA.prototype.verify = function () {\n  if (!this.sigError()) {\n    this.verified = true\n  } else {\n    this.verified = false\n  }\n  return this\n}\n\nECDSA.sign = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig\n}\n\nECDSA.signWithCalcI = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().calci().sig\n}\n\nECDSA.signRandomK = function (hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).signRandomK().sig\n}\n\nECDSA.verify = function (hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified\n}\n\nmodule.exports = ECDSA\n","'use strict'\n\nvar _ = require('../util/_')\nvar BN = require('../crypto/bn')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar $ = require('../util/preconditions')\n\nvar GENESIS_BITS = 0x1d00ffff\n\n/**\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\n * the properties of the BlockHeader\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {BlockHeader} - An instance of block header\n * @constructor\n */\nvar BlockHeader = function BlockHeader (arg) {\n  if (!(this instanceof BlockHeader)) {\n    return new BlockHeader(arg)\n  }\n  var info = BlockHeader._from(arg)\n  this.version = info.version\n  this.prevHash = info.prevHash\n  this.merkleRoot = info.merkleRoot\n  this.time = info.time\n  this.timestamp = info.time\n  this.bits = info.bits\n  this.nonce = info.nonce\n\n  if (info.hash) {\n    $.checkState(\n      this.hash === info.hash,\n      'Argument object hash property does not match block hash.'\n    )\n  }\n\n  return this\n}\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block header data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlockHeader._from = function _from (arg) {\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = BlockHeader._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    info = BlockHeader._fromObject(arg)\n  } else {\n    throw new TypeError('Unrecognized argument for BlockHeader')\n  }\n  return info\n}\n\n/**\n * @param {Object} - A JSON string\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromObject = function _fromObject (data) {\n  $.checkArgument(data, 'data is required')\n  var prevHash = data.prevHash\n  var merkleRoot = data.merkleRoot\n  if (_.isString(data.prevHash)) {\n    prevHash = Buffer.from(data.prevHash, 'hex').reverse()\n  }\n  if (_.isString(data.merkleRoot)) {\n    merkleRoot = Buffer.from(data.merkleRoot, 'hex').reverse()\n  }\n  var info = {\n    hash: data.hash,\n    version: data.version,\n    prevHash: prevHash,\n    merkleRoot: merkleRoot,\n    time: data.time,\n    timestamp: data.time,\n    bits: data.bits,\n    nonce: data.nonce\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromObject = function fromObject (obj) {\n  var info = BlockHeader._fromObject(obj)\n  return new BlockHeader(info)\n}\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromRawBlock = function fromRawBlock (data) {\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data, 'binary')\n  }\n  var br = BufferReader(data)\n  br.pos = BlockHeader.Constants.START_OF_HEADER\n  var info = BlockHeader._fromBufferReader(br)\n  return new BlockHeader(info)\n}\n\n/**\n * @param {Buffer} - A buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBuffer = function fromBuffer (buf) {\n  var info = BlockHeader._fromBufferReader(BufferReader(buf))\n  return new BlockHeader(info)\n}\n\n/**\n * @param {string} - A hex encoded buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromString = function fromString (str) {\n  var buf = Buffer.from(str, 'hex')\n  return BlockHeader.fromBuffer(buf)\n}\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromBufferReader = function _fromBufferReader (br) {\n  var info = {}\n  info.version = br.readInt32LE()\n  info.prevHash = br.read(32)\n  info.merkleRoot = br.read(32)\n  info.time = br.readUInt32LE()\n  info.bits = br.readUInt32LE()\n  info.nonce = br.readUInt32LE()\n  return info\n}\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBufferReader = function fromBufferReader (br) {\n  var info = BlockHeader._fromBufferReader(br)\n  return new BlockHeader(info)\n}\n\n/**\n * @returns {Object} - A plain object of the BlockHeader\n */\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject () {\n  return {\n    hash: this.hash,\n    version: this.version,\n    prevHash: Buffer.from(this.prevHash).reverse().toString('hex'),\n    merkleRoot: Buffer.from(this.merkleRoot).reverse().toString('hex'),\n    time: this.time,\n    bits: this.bits,\n    nonce: this.nonce\n  }\n}\n\n/**\n * @returns {Buffer} - A Buffer of the BlockHeader\n */\nBlockHeader.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @returns {string} - A hex encoded string of the BlockHeader\n */\nBlockHeader.prototype.toString = function toString () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @param {BufferWriter} - An existing instance BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\n */\nBlockHeader.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.writeInt32LE(this.version)\n  bw.write(this.prevHash)\n  bw.write(this.merkleRoot)\n  bw.writeUInt32LE(this.time)\n  bw.writeUInt32LE(this.bits)\n  bw.writeUInt32LE(this.nonce)\n  return bw\n}\n\n/**\n * Returns the target difficulty for this block\n * @param {Number} bits\n * @returns {BN} An instance of BN with the decoded difficulty bits\n */\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty (bits) {\n  bits = bits || this.bits\n\n  var target = new BN(bits & 0xffffff)\n  var mov = 8 * ((bits >>> 24) - 3)\n  while (mov-- > 0) {\n    target = target.mul(new BN(2))\n  }\n  return target\n}\n\n/**\n * @link https://en.bitcoin.it/wiki/Difficulty\n * @return {Number}\n */\nBlockHeader.prototype.getDifficulty = function getDifficulty () {\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)))\n  var currentTargetBN = this.getTargetDifficulty()\n\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10)\n  var decimalPos = difficultyString.length - 8\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos)\n\n  return parseFloat(difficultyString)\n}\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlockHeader.prototype._getHash = function hash () {\n  var buf = this.toBuffer()\n  return Hash.sha256sha256(buf)\n}\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex')\n    }\n    return this._id\n  },\n  set: _.noop\n}\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty)\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty)\n\n/**\n * @returns {Boolean} - If timestamp is not too far in the future\n */\nBlockHeader.prototype.validTimestamp = function validTimestamp () {\n  var currentTime = Math.round(new Date().getTime() / 1000)\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\n */\nBlockHeader.prototype.validProofOfWork = function validProofOfWork () {\n  var pow = new BN(this.id, 'hex')\n  var target = this.getTargetDifficulty()\n\n  if (pow.cmp(target) > 0) {\n    return false\n  }\n  return true\n}\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlockHeader.prototype.inspect = function inspect () {\n  return '<BlockHeader ' + this.id + '>'\n}\n\nBlockHeader.Constants = {\n  START_OF_HEADER: 8, // Start buffer position in raw block data\n  MAX_TIME_OFFSET: 2 * 60 * 60, // The max a timestamp can be in the future\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\n}\n\nmodule.exports = BlockHeader\n","'use strict'\n\nvar _ = require('../util/_')\nvar BlockHeader = require('./blockheader')\nvar BN = require('../crypto/bn')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Transaction = require('../transaction')\nvar $ = require('../util/preconditions')\n\n/**\n * Instantiate a Block from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {Block}\n * @constructor\n */\nfunction Block (arg) {\n  if (!(this instanceof Block)) {\n    return new Block(arg)\n  }\n  _.extend(this, Block._from(arg))\n  return this\n}\n\nBlock.MAX_BLOCK_SIZE = 128000000\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlock._from = function _from (arg) {\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = Block._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    info = Block._fromObject(arg)\n  } else {\n    throw new TypeError('Unrecognized argument for Block')\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Object} - An object representing block data\n * @private\n */\nBlock._fromObject = function _fromObject (data) {\n  var transactions = []\n  data.transactions.forEach(function (tx) {\n    if (tx instanceof Transaction) {\n      transactions.push(tx)\n    } else {\n      transactions.push(Transaction().fromObject(tx))\n    }\n  })\n  var info = {\n    header: BlockHeader.fromObject(data.header),\n    transactions: transactions\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nBlock.fromObject = function fromObject (obj) {\n  var info = Block._fromObject(obj)\n  return new Block(info)\n}\n\n/**\n * @param {BufferReader} - Block data\n * @returns {Object} - An object representing the block data\n * @private\n */\nBlock._fromBufferReader = function _fromBufferReader (br) {\n  var info = {}\n  $.checkState(!br.finished(), 'No block data received')\n  info.header = BlockHeader.fromBufferReader(br)\n  var transactions = br.readVarintNum()\n  info.transactions = []\n  for (var i = 0; i < transactions; i++) {\n    info.transactions.push(Transaction().fromBufferReader(br))\n  }\n  return info\n}\n\n/**\n * @param {BufferReader} - A buffer reader of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBufferReader = function fromBufferReader (br) {\n  $.checkArgument(br, 'br is required')\n  var info = Block._fromBufferReader(br)\n  return new Block(info)\n}\n\n/**\n * @param {Buffer} - A buffer of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBuffer = function fromBuffer (buf) {\n  return Block.fromBufferReader(new BufferReader(buf))\n}\n\n/**\n * @param {string} - str - A hex encoded string of the block\n * @returns {Block} - A hex encoded string of the block\n */\nBlock.fromString = function fromString (str) {\n  var buf = Buffer.from(str, 'hex')\n  return Block.fromBuffer(buf)\n}\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {Block} - An instance of block\n */\nBlock.fromRawBlock = function fromRawBlock (data) {\n  if (!Buffer.isBuffer(data)) {\n    data = Buffer.from(data, 'binary')\n  }\n  var br = BufferReader(data)\n  br.pos = Block.Values.START_OF_BLOCK\n  var info = Block._fromBufferReader(br)\n  return new Block(info)\n}\n\n/**\n * @returns {Object} - A plain object with the block properties\n */\nBlock.prototype.toObject = Block.prototype.toJSON = function toObject () {\n  var transactions = []\n  this.transactions.forEach(function (tx) {\n    transactions.push(tx.toObject())\n  })\n  return {\n    header: this.header.toObject(),\n    transactions: transactions\n  }\n}\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nBlock.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @returns {string} - A hex encoded string of the block\n */\nBlock.prototype.toString = function toString () {\n  return this.toBuffer().toString('hex')\n}\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the Block\n */\nBlock.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.write(this.header.toBuffer())\n  bw.writeVarintNum(this.transactions.length)\n  for (var i = 0; i < this.transactions.length; i++) {\n    this.transactions[i].toBufferWriter(bw)\n  }\n  return bw\n}\n\n/**\n * Will iterate through each transaction and return an array of hashes\n * @returns {Array} - An array with transaction hashes\n */\nBlock.prototype.getTransactionHashes = function getTransactionHashes () {\n  var hashes = []\n  if (this.transactions.length === 0) {\n    return [Block.Values.NULL_HASH]\n  }\n  for (var t = 0; t < this.transactions.length; t++) {\n    hashes.push(this.transactions[t]._getHash())\n  }\n  return hashes\n}\n\n/**\n * Will build a merkle tree of all the transactions, ultimately arriving at\n * a single point, the merkle root.\n * @link https://en.bitcoin.it/wiki/Protocol_specification#Merkle_Trees\n * @returns {Array} - An array with each level of the tree after the other.\n */\nBlock.prototype.getMerkleTree = function getMerkleTree () {\n  var tree = this.getTransactionHashes()\n\n  var j = 0\n  for (var size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)) {\n    for (var i = 0; i < size; i += 2) {\n      var i2 = Math.min(i + 1, size - 1)\n      var buf = Buffer.concat([tree[j + i], tree[j + i2]])\n      tree.push(Hash.sha256sha256(buf))\n    }\n    j += size\n  }\n\n  return tree\n}\n\n/**\n * Calculates the merkleRoot from the transactions.\n * @returns {Buffer} - A buffer of the merkle root hash\n */\nBlock.prototype.getMerkleRoot = function getMerkleRoot () {\n  var tree = this.getMerkleTree()\n  return tree[tree.length - 1]\n}\n\n/**\n * Verifies that the transactions in the block match the header merkle root\n * @returns {Boolean} - If the merkle roots match\n */\nBlock.prototype.validMerkleRoot = function validMerkleRoot () {\n  var h = new BN(this.header.merkleRoot.toString('hex'), 'hex')\n  var c = new BN(this.getMerkleRoot().toString('hex'), 'hex')\n\n  if (h.cmp(c) !== 0) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlock.prototype._getHash = function () {\n  return this.header._getHash()\n}\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function () {\n    if (!this._id) {\n      this._id = this.header.id\n    }\n    return this._id\n  },\n  set: _.noop\n}\nObject.defineProperty(Block.prototype, 'id', idProperty)\nObject.defineProperty(Block.prototype, 'hash', idProperty)\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlock.prototype.inspect = function inspect () {\n  return '<Block ' + this.id + '>'\n}\n\nBlock.Values = {\n  START_OF_BLOCK: 8, // Start of block in raw block data\n  NULL_HASH: Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\n}\n\nmodule.exports = Block\n","'use strict'\n\nvar _ = require('../util/_')\nvar BlockHeader = require('./blockheader')\nvar BufferReader = require('../encoding/bufferreader')\nvar BufferWriter = require('../encoding/bufferwriter')\nvar Hash = require('../crypto/hash')\nvar Transaction = require('../transaction')\nvar errors = require('../errors')\nvar $ = require('../util/preconditions')\n\n/**\n * Instantiate a MerkleBlock from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object representing a MerkleBlock\n * @returns {MerkleBlock}\n * @constructor\n */\nfunction MerkleBlock (arg) {\n  if (!(this instanceof MerkleBlock)) {\n    return new MerkleBlock(arg)\n  }\n\n  var info = {}\n  if (Buffer.isBuffer(arg)) {\n    info = MerkleBlock._fromBufferReader(BufferReader(arg))\n  } else if (_.isObject(arg)) {\n    var header\n    if (arg.header instanceof BlockHeader) {\n      header = arg.header\n    } else {\n      header = BlockHeader.fromObject(arg.header)\n    }\n    info = {\n      /**\n       * @name MerkleBlock#header\n       * @type {BlockHeader}\n       */\n      header: header,\n      /**\n       * @name MerkleBlock#numTransactions\n       * @type {Number}\n       */\n      numTransactions: arg.numTransactions,\n      /**\n       * @name MerkleBlock#hashes\n       * @type {String[]}\n       */\n      hashes: arg.hashes,\n      /**\n       * @name MerkleBlock#flags\n       * @type {Number[]}\n       */\n      flags: arg.flags\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for MerkleBlock')\n  }\n  _.extend(this, info)\n  this._flagBitsUsed = 0\n  this._hashesUsed = 0\n\n  return this\n}\n\n/**\n * @param {Buffer} - MerkleBlock data in a Buffer object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBuffer = function fromBuffer (buf) {\n  return MerkleBlock.fromBufferReader(BufferReader(buf))\n}\n\n/**\n * @param {BufferReader} - MerkleBlock data in a BufferReader object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBufferReader = function fromBufferReader (br) {\n  return new MerkleBlock(MerkleBlock._fromBufferReader(br))\n}\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nMerkleBlock.prototype.toBuffer = function toBuffer () {\n  return this.toBufferWriter().concat()\n}\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the MerkleBlock\n */\nMerkleBlock.prototype.toBufferWriter = function toBufferWriter (bw) {\n  if (!bw) {\n    bw = new BufferWriter()\n  }\n  bw.write(this.header.toBuffer())\n  bw.writeUInt32LE(this.numTransactions)\n  bw.writeVarintNum(this.hashes.length)\n  for (var i = 0; i < this.hashes.length; i++) {\n    bw.write(Buffer.from(this.hashes[i], 'hex'))\n  }\n  bw.writeVarintNum(this.flags.length)\n  for (i = 0; i < this.flags.length; i++) {\n    bw.writeUInt8(this.flags[i])\n  }\n  return bw\n}\n\n/**\n * @returns {Object} - A plain object with the MerkleBlock properties\n */\nMerkleBlock.prototype.toObject = MerkleBlock.prototype.toJSON = function toObject () {\n  return {\n    header: this.header.toObject(),\n    numTransactions: this.numTransactions,\n    hashes: this.hashes,\n    flags: this.flags\n  }\n}\n\n/**\n * Verify that the MerkleBlock is valid\n * @returns {Boolean} - True/False whether this MerkleBlock is Valid\n */\nMerkleBlock.prototype.validMerkleTree = function validMerkleTree () {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array')\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array')\n\n  // Can't have more hashes than numTransactions\n  if (this.hashes.length > this.numTransactions) {\n    return false\n  }\n\n  // Can't have more flag bits than num hashes\n  if (this.flags.length * 8 < this.hashes.length) {\n    return false\n  }\n\n  var height = this._calcTreeHeight()\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 }\n  var root = this._traverseMerkleTree(height, 0, opts)\n  if (opts.hashesUsed !== this.hashes.length) {\n    return false\n  }\n  return root.equals(this.header.merkleRoot)\n}\n\n/**\n * WARNING: This method is deprecated. Use filteredTxsHash instead.\n *\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filterdTxsHash = function filterdTxsHash () {\n  throw new Error('filterdTxsHash has been deprecated. use filteredTxsHash.')\n}\n\n/**\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filteredTxsHash = function filteredTxsHash () {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array')\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array')\n\n  // Can't have more hashes than numTransactions\n  if (this.hashes.length > this.numTransactions) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n\n  // Can't have more flag bits than num hashes\n  if (this.flags.length * 8 < this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n\n  // If there is only one hash the filter do not match any txs in the block\n  if (this.hashes.length === 1) {\n    return []\n  };\n\n  var height = this._calcTreeHeight()\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 }\n  var txs = this._traverseMerkleTree(height, 0, opts, true)\n  if (opts.hashesUsed !== this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree()\n  }\n  return txs\n}\n\n/**\n * Traverse a the tree in this MerkleBlock, validating it along the way\n * Modeled after Bitcoin Core merkleblock.cpp TraverseAndExtract()\n * @param {Number} - depth - Current height\n * @param {Number} - pos - Current position in the tree\n * @param {Object} - opts - Object with values that need to be mutated throughout the traversal\n * @param {Boolean} - checkForTxs - if true return opts.txs else return the Merkle Hash\n * @param {Number} - opts.flagBitsUsed - Number of flag bits used, should start at 0\n * @param {Number} - opts.hashesUsed - Number of hashes used, should start at 0\n * @param {Array} - opts.txs - Will finish populated by transactions found during traversal that match the filter\n * @returns {Buffer|null} - Buffer containing the Merkle Hash for that height\n * @returns {Array} - transactions found during traversal that match the filter\n * @private\n */\nMerkleBlock.prototype._traverseMerkleTree = function traverseMerkleTree (depth, pos, opts, checkForTxs) {\n  opts = opts || {}\n  opts.txs = opts.txs || []\n  opts.flagBitsUsed = opts.flagBitsUsed || 0\n  opts.hashesUsed = opts.hashesUsed || 0\n  checkForTxs = checkForTxs || false\n\n  if (opts.flagBitsUsed > this.flags.length * 8) {\n    return null\n  }\n  var isParentOfMatch = (this.flags[opts.flagBitsUsed >> 3] >>> (opts.flagBitsUsed++ & 7)) & 1\n  if (depth === 0 || !isParentOfMatch) {\n    if (opts.hashesUsed >= this.hashes.length) {\n      return null\n    }\n    var hash = this.hashes[opts.hashesUsed++]\n    if (depth === 0 && isParentOfMatch) {\n      opts.txs.push(hash)\n    }\n    return Buffer.from(hash, 'hex')\n  } else {\n    var left = this._traverseMerkleTree(depth - 1, pos * 2, opts)\n    var right = left\n    if (pos * 2 + 1 < this._calcTreeWidth(depth - 1)) {\n      right = this._traverseMerkleTree(depth - 1, pos * 2 + 1, opts)\n    }\n    if (checkForTxs) {\n      return opts.txs\n    } else {\n      return Hash.sha256sha256(Buffer.concat([left, right]))\n    }\n  }\n}\n\n/** Calculates the width of a merkle tree at a given height.\n *  Modeled after Bitcoin Core merkleblock.h CalcTreeWidth()\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Width of the tree at a given height\n * @private\n */\nMerkleBlock.prototype._calcTreeWidth = function calcTreeWidth (height) {\n  return (this.numTransactions + (1 << height) - 1) >> height\n}\n\n/** Calculates the height of the merkle tree in this MerkleBlock\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Height of the merkle tree in this MerkleBlock\n * @private\n */\nMerkleBlock.prototype._calcTreeHeight = function calcTreeHeight () {\n  var height = 0\n  while (this._calcTreeWidth(height) > 1) {\n    height++\n  }\n  return height\n}\n\n/**\n * @param {Transaction|String} - Transaction or Transaction ID Hash\n * @returns {Boolean} - return true/false if this MerkleBlock has the TX or not\n * @private\n */\nMerkleBlock.prototype.hasTransaction = function hasTransaction (tx) {\n  $.checkArgument(!_.isUndefined(tx), 'tx cannot be undefined')\n  $.checkArgument(tx instanceof Transaction || typeof tx === 'string',\n    'Invalid tx given, tx must be a \"string\" or \"Transaction\"')\n\n  var hash = tx\n  if (tx instanceof Transaction) {\n    // We need to reverse the id hash for the lookup\n    hash = Buffer.from(tx.id, 'hex').reverse().toString('hex')\n  }\n\n  var txs = []\n  var height = this._calcTreeHeight()\n  this._traverseMerkleTree(height, 0, { txs: txs })\n  return txs.indexOf(hash) !== -1\n}\n\n/**\n * @param {Buffer} - MerkleBlock data\n * @returns {Object} - An Object representing merkleblock data\n * @private\n */\nMerkleBlock._fromBufferReader = function _fromBufferReader (br) {\n  $.checkState(!br.finished(), 'No merkleblock data received')\n  var info = {}\n  info.header = BlockHeader.fromBufferReader(br)\n  info.numTransactions = br.readUInt32LE()\n  var numHashes = br.readVarintNum()\n  info.hashes = []\n  for (var i = 0; i < numHashes; i++) {\n    info.hashes.push(br.read(32).toString('hex'))\n  }\n  var numFlags = br.readVarintNum()\n  info.flags = []\n  for (i = 0; i < numFlags; i++) {\n    info.flags.push(br.readUInt8())\n  }\n  return info\n}\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nMerkleBlock.fromObject = function fromObject (obj) {\n  return new MerkleBlock(obj)\n}\n\nmodule.exports = MerkleBlock\n","module.exports = require('./block')\n\nmodule.exports.BlockHeader = require('./blockheader')\nmodule.exports.MerkleBlock = require('./merkleblock')\n","'use strict'\n\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\nvar BN = require('./crypto/bn')\nvar Base58 = require('./encoding/base58')\nvar Base58Check = require('./encoding/base58check')\nvar Hash = require('./crypto/hash')\nvar HDPrivateKey = require('./hdprivatekey')\nvar Network = require('./networks')\nvar Point = require('./crypto/point')\nvar PublicKey = require('./publickey')\n\nvar bsvErrors = require('./errors')\nvar errors = bsvErrors\nvar hdErrors = bsvErrors.HDPublicKey\nvar assert = require('assert')\n\nvar JSUtil = require('./util/js')\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey (arg) {\n  if (arg instanceof HDPublicKey) {\n    return arg\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg)\n  }\n  if (arg) {\n    if (_.isString(arg) || Buffer.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg)\n      if (!error) {\n        return this._buildFromSerialized(arg)\n      } else if (Buffer.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString())\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey\n        }\n        throw error\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg)\n        } else {\n          return this._buildFromObject(arg)\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg)\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument()\n  }\n}\n\nHDPublicKey.fromHDPrivateKey = function (hdPrivateKey) {\n  return new HDPublicKey(hdPrivateKey)\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function (arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg)\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath)\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened\n  }\n\n  return false\n}\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function () {\n  throw new Error('derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.')\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\nHDPublicKey.prototype._deriveWithNumber = function (index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened()\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index)\n  }\n\n  var indexBuffer = JSUtil.integerAsBuffer(index)\n  var data = Buffer.concat([this.publicKey.toBuffer(), indexBuffer])\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode)\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), { size: 32 })\n  var chainCode = hash.slice(32, 64)\n\n  var publicKey\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point))\n  } catch (e) {\n    return this._deriveWithNumber(index + 1)\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  })\n\n  return derived\n}\n\nHDPublicKey.prototype._deriveFromString = function (path) {\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened()\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path)\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path)\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index)\n  }, this)\n\n  return derived\n}\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function (data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network))\n}\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function (data, network) {\n  if (!(_.isString(data) || Buffer.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string')\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data)\n  }\n  try {\n    data = Base58Check.decode(data)\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data)\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data)\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network)\n    if (error) {\n      return error\n    }\n  }\n  var version = data.readUInt32BE(0)\n  if (version === Network.livenet.xprivkey || version === Network.testnet.xprivkey) {\n    return new hdErrors.ArgumentIsPrivateExtended()\n  }\n  return null\n}\n\nHDPublicKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg)\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg)\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd)\n  if (version.readUInt32BE(0) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version)\n  }\n  return null\n}\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers)\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey))\n  args.publicKey = Point.pointToCompressed(point)\n  args.version = JSUtil.integerAsBuffer(Network.get(args.version.readUInt32BE(0)).xpubkey)\n  args.privateKey = undefined\n  args.checksum = undefined\n  args.xprivkey = undefined\n  return this._buildFromBuffers(args)\n}\n\nHDPublicKey.prototype._buildFromObject = function (arg) {\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? JSUtil.integerAsBuffer(Network.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? Buffer.from([arg.depth & 0xff]) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? JSUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? JSUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode, 'hex') : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? Buffer.from(arg.publicKey, 'hex')\n      : Buffer.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? JSUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPublicKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg)\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n      HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  }\n  return this._buildFromBuffers(buffers)\n}\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function (arg) {\n  HDPublicKey._validateBufferArguments(arg)\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  })\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ]\n  var concat = Buffer.concat(sequence)\n  var checksum = Base58Check.checksum(concat)\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum)\n    }\n  }\n  var network = Network.get(arg.version.readUInt32BE(0))\n\n  var xpubkey\n  xpubkey = Base58Check.encode(Buffer.concat(sequence))\n  arg.xpubkey = Buffer.from(xpubkey)\n\n  var publicKey = new PublicKey(arg.publicKey, { network: network })\n  var size = HDPublicKey.ParentFingerPrintSize\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size)\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: arg.depth[0],\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  })\n\n  return this\n}\n\nHDPublicKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function (name, size) {\n    var buff = arg[name]\n    assert(Buffer.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff)\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    )\n  }\n  checkBuffer('version', HDPublicKey.VersionSize)\n  checkBuffer('depth', HDPublicKey.DepthSize)\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize)\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize)\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize)\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize)\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize)\n  }\n}\n\nHDPublicKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided')\n  return new HDPublicKey(arg)\n}\n\nHDPublicKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided')\n  return new HDPublicKey(arg)\n}\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function () {\n  return this.xpubkey\n}\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function () {\n  return '<HDPublicKey: ' + this.xpubkey + '>'\n}\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: this._buffers.checksum.readUInt32BE(0),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject () {\n  return {\n    network: Network.get(this._buffers.version.readUInt32BE(0)).name,\n    depth: this._buffers.depth[0],\n    fingerPrint: this.fingerPrint.readUInt32BE(0),\n    parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),\n    childIndex: this._buffers.childIndex.readUInt32BE(0),\n    chainCode: this._buffers.chainCode.toString('hex'),\n    publicKey: this.publicKey.toString(),\n    checksum: this._buffers.checksum.readUInt32BE(0),\n    xpubkey: this.xpubkey\n  }\n}\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function (arg) {\n  return new HDPublicKey(arg)\n}\n\n/**\n * Create a HDPublicKey from a hex string argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromHex = function (hex) {\n  return HDPublicKey.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function () {\n  return Buffer.from(this._buffers.xpubkey)\n}\n\n/**\n * Return a hex string representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nHDPublicKey.Hardened = 0x80000000\nHDPublicKey.RootElementAlias = ['m', 'M']\n\nHDPublicKey.VersionSize = 4\nHDPublicKey.DepthSize = 1\nHDPublicKey.ParentFingerPrintSize = 4\nHDPublicKey.ChildIndexSize = 4\nHDPublicKey.ChainCodeSize = 32\nHDPublicKey.PublicKeySize = 33\nHDPublicKey.CheckSumSize = 4\n\nHDPublicKey.DataSize = 78\nHDPublicKey.SerializedByteSize = 82\n\nHDPublicKey.VersionStart = 0\nHDPublicKey.VersionEnd = HDPublicKey.VersionStart + HDPublicKey.VersionSize\nHDPublicKey.DepthStart = HDPublicKey.VersionEnd\nHDPublicKey.DepthEnd = HDPublicKey.DepthStart + HDPublicKey.DepthSize\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd\nHDPublicKey.ParentFingerPrintEnd = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize\nHDPublicKey.ChildIndexStart = HDPublicKey.ParentFingerPrintEnd\nHDPublicKey.ChildIndexEnd = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize\nHDPublicKey.ChainCodeStart = HDPublicKey.ChildIndexEnd\nHDPublicKey.ChainCodeEnd = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize\nHDPublicKey.PublicKeyStart = HDPublicKey.ChainCodeEnd\nHDPublicKey.PublicKeyEnd = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize\nHDPublicKey.ChecksumStart = HDPublicKey.PublicKeyEnd\nHDPublicKey.ChecksumEnd = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize)\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize)\n\nmodule.exports = HDPublicKey\n","'use strict'\n\nvar assert = require('assert')\nvar buffer = require('buffer')\nvar _ = require('./util/_')\nvar $ = require('./util/preconditions')\n\nvar BN = require('./crypto/bn')\nvar Base58 = require('./encoding/base58')\nvar Base58Check = require('./encoding/base58check')\nvar Hash = require('./crypto/hash')\nvar Network = require('./networks')\nvar Point = require('./crypto/point')\nvar PrivateKey = require('./privatekey')\nvar Random = require('./crypto/random')\n\nvar errors = require('./errors')\nvar hdErrors = errors.HDPrivateKey\nvar JSUtil = require('./util/js')\n\nvar MINIMUM_ENTROPY_BITS = 128\nvar BITS_TO_BYTES = 1 / 8\nvar MAXIMUM_ENTROPY_BITS = 512\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey (arg) {\n  if (arg instanceof HDPrivateKey) {\n    return arg\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg)\n  }\n  if (!arg) {\n    return this._generateRandomly()\n  }\n\n  if (Network.get(arg)) {\n    return this._generateRandomly(arg)\n  } else if (_.isString(arg) || Buffer.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg)\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg)\n    } else if (Buffer.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString())\n    } else {\n      throw HDPrivateKey.getSerializedError(arg)\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg)\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg)\n  }\n}\n\nHDPrivateKey.fromRandom = function () {\n  return new HDPrivateKey()\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function (arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg)\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath)\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex\n  }\n\n  return false\n}\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function (path) {\n  var steps = path.split('/')\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return []\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null\n  }\n\n  var indexes = steps.slice(1).map(function (step) {\n    var isHardened = step.slice(-1) === '\\''\n    if (isHardened) {\n      step = step.slice(0, -1)\n    }\n    if (!step || step[0] === '-') {\n      return NaN\n    }\n    var index = +step // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened\n    }\n\n    return index\n  })\n\n  return _.some(indexes, isNaN) ? null : indexes\n}\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function () {\n  throw new Error('derive has been deprecated. use deriveChild or, for the old way, deriveNonCompliantChild.')\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function (arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true)\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true)\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg)\n  }\n}\n\nHDPrivateKey.prototype._deriveWithNumber = function (index, hardened, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index)\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened\n  }\n\n  var indexBuffer = JSUtil.integerAsBuffer(index)\n  var data\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer()\n    data = Buffer.concat([buffer.Buffer.from([0]), nonZeroPadded, indexBuffer])\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({ size: 32 })\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes')\n    data = Buffer.concat([buffer.Buffer.from([0]), privateKeyBuffer, indexBuffer])\n  } else {\n    data = Buffer.concat([this.publicKey.toBuffer(), indexBuffer])\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode)\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  })\n  var chainCode = hash.slice(32, 64)\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  })\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant)\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  })\n\n  return derived\n}\n\nHDPrivateKey.prototype._deriveFromString = function (path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path)\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path)\n  var derived = indexes.reduce(function (prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant)\n  }, this)\n\n  return derived\n}\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function (data, network) {\n  return !HDPrivateKey.getSerializedError(data, network)\n}\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function (data, network) {\n  if (!(_.isString(data) || Buffer.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer')\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data)\n  }\n  try {\n    data = Base58Check.decode(data)\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data)\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data)\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network)\n    if (error) {\n      return error\n    }\n  }\n  return null\n}\n\nHDPrivateKey._validateNetwork = function (data, networkArg) {\n  var network = Network.get(networkArg)\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg)\n  }\n  var version = data.slice(0, 4)\n  if (version.readUInt32BE(0) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version)\n  }\n  return null\n}\n\nHDPrivateKey.fromString = function (arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided')\n  return new HDPrivateKey(arg)\n}\n\nHDPrivateKey.fromObject = function (arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided')\n  return new HDPrivateKey(arg)\n}\n\nHDPrivateKey.prototype._buildFromJSON = function (arg) {\n  return this._buildFromObject(JSON.parse(arg))\n}\n\nHDPrivateKey.prototype._buildFromObject = function (arg) {\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? JSUtil.integerAsBuffer(Network.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? Buffer.from([arg.depth & 0xff]) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? JSUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? JSUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode, 'hex') : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? Buffer.from(arg.privateKey, 'hex') : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : JSUtil.integerAsBuffer(arg.checksum)) : undefined\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPrivateKey.prototype._buildFromSerialized = function (arg) {\n  var decoded = Base58Check.decode(arg)\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  }\n  return this._buildFromBuffers(buffers)\n}\n\nHDPrivateKey.prototype._generateRandomly = function (network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network)\n}\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function (hexa, network) {\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = Buffer.from(hexa, 'hex')\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa)\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa)\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa)\n  }\n  var hash = Hash.sha512hmac(hexa, buffer.Buffer.from('Bitcoin seed'))\n\n  return new HDPrivateKey({\n    network: Network.get(network) || Network.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  })\n}\n\nHDPrivateKey.prototype._calcHDPublicKey = function () {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey')\n    this._hdPublicKey = new HDPublicKey(this)\n  }\n}\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function (arg) {\n  HDPrivateKey._validateBufferArguments(arg)\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  })\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    Buffer.alloc(1), arg.privateKey\n  ]\n  var concat = buffer.Buffer.concat(sequence)\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat)\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat)\n    }\n  }\n\n  var network = Network.get(arg.version.readUInt32BE(0))\n  var xprivkey\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence))\n  arg.xprivkey = Buffer.from(xprivkey)\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network)\n  var publicKey = privateKey.toPublicKey()\n  var size = HDPrivateKey.ParentFingerPrintSize\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size)\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: arg.depth[0],\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  })\n\n  this._hdPublicKey = null\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      this._calcHDPublicKey()\n      return this._hdPublicKey\n    }\n  })\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function () {\n      this._calcHDPublicKey()\n      return this._hdPublicKey.xpubkey\n    }\n  })\n  return this\n}\n\nHDPrivateKey._validateBufferArguments = function (arg) {\n  var checkBuffer = function (name, size) {\n    var buff = arg[name]\n    assert(Buffer.isBuffer(buff), name + ' argument is not a buffer')\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    )\n  }\n  checkBuffer('version', HDPrivateKey.VersionSize)\n  checkBuffer('depth', HDPrivateKey.DepthSize)\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize)\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize)\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize)\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize)\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize)\n  }\n}\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function () {\n  return this.xprivkey\n}\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function () {\n  return '<HDPrivateKey: ' + this.xprivkey + '>'\n}\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject () {\n  return {\n    network: Network.get(this._buffers.version.readUInt32BE(0), 'xprivkey').name,\n    depth: this._buffers.depth[0],\n    fingerPrint: this.fingerPrint.readUInt32BE(0),\n    parentFingerPrint: this._buffers.parentFingerPrint.readUInt32BE(0),\n    childIndex: this._buffers.childIndex.readUInt32BE(0),\n    chainCode: this._buffers.chainCode.toString('hex'),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: this._buffers.checksum.readUInt32BE(0),\n    xprivkey: this.xprivkey\n  }\n}\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function (buf) {\n  return new HDPrivateKey(buf.toString())\n}\n\n/**\n * Build a HDPrivateKey from a hex string\n *\n * @param {string} hex\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromHex = function (hex) {\n  return HDPrivateKey.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function () {\n  return Buffer.from(this.toString())\n}\n\n/**\n * Returns a hex string representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nHDPrivateKey.DefaultDepth = 0\nHDPrivateKey.DefaultFingerprint = 0\nHDPrivateKey.DefaultChildIndex = 0\nHDPrivateKey.Hardened = 0x80000000\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\'']\n\nHDPrivateKey.VersionSize = 4\nHDPrivateKey.DepthSize = 1\nHDPrivateKey.ParentFingerPrintSize = 4\nHDPrivateKey.ChildIndexSize = 4\nHDPrivateKey.ChainCodeSize = 32\nHDPrivateKey.PrivateKeySize = 32\nHDPrivateKey.CheckSumSize = 4\n\nHDPrivateKey.DataLength = 78\nHDPrivateKey.SerializedByteSize = 82\n\nHDPrivateKey.VersionStart = 0\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize)\n\nmodule.exports = HDPrivateKey\n","'use strict'\n\nvar mvc = module.exports\n\n// module information\nmvc.version = 'v' + require('./package.json').version\nmvc.versionGuard = function (version) {\n  if (version !== undefined) {\n    var message = `\n      More than one instance of mvc found.\n      Please make sure to require mvc and check that submodules do\n      not also include their own mvc dependency.`\n    console.warn(message)\n  }\n}\nmvc.versionGuard(global._mvc)\nglobal._mvc = mvc.version\n\n// crypto\nmvc.crypto = {}\nmvc.crypto.BN = require('./lib/crypto/bn')\nmvc.crypto.ECDSA = require('./lib/crypto/ecdsa')\nmvc.crypto.Hash = require('./lib/crypto/hash')\nmvc.crypto.Random = require('./lib/crypto/random')\nmvc.crypto.Point = require('./lib/crypto/point')\nmvc.crypto.Signature = require('./lib/crypto/signature')\n\n// encoding\nmvc.encoding = {}\nmvc.encoding.Base58 = require('./lib/encoding/base58')\nmvc.encoding.Base58Check = require('./lib/encoding/base58check')\nmvc.encoding.BufferReader = require('./lib/encoding/bufferreader')\nmvc.encoding.BufferWriter = require('./lib/encoding/bufferwriter')\nmvc.encoding.Varint = require('./lib/encoding/varint')\n\n// utilities\nmvc.util = {}\nmvc.util.js = require('./lib/util/js')\nmvc.util.preconditions = require('./lib/util/preconditions')\n\n// errors thrown by the library\nmvc.errors = require('./lib/errors')\n\n// main bitcoin library\nmvc.Address = require('./lib/address')\nmvc.Block = require('./lib/block')\nmvc.MerkleBlock = require('./lib/block/merkleblock')\nmvc.BlockHeader = require('./lib/block/blockheader')\nmvc.HDPrivateKey = require('./lib/hdprivatekey.js')\nmvc.HDPublicKey = require('./lib/hdpublickey.js')\nmvc.Networks = require('./lib/networks')\nmvc.Opcode = require('./lib/opcode')\nmvc.PrivateKey = require('./lib/privatekey')\nmvc.PublicKey = require('./lib/publickey')\nmvc.Script = require('./lib/script')\nmvc.Transaction = require('./lib/transaction')\n\n// dependencies, subject to change\nmvc.deps = {}\nmvc.deps.bnjs = require('bn.js')\nmvc.deps.bs58 = require('bs58')\nmvc.deps.Buffer = Buffer\nmvc.deps.elliptic = require('elliptic')\nmvc.deps._ = require('./lib/util/_')\n\n// Internal usage, exposed for testing/advanced tweaking\nmvc.Transaction.sighash = require('./lib/transaction/sighash')\n","// import Transation from \"@/transation/transation\";\r\n// import { hdWalletFromMnemonic } from \"@/utils/index\";\r\n// import HdWallet from \"@/utils/wallet/hd-wallet\";\r\nimport { Network, NodeName } from \"./enum/index\";\r\n// import { SDK } from \"@/utils/sdk\";\r\n// import Env from \"./config/config\";\r\nimport { MetaIDSdk } from \"./utils/metaid-sdk\";\r\nimport * as mvc from \"mvc-lib\";\r\n//import { mvc } from \"meta-contract\";\r\nconst mnemonic = `market pole juice jazz soda before slow never youth mutual figure climb`;\r\n\r\nasync function test() {\r\n  // console.log(\"123\", __env__);\r\n  // const metaidwallet = window.metaidwallet;\r\n  // console.log(\"connect\", metaidwallet);\r\n  // try {\r\n  //   const balance = await metaidwallet.getBalance().catch((e) => {\r\n  //     console.log(\"connect\", e);\r\n  //   });\r\n  //   console.log(\"connect\", balance);\r\n  // } catch (error) {\r\n  //   console.log(\"connect\", error);\r\n  // }\r\n}\r\n\r\n// test();\r\n\r\nexport async function init() {\r\n  try {\r\n    console.log(\"123\", mvc);\r\n\r\n    // const wallet = await hdWalletFromMnemonic(\r\n    //   mnemonic,\r\n    //   \"new\",\r\n    //   Env.WalletNetWork,\r\n    //   Env.WalletPath\r\n    // );\r\n    // const hdWallet = new HdWallet(wallet);\r\n    // const metaIdInfo = await hdWallet.getMetaIdInfo(hdWallet.rootAddress);\r\n\r\n    // const sdk = new SDK(Env.WalletNetWork);\r\n\r\n    // await sdk.initWallet(hdWallet);\r\n    // console.log(\"sdk\", sdk);\r\n    // const userInfo = {\r\n    //   ...metaIdInfo,\r\n    //   metaId: metaIdInfo.metaId,\r\n    //   name: metaIdInfo.name,\r\n    //   address: hdWallet.rootAddress,\r\n    //   showWallet: sdk,\r\n    //   loginType: \"MetaID\",\r\n    // };\r\n    // window.localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n    // console.log(\r\n    //   \"userInfo\",\r\n    //   JSON.parse(window.localStorage.getItem(\"userInfo\")!)\r\n    // );\r\n    // const Tx = new Transation(sdk);\r\n    // const result = await Tx.build_meta_data({\r\n    //   metaData: {\r\n    //     nodeName: NodeName.SimpleMicroblog,\r\n    //   },\r\n    //   payTos: [],\r\n    //   attachments: [],\r\n    //   needConfirm: false,\r\n    //   publicKey: userInfo.pubKey!,\r\n    //   opData: \"\",\r\n    //   txId: \"\",\r\n    // });\r\n\r\n    // const metaidjsSDK = new MetaIDSdk({\r\n    //   network: Network.testnet,\r\n    //   providerApi: {\r\n    //     base: {\r\n    //       network: Network.testnet,\r\n    //       showMoneyBaseUrl: `https://testmvc.showmoney.app`,\r\n    //       metaSvBaseUrl: `https://testmvc.showmoney.app/metasv`,\r\n    //     },\r\n    //   },\r\n    // });\r\n\r\n    //await metaidjsSDK.initWallet();\r\n    // await metaidjsSDK.initMetaIdNode();\r\n\r\n    //console.log(\"result\", metaidjsSDK, metaidjsSDK.wallet);\r\n\r\n    return;\r\n    const buzz = await metaidjsSDK.build_meta_data({\r\n      metaData: {\r\n        nodeName: NodeName.SimpleMicroblog,\r\n      },\r\n      payTos: [],\r\n      attachments: [],\r\n      needConfirm: false,\r\n      publicKey: \"\",\r\n      opData: \"\",\r\n      txId: \"\",\r\n    });\r\n    console.log(\"buzz\", buzz);\r\n    // if (!metaIdInfo.metaId) {\r\n    //   throw new Error(`metaid not exist`);\r\n    // }\r\n    // console.log(\"metaIdInfo\", metaIdInfo);\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n  }\r\n}\r\n\r\ninit();\r\n\r\n// const tx = new Transation();\r\n// tx.build_tx_data({\r\n//   payTos: [\r\n//     {\r\n//       amount: 1000,\r\n//       address: \"12313\",\r\n//     },\r\n//   ],\r\n//   opData: \"\",\r\n// });\r\n"],"names":["Network","init","global","base64.fromByteArray","ieee754.read","ieee754.write","base64.toByteArray","this","_","require$$0","require$$1","errorsModule","errors","BN","$","require$$2","bn","assert","brorandModule","utils","base","inherits_browserModule","util","inheritsModule","inherits","Base","require$$3","Point","common","require$$4","curve","hash","HmacDRBG","KeyPair","key","Signature","signature","curves","require$$5","require$$6","EC","ec","parseBytes","cachedProperty","JSUtil","Buffer.isBuffer","hashModule","ALPHABET","bs58","buffer","Base58","writeU8LE","writeU16LE","writeU32LE","writeI32LE","writeVarint","BufferWriter","isHex","decodeHex","writePushData","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","BufferReader","publickey","inputModule","require$$15","require$$16","require$$17","transactionModule","scriptModule","Hash","BlockHeader","idProperty","Transaction","blockModule","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31"],"mappings":"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C,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACnD,GAAG,IAAI,SAAS,CAAC;IACrB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACnD,GAAG,IAAI,SAAS,CAAC;IACrB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GA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AAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,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C;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACvD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SAClD,EAAE,IAAI,SAAS,CAAC;IACpB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACnD,GAAG,IAAI,SAAS,CAAC;IACrB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,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AG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACxD,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;SACnD,GAAG,IAAI,SAAS,CAAC;IACrB;SACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;SACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACpC,I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I,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,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hD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,GAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAChD,G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ACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,iEAAiE;IACzE,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,iEAAiE;IACzE,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,iEAAiE;IACzE,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,gEAAgE;IACxE,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,iEAAiE;IACzE,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,iEAAiE;YAClE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IACN,SAAQ,kEAAkE;IAC1E,SAAQ,kEAAkE;YACnE;WACD;IA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AE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAC9F,IAAA,IAAI,EAAE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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]}