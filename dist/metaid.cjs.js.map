{"version":3,"file":"metaid.cjs.js","sources":["../src/enum/index.ts","../src/main.ts"],"sourcesContent":["export enum NodeName {\r\n  ETHBinding = \"EVMBinding\",\r\n  MetaFile = \"MetaFile\",\r\n  NFTAvatar = \"NFTAvatar\",\r\n  PayComment = \"PayComment\",\r\n  PayLike = \"PayLike\",\r\n  PayFollow = \"PayFollow\",\r\n  SimpleMicroblog = \"SimpleMicroblog\",\r\n  SimpleRePost = \"SimpleRePost\",\r\n  SimpleGroupChat = \"SimpleGroupChat\",\r\n  SimpleFileGroupChat = \"SimpleFileGroupChat\",\r\n  SimpleCommunity = \"SimpleCommunity\",\r\n  SimpleCommunityJoin = \"SimpleCommunityJoin\",\r\n  SimpleGroupCreate = \"SimpleGroupCreate\",\r\n  ShowMsg = \"ShowMsg\",\r\n  NftIssue = \"NftIssue\",\r\n  NftGenesis = \"NftGenesis\",\r\n  NftSell = \"NftSell\",\r\n  NftCancel = \"NftCancel\",\r\n  nftBuy = \"nftBuy\",\r\n  FtGenesis = \"FtGenesis\",\r\n  FtIssue = \"FtIssue\",\r\n  SimpleRedEnvelope = \"SimpleRedEnvelope\",\r\n  OpenRedenvelope = \"OpenRedenvelope\",\r\n  SimplePublicShare = \"SimplePublicShare\",\r\n  LegalSellNft = \"sell_nft\",\r\n  Name = \"name\",\r\n  MetaNote = \"metanote\",\r\n  SimpleFileMsg = \"SimpleFileMsg\",\r\n  SimpleCreateAnnouncement = \"SimpleCreateAnnouncement\",\r\n  SimpleAnnouncementQuote = \"SimpleAnnouncementQuote\",\r\n  SimpleDAOCreate = \"SimpleDAOCreate\",\r\n  NftName = \"NftName\",\r\n  NftTransfer = \"NftTransfer\",\r\n  SendMoney = \"SendMoney\",\r\n  Phone = \"phone\",\r\n  Email = \"email\",\r\n  ShareChatMessage = \"ShareChatMessage\",\r\n  // DAO\r\n}\r\n\r\nexport enum SdkPayType {\r\n  SPACE = \"SPACE\",\r\n  BTC = \"BTC\",\r\n  ETH = \"ETH\",\r\n}\r\n\r\nexport enum IsEncrypt {\r\n  Yes = 1,\r\n  No = 0,\r\n}\r\n\r\nexport enum HdWalletChain {\r\n  MVC = \"mvc\",\r\n}\r\n\r\nexport enum Network {\r\n  mainnet = \"mainnet\",\r\n  testnet = \"testnet\",\r\n}\r\n\r\nexport enum WalletPath {\r\n  mainnet = 10001,\r\n  testnet = 236,\r\n}\r\n\r\nexport enum JobStepStatus {\r\n  Waiting = \"waiting\",\r\n  Success = \"success\",\r\n  Failed = \"failed\",\r\n}\r\n\r\nexport enum JobStatus {\r\n  Waiting = \"waiting\",\r\n  Success = \"success\",\r\n  Failed = \"failed\",\r\n}\r\n\r\nexport enum MetaIdTag {\r\n  mainnet = \"metaid\",\r\n  testnet = \"testmetaid\",\r\n}\r\n\r\nexport enum MetaNameOp {\r\n  register = 1,\r\n  renew = 2,\r\n  updataInfo = 3,\r\n}\r\n\r\nexport enum MetaNameReqType {\r\n  register = \"register\",\r\n  renew = \"renew\",\r\n  updataInfo = \"updateinfo\",\r\n}\r\n\r\nexport enum MetaNameReqCode {\r\n  register = 1,\r\n  renew = 21,\r\n  updataInfo = 22,\r\n}\r\n\r\nexport enum Chains {\r\n  MVC = \"mvc\",\r\n  ETH = \"eth\",\r\n}\r\n\r\nexport enum MetaidTag {\r\n  test = \"testmetaid\",\r\n  main = \"metaid\",\r\n}\r\n","// import Transation from \"@/transation/transation\";\r\n// import { hdWalletFromMnemonic } from \"@/utils/index\";\r\n// import HdWallet from \"@/utils/wallet/hd-wallet\";\r\nimport { Network, NodeName } from \"./enum/index\";\r\n// import { SDK } from \"@/utils/sdk\";\r\n// import Env from \"./config/config\";\r\nimport { MetaIDSdk } from \"./utils/metaid-sdk\";\r\n\r\nconst mnemonic = `market pole juice jazz soda before slow never youth mutual figure climb`;\r\n\r\nasync function test() {\r\n  // console.log(\"123\", __env__);\r\n  // const metaidwallet = window.metaidwallet;\r\n  // console.log(\"connect\", metaidwallet);\r\n  // try {\r\n  //   const balance = await metaidwallet.getBalance().catch((e) => {\r\n  //     console.log(\"connect\", e);\r\n  //   });\r\n  //   console.log(\"connect\", balance);\r\n  // } catch (error) {\r\n  //   console.log(\"connect\", error);\r\n  // }\r\n}\r\n\r\n// test();\r\n\r\nexport async function init() {\r\n  try {\r\n    console.log(\"123\", 123);\r\n    // const wallet = await hdWalletFromMnemonic(\r\n    //   mnemonic,\r\n    //   \"new\",\r\n    //   Env.WalletNetWork,\r\n    //   Env.WalletPath\r\n    // );\r\n    // const hdWallet = new HdWallet(wallet);\r\n    // const metaIdInfo = await hdWallet.getMetaIdInfo(hdWallet.rootAddress);\r\n\r\n    // const sdk = new SDK(Env.WalletNetWork);\r\n\r\n    // await sdk.initWallet(hdWallet);\r\n    // console.log(\"sdk\", sdk);\r\n    // const userInfo = {\r\n    //   ...metaIdInfo,\r\n    //   metaId: metaIdInfo.metaId,\r\n    //   name: metaIdInfo.name,\r\n    //   address: hdWallet.rootAddress,\r\n    //   showWallet: sdk,\r\n    //   loginType: \"MetaID\",\r\n    // };\r\n    // window.localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n    // console.log(\r\n    //   \"userInfo\",\r\n    //   JSON.parse(window.localStorage.getItem(\"userInfo\")!)\r\n    // );\r\n    // const Tx = new Transation(sdk);\r\n    // const result = await Tx.build_meta_data({\r\n    //   metaData: {\r\n    //     nodeName: NodeName.SimpleMicroblog,\r\n    //   },\r\n    //   payTos: [],\r\n    //   attachments: [],\r\n    //   needConfirm: false,\r\n    //   publicKey: userInfo.pubKey!,\r\n    //   opData: \"\",\r\n    //   txId: \"\",\r\n    // });\r\n\r\n    // const metaidjsSDK = new MetaIDSdk({\r\n    //   network: Network.testnet,\r\n    //   providerApi: {\r\n    //     base: {\r\n    //       network: Network.testnet,\r\n    //       showMoneyBaseUrl: `https://testmvc.showmoney.app`,\r\n    //       metaSvBaseUrl: `https://testmvc.showmoney.app/metasv`,\r\n    //     },\r\n    //   },\r\n    // });\r\n\r\n    // await metaidjsSDK.initWallet();\r\n    // await metaidjsSDK.initMetaIdNode();\r\n\r\n    //console.log(\"result\", metaidjsSDK);\r\n\r\n    return;\r\n    const buzz = await metaidjsSDK.build_meta_data({\r\n      metaData: {\r\n        nodeName: NodeName.SimpleMicroblog,\r\n      },\r\n      payTos: [],\r\n      attachments: [],\r\n      needConfirm: false,\r\n      publicKey: \"\",\r\n      opData: \"\",\r\n      txId: \"\",\r\n    });\r\n    console.log(\"buzz\", buzz);\r\n    // if (!metaIdInfo.metaId) {\r\n    //   throw new Error(`metaid not exist`);\r\n    // }\r\n    // console.log(\"metaIdInfo\", metaIdInfo);\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n  }\r\n}\r\n\r\n//init();\r\n\r\n// const tx = new Transation();\r\n// tx.build_tx_data({\r\n//   payTos: [\r\n//     {\r\n//       amount: 1000,\r\n//       address: \"12313\",\r\n//     },\r\n//   ],\r\n//   opData: \"\",\r\n// });\r\n"],"names":[],"mappings":"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"}